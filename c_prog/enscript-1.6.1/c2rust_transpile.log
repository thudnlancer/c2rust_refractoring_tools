2025-04-16 00:55:22,509 [INFO] Running: c2rust transpile -e compile_commands.json
2025-04-16 00:55:27,182 [INFO] c2rust transpile succeeded
2025-04-16 00:55:27,183 [INFO] Running: cargo build
2025-04-16 00:55:28,093 [INFO] Updating `rsproxy` index
2025-04-16 00:55:28,921 [INFO] Compiling proc-macro2 v1.0.94
2025-04-16 00:55:28,922 [INFO] Compiling unicode-ident v1.0.18
2025-04-16 00:55:29,241 [INFO] Compiling syn v1.0.109
2025-04-16 00:55:29,444 [INFO] Compiling libc v0.2.171
2025-04-16 00:55:29,703 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-16 00:55:31,426 [INFO] Compiling quote v1.0.40
2025-04-16 00:55:34,843 [INFO] Compiling c2rust-bitfields-derive v0.2.1
2025-04-16 00:55:35,676 [INFO] Compiling c2rust-bitfields v0.3.0
2025-04-16 00:55:36,455 [INFO] warning: unused label
2025-04-16 00:55:36,456 [INFO] --> afmlib/afmparse.rs:1309:9
2025-04-16 00:55:36,456 [INFO] |
2025-04-16 00:55:36,456 [INFO] 1309 |         'c_3699: {
2025-04-16 00:55:36,456 [INFO] |         ^^^^^^^
2025-04-16 00:55:36,456 [INFO] |
2025-04-16 00:55:36,457 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-16 00:55:36,457 [INFO] 
2025-04-16 00:55:36,459 [INFO] warning: unused import: `::libc`
2025-04-16 00:55:36,460 [INFO] --> compat/getopt.rs:1:5
2025-04-16 00:55:36,460 [INFO] |
2025-04-16 00:55:36,460 [INFO] 1 | use ::libc;
2025-04-16 00:55:36,460 [INFO] |     ^^^^^^
2025-04-16 00:55:36,461 [INFO] |
2025-04-16 00:55:36,461 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-16 00:55:36,461 [INFO] 
2025-04-16 00:55:36,461 [INFO] warning: unused import: `::libc`
2025-04-16 00:55:36,462 [INFO] --> compat/getopt1.rs:1:5
2025-04-16 00:55:36,462 [INFO] |
2025-04-16 00:55:36,462 [INFO] 1 | use ::libc;
2025-04-16 00:55:36,463 [INFO] |     ^^^^^^
2025-04-16 00:55:36,463 [INFO] 
2025-04-16 00:55:36,464 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,464 [INFO] --> compat/regex.rs:15502:33
2025-04-16 00:55:36,464 [INFO] |
2025-04-16 00:55:36,465 [INFO] 15502 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,465 [INFO] |                       ^
2025-04-16 00:55:36,465 [INFO] ...
2025-04-16 00:55:36,466 [INFO] 15507 | ...                   })
2025-04-16 00:55:36,466 [INFO] |                        ^
2025-04-16 00:55:36,467 [INFO] |
2025-04-16 00:55:36,467 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-16 00:55:36,469 [INFO] help: remove these parentheses
2025-04-16 00:55:36,469 [INFO] |
2025-04-16 00:55:36,469 [INFO] 15502 ~                                 if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,469 [INFO] 15503 |                                     0 as libc::c_int
2025-04-16 00:55:36,469 [INFO] ...
2025-04-16 00:55:36,470 [INFO] 15506 |                                     1 as libc::c_int
2025-04-16 00:55:36,470 [INFO] 15507 ~                                 }
2025-04-16 00:55:36,470 [INFO] |
2025-04-16 00:55:36,470 [INFO] 
2025-04-16 00:55:36,472 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,472 [INFO] --> compat/regex.rs:16491:37
2025-04-16 00:55:36,472 [INFO] |
2025-04-16 00:55:36,474 [INFO] 16491 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,474 [INFO] |                       ^
2025-04-16 00:55:36,474 [INFO] ...
2025-04-16 00:55:36,474 [INFO] 16496 | ...                   })
2025-04-16 00:55:36,474 [INFO] |                        ^
2025-04-16 00:55:36,475 [INFO] |
2025-04-16 00:55:36,475 [INFO] help: remove these parentheses
2025-04-16 00:55:36,475 [INFO] |
2025-04-16 00:55:36,475 [INFO] 16491 ~                                     if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,476 [INFO] 16492 |                                         0 as libc::c_int
2025-04-16 00:55:36,476 [INFO] ...
2025-04-16 00:55:36,477 [INFO] 16495 |                                         1 as libc::c_int
2025-04-16 00:55:36,477 [INFO] 16496 ~                                     }
2025-04-16 00:55:36,477 [INFO] |
2025-04-16 00:55:36,478 [INFO] 
2025-04-16 00:55:36,478 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,478 [INFO] --> compat/regex.rs:16753:29
2025-04-16 00:55:36,479 [INFO] |
2025-04-16 00:55:36,479 [INFO] 16753 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,479 [INFO] |                       ^
2025-04-16 00:55:36,480 [INFO] ...
2025-04-16 00:55:36,480 [INFO] 16758 | ...                   })
2025-04-16 00:55:36,480 [INFO] |                        ^
2025-04-16 00:55:36,480 [INFO] |
2025-04-16 00:55:36,481 [INFO] help: remove these parentheses
2025-04-16 00:55:36,481 [INFO] |
2025-04-16 00:55:36,481 [INFO] 16753 ~                             if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,481 [INFO] 16754 |                                 0 as libc::c_int
2025-04-16 00:55:36,481 [INFO] ...
2025-04-16 00:55:36,482 [INFO] 16757 |                                 1 as libc::c_int
2025-04-16 00:55:36,482 [INFO] 16758 ~                             }
2025-04-16 00:55:36,482 [INFO] |
2025-04-16 00:55:36,482 [INFO] 
2025-04-16 00:55:36,483 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,483 [INFO] --> compat/regex.rs:17041:29
2025-04-16 00:55:36,483 [INFO] |
2025-04-16 00:55:36,483 [INFO] 17041 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,483 [INFO] |                       ^
2025-04-16 00:55:36,484 [INFO] ...
2025-04-16 00:55:36,484 [INFO] 17046 | ...                   })
2025-04-16 00:55:36,484 [INFO] |                        ^
2025-04-16 00:55:36,485 [INFO] |
2025-04-16 00:55:36,485 [INFO] help: remove these parentheses
2025-04-16 00:55:36,485 [INFO] |
2025-04-16 00:55:36,485 [INFO] 17041 ~                             if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,485 [INFO] 17042 |                                 0 as libc::c_int
2025-04-16 00:55:36,485 [INFO] ...
2025-04-16 00:55:36,486 [INFO] 17045 |                                 1 as libc::c_int
2025-04-16 00:55:36,486 [INFO] 17046 ~                             }
2025-04-16 00:55:36,486 [INFO] |
2025-04-16 00:55:36,486 [INFO] 
2025-04-16 00:55:36,486 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,487 [INFO] --> compat/regex.rs:17138:29
2025-04-16 00:55:36,487 [INFO] |
2025-04-16 00:55:36,488 [INFO] 17138 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,488 [INFO] |                       ^
2025-04-16 00:55:36,488 [INFO] ...
2025-04-16 00:55:36,488 [INFO] 17143 | ...                   })
2025-04-16 00:55:36,488 [INFO] |                        ^
2025-04-16 00:55:36,489 [INFO] |
2025-04-16 00:55:36,489 [INFO] help: remove these parentheses
2025-04-16 00:55:36,489 [INFO] |
2025-04-16 00:55:36,489 [INFO] 17138 ~                             if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,489 [INFO] 17139 |                                 0 as libc::c_int
2025-04-16 00:55:36,490 [INFO] ...
2025-04-16 00:55:36,490 [INFO] 17142 |                                 1 as libc::c_int
2025-04-16 00:55:36,490 [INFO] 17143 ~                             }
2025-04-16 00:55:36,490 [INFO] |
2025-04-16 00:55:36,490 [INFO] 
2025-04-16 00:55:36,490 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,491 [INFO] --> compat/regex.rs:17294:29
2025-04-16 00:55:36,491 [INFO] |
2025-04-16 00:55:36,491 [INFO] 17294 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,492 [INFO] |                       ^
2025-04-16 00:55:36,492 [INFO] ...
2025-04-16 00:55:36,492 [INFO] 17300 | ...                   })
2025-04-16 00:55:36,492 [INFO] |                        ^
2025-04-16 00:55:36,492 [INFO] |
2025-04-16 00:55:36,493 [INFO] help: remove these parentheses
2025-04-16 00:55:36,493 [INFO] |
2025-04-16 00:55:36,493 [INFO] 17294 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,493 [INFO] 17295 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,493 [INFO] ...
2025-04-16 00:55:36,494 [INFO] 17299 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,494 [INFO] 17300 ~                             }
2025-04-16 00:55:36,494 [INFO] |
2025-04-16 00:55:36,495 [INFO] 
2025-04-16 00:55:36,496 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,498 [INFO] --> compat/regex.rs:17306:29
2025-04-16 00:55:36,498 [INFO] |
2025-04-16 00:55:36,498 [INFO] 17306 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,499 [INFO] |                       ^
2025-04-16 00:55:36,499 [INFO] ...
2025-04-16 00:55:36,499 [INFO] 17310 | ...                   })
2025-04-16 00:55:36,500 [INFO] |                        ^
2025-04-16 00:55:36,500 [INFO] |
2025-04-16 00:55:36,500 [INFO] help: remove these parentheses
2025-04-16 00:55:36,500 [INFO] |
2025-04-16 00:55:36,500 [INFO] 17306 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,500 [INFO] 17307 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,501 [INFO] 17308 |                             } else {
2025-04-16 00:55:36,502 [INFO] 17309 |                                 *d as libc::c_int
2025-04-16 00:55:36,502 [INFO] 17310 ~                             }
2025-04-16 00:55:36,502 [INFO] |
2025-04-16 00:55:36,502 [INFO] 
2025-04-16 00:55:36,502 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,503 [INFO] --> compat/regex.rs:17333:29
2025-04-16 00:55:36,503 [INFO] |
2025-04-16 00:55:36,503 [INFO] 17333 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,504 [INFO] |                       ^
2025-04-16 00:55:36,504 [INFO] ...
2025-04-16 00:55:36,505 [INFO] 17339 | ...                   })
2025-04-16 00:55:36,505 [INFO] |                        ^
2025-04-16 00:55:36,505 [INFO] |
2025-04-16 00:55:36,505 [INFO] help: remove these parentheses
2025-04-16 00:55:36,505 [INFO] |
2025-04-16 00:55:36,506 [INFO] 17333 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,506 [INFO] 17334 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,506 [INFO] ...
2025-04-16 00:55:36,506 [INFO] 17338 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,506 [INFO] 17339 ~                             }
2025-04-16 00:55:36,506 [INFO] |
2025-04-16 00:55:36,507 [INFO] 
2025-04-16 00:55:36,507 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,508 [INFO] --> compat/regex.rs:17345:29
2025-04-16 00:55:36,508 [INFO] |
2025-04-16 00:55:36,508 [INFO] 17345 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,508 [INFO] |                       ^
2025-04-16 00:55:36,509 [INFO] ...
2025-04-16 00:55:36,509 [INFO] 17349 | ...                   })
2025-04-16 00:55:36,510 [INFO] |                        ^
2025-04-16 00:55:36,510 [INFO] |
2025-04-16 00:55:36,510 [INFO] help: remove these parentheses
2025-04-16 00:55:36,510 [INFO] |
2025-04-16 00:55:36,511 [INFO] 17345 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,511 [INFO] 17346 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,512 [INFO] 17347 |                             } else {
2025-04-16 00:55:36,512 [INFO] 17348 |                                 *d as libc::c_int
2025-04-16 00:55:36,512 [INFO] 17349 ~                             }
2025-04-16 00:55:36,512 [INFO] |
2025-04-16 00:55:36,512 [INFO] 
2025-04-16 00:55:36,512 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,512 [INFO] --> compat/regex.rs:17363:25
2025-04-16 00:55:36,512 [INFO] |
2025-04-16 00:55:36,512 [INFO] 17363 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,512 [INFO] |                         ^
2025-04-16 00:55:36,513 [INFO] ...
2025-04-16 00:55:36,513 [INFO] 17367 |                         })
2025-04-16 00:55:36,514 [INFO] |                          ^
2025-04-16 00:55:36,514 [INFO] |
2025-04-16 00:55:36,514 [INFO] help: remove these parentheses
2025-04-16 00:55:36,515 [INFO] |
2025-04-16 00:55:36,515 [INFO] 17363 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,515 [INFO] 17364 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,515 [INFO] 17365 |                         } else {
2025-04-16 00:55:36,515 [INFO] 17366 |                             *d as libc::c_int
2025-04-16 00:55:36,516 [INFO] 17367 ~                         }
2025-04-16 00:55:36,516 [INFO] |
2025-04-16 00:55:36,516 [INFO] 
2025-04-16 00:55:36,516 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,516 [INFO] --> compat/regex.rs:17376:33
2025-04-16 00:55:36,516 [INFO] |
2025-04-16 00:55:36,516 [INFO] 17376 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,516 [INFO] |                       ^
2025-04-16 00:55:36,517 [INFO] ...
2025-04-16 00:55:36,517 [INFO] 17382 | ...                   })
2025-04-16 00:55:36,517 [INFO] |                        ^
2025-04-16 00:55:36,517 [INFO] |
2025-04-16 00:55:36,517 [INFO] help: remove these parentheses
2025-04-16 00:55:36,517 [INFO] |
2025-04-16 00:55:36,517 [INFO] 17376 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,517 [INFO] 17377 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,517 [INFO] ...
2025-04-16 00:55:36,518 [INFO] 17381 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,518 [INFO] 17382 ~                                 }
2025-04-16 00:55:36,518 [INFO] |
2025-04-16 00:55:36,518 [INFO] 
2025-04-16 00:55:36,518 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,518 [INFO] --> compat/regex.rs:17397:29
2025-04-16 00:55:36,518 [INFO] |
2025-04-16 00:55:36,519 [INFO] 17397 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,519 [INFO] |                       ^
2025-04-16 00:55:36,519 [INFO] ...
2025-04-16 00:55:36,520 [INFO] 17403 | ...                   })
2025-04-16 00:55:36,520 [INFO] |                        ^
2025-04-16 00:55:36,520 [INFO] |
2025-04-16 00:55:36,520 [INFO] help: remove these parentheses
2025-04-16 00:55:36,520 [INFO] |
2025-04-16 00:55:36,521 [INFO] 17397 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,521 [INFO] 17398 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:36,521 [INFO] ...
2025-04-16 00:55:36,521 [INFO] 17402 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,521 [INFO] 17403 ~                             }
2025-04-16 00:55:36,521 [INFO] |
2025-04-16 00:55:36,521 [INFO] 
2025-04-16 00:55:36,521 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,522 [INFO] --> compat/regex.rs:17408:29
2025-04-16 00:55:36,522 [INFO] |
2025-04-16 00:55:36,522 [INFO] 17408 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,522 [INFO] |                       ^
2025-04-16 00:55:36,523 [INFO] ...
2025-04-16 00:55:36,523 [INFO] 17412 | ...                   })
2025-04-16 00:55:36,523 [INFO] |                        ^
2025-04-16 00:55:36,523 [INFO] |
2025-04-16 00:55:36,523 [INFO] help: remove these parentheses
2025-04-16 00:55:36,523 [INFO] |
2025-04-16 00:55:36,523 [INFO] 17408 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,524 [INFO] 17409 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,524 [INFO] 17410 |                             } else {
2025-04-16 00:55:36,524 [INFO] 17411 |                                 *d as libc::c_int
2025-04-16 00:55:36,524 [INFO] 17412 ~                             }
2025-04-16 00:55:36,524 [INFO] |
2025-04-16 00:55:36,524 [INFO] 
2025-04-16 00:55:36,524 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,525 [INFO] --> compat/regex.rs:17439:33
2025-04-16 00:55:36,525 [INFO] |
2025-04-16 00:55:36,525 [INFO] 17439 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,525 [INFO] |                       ^
2025-04-16 00:55:36,525 [INFO] ...
2025-04-16 00:55:36,525 [INFO] 17443 | ...                   })
2025-04-16 00:55:36,525 [INFO] |                        ^
2025-04-16 00:55:36,527 [INFO] |
2025-04-16 00:55:36,527 [INFO] help: remove these parentheses
2025-04-16 00:55:36,527 [INFO] |
2025-04-16 00:55:36,527 [INFO] 17439 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,527 [INFO] 17440 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,528 [INFO] 17441 |                                 } else {
2025-04-16 00:55:36,528 [INFO] 17442 |                                     *d as libc::c_int
2025-04-16 00:55:36,529 [INFO] 17443 ~                                 }
2025-04-16 00:55:36,530 [INFO] |
2025-04-16 00:55:36,530 [INFO] 
2025-04-16 00:55:36,530 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,530 [INFO] --> compat/regex.rs:17495:33
2025-04-16 00:55:36,530 [INFO] |
2025-04-16 00:55:36,531 [INFO] 17495 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,531 [INFO] |                       ^
2025-04-16 00:55:36,531 [INFO] ...
2025-04-16 00:55:36,532 [INFO] 17499 | ...                   })
2025-04-16 00:55:36,533 [INFO] |                        ^
2025-04-16 00:55:36,533 [INFO] |
2025-04-16 00:55:36,534 [INFO] help: remove these parentheses
2025-04-16 00:55:36,534 [INFO] |
2025-04-16 00:55:36,534 [INFO] 17495 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:36,536 [INFO] 17496 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:36,536 [INFO] 17497 |                                 } else {
2025-04-16 00:55:36,536 [INFO] 17498 |                                     *d as libc::c_int
2025-04-16 00:55:36,536 [INFO] 17499 ~                                 }
2025-04-16 00:55:36,536 [INFO] |
2025-04-16 00:55:36,537 [INFO] 
2025-04-16 00:55:36,537 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:36,537 [INFO] --> compat/regex.rs:17661:37
2025-04-16 00:55:36,537 [INFO] |
2025-04-16 00:55:36,538 [INFO] 17661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,538 [INFO] |                       ^
2025-04-16 00:55:36,538 [INFO] ...
2025-04-16 00:55:36,538 [INFO] 17666 | ...                   })
2025-04-16 00:55:36,539 [INFO] |                        ^
2025-04-16 00:55:36,539 [INFO] |
2025-04-16 00:55:36,539 [INFO] help: remove these parentheses
2025-04-16 00:55:36,539 [INFO] |
2025-04-16 00:55:36,539 [INFO] 17661 ~                                     if (fail_stack.stack).is_null() {
2025-04-16 00:55:36,540 [INFO] 17662 |                                         0 as libc::c_int
2025-04-16 00:55:36,541 [INFO] ...
2025-04-16 00:55:36,541 [INFO] 17665 |                                         1 as libc::c_int
2025-04-16 00:55:36,541 [INFO] 17666 ~                                     }
2025-04-16 00:55:36,541 [INFO] |
2025-04-16 00:55:36,541 [INFO] 
2025-04-16 00:55:36,541 [INFO] warning: unnecessary parentheses around method argument
2025-04-16 00:55:36,542 [INFO] --> compat/regex.rs:18011:13
2025-04-16 00:55:36,542 [INFO] |
2025-04-16 00:55:36,542 [INFO] 18011 |             (if dend == end_match_1 {
2025-04-16 00:55:36,543 [INFO] |             ^
2025-04-16 00:55:36,543 [INFO] ...
2025-04-16 00:55:36,543 [INFO] 18015 |             }),
2025-04-16 00:55:36,544 [INFO] |              ^
2025-04-16 00:55:36,544 [INFO] |
2025-04-16 00:55:36,544 [INFO] help: remove these parentheses
2025-04-16 00:55:36,544 [INFO] |
2025-04-16 00:55:36,544 [INFO] 18011 ~             if dend == end_match_1 {
2025-04-16 00:55:36,544 [INFO] 18012 |                 string1
2025-04-16 00:55:36,545 [INFO] 18013 |             } else {
2025-04-16 00:55:36,545 [INFO] 18014 |                 string2.offset(-(size1 as isize))
2025-04-16 00:55:36,545 [INFO] 18015 ~             },
2025-04-16 00:55:36,545 [INFO] |
2025-04-16 00:55:36,546 [INFO] 
2025-04-16 00:55:36,546 [INFO] warning: unused label
2025-04-16 00:55:36,547 [INFO] --> src/psgen.rs:4554:5
2025-04-16 00:55:36,547 [INFO] |
2025-04-16 00:55:36,547 [INFO] 4554 |     'c_18653: {
2025-04-16 00:55:36,547 [INFO] |     ^^^^^^^^
2025-04-16 00:55:36,547 [INFO] 
2025-04-16 00:55:36,548 [INFO] warning: unused label
2025-04-16 00:55:36,548 [INFO] --> src/psgen.rs:4629:5
2025-04-16 00:55:36,549 [INFO] |
2025-04-16 00:55:36,549 [INFO] 4629 |     'c_8716: {
2025-04-16 00:55:36,549 [INFO] |     ^^^^^^^
2025-04-16 00:55:36,549 [INFO] 
2025-04-16 00:55:36,550 [INFO] warning: unnecessary parentheses around function argument
2025-04-16 00:55:36,550 [INFO] --> states/prims.rs:467:17
2025-04-16 00:55:36,551 [INFO] |
2025-04-16 00:55:36,551 [INFO] 467 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-16 00:55:36,551 [INFO] |                 ^
2025-04-16 00:55:36,551 [INFO] ...
2025-04-16 00:55:36,551 [INFO] 472 |                 }),
2025-04-16 00:55:36,552 [INFO] |                  ^
2025-04-16 00:55:36,552 [INFO] |
2025-04-16 00:55:36,553 [INFO] help: remove these parentheses
2025-04-16 00:55:36,553 [INFO] |
2025-04-16 00:55:36,554 [INFO] 467 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-16 00:55:36,554 [INFO] 468 |                     &mut (*n).u.re.compiled
2025-04-16 00:55:36,555 [INFO] ...
2025-04-16 00:55:36,555 [INFO] 471 |                     &mut (*n).u.re.compiled
2025-04-16 00:55:36,556 [INFO] 472 ~                 },
2025-04-16 00:55:36,556 [INFO] |
2025-04-16 00:55:36,556 [INFO] 
2025-04-16 00:55:36,556 [INFO] warning: unnecessary parentheses around function argument
2025-04-16 00:55:36,557 [INFO] --> states/prims.rs:523:17
2025-04-16 00:55:36,557 [INFO] |
2025-04-16 00:55:36,557 [INFO] 523 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-16 00:55:36,557 [INFO] |                 ^
2025-04-16 00:55:36,557 [INFO] ...
2025-04-16 00:55:36,557 [INFO] 528 |                 }),
2025-04-16 00:55:36,559 [INFO] |                  ^
2025-04-16 00:55:36,559 [INFO] |
2025-04-16 00:55:36,560 [INFO] help: remove these parentheses
2025-04-16 00:55:36,560 [INFO] |
2025-04-16 00:55:36,560 [INFO] 523 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-16 00:55:36,560 [INFO] 524 |                     &mut (*n).u.re.compiled
2025-04-16 00:55:36,560 [INFO] ...
2025-04-16 00:55:36,560 [INFO] 527 |                     &mut (*n).u.re.compiled
2025-04-16 00:55:36,560 [INFO] 528 ~                 },
2025-04-16 00:55:36,560 [INFO] |
2025-04-16 00:55:36,561 [INFO] 
2025-04-16 00:55:36,988 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:36,989 [INFO] --> compat/regex.rs:15755:9
2025-04-16 00:55:36,989 [INFO] |
2025-04-16 00:55:36,989 [INFO] 15753 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-16 00:55:36,989 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-16 00:55:36,989 [INFO] 15754 |         bufp,
2025-04-16 00:55:36,989 [INFO] 15755 |         0 as *mut libc::c_void,
2025-04-16 00:55:36,990 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-16 00:55:36,990 [INFO] |
2025-04-16 00:55:36,990 [INFO] = note: expected raw pointer `*const i8`
2025-04-16 00:55:36,990 [INFO] found raw pointer `*mut c_void`
2025-04-16 00:55:36,991 [INFO] note: function defined here
2025-04-16 00:55:36,991 [INFO] --> compat/regex.rs:15788:22
2025-04-16 00:55:36,991 [INFO] |
2025-04-16 00:55:36,992 [INFO] 15788 | unsafe extern "C" fn re_match_2_internal(
2025-04-16 00:55:36,992 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:36,992 [INFO] 15789 |     mut bufp: *mut re_pattern_buffer,
2025-04-16 00:55:36,993 [INFO] |     --------------------------------
2025-04-16 00:55:36,993 [INFO] 15790 |     mut string1: *const libc::c_char,
2025-04-16 00:55:36,993 [INFO] |     --------------------------------
2025-04-16 00:55:36,994 [INFO] 15791 |     mut size1: libc::c_int,
2025-04-16 00:55:36,994 [INFO] |     ----------------------
2025-04-16 00:55:36,994 [INFO] 15792 |     mut string2: *const libc::c_char,
2025-04-16 00:55:36,994 [INFO] |     --------------------------------
2025-04-16 00:55:36,994 [INFO] 15793 |     mut size2: libc::c_int,
2025-04-16 00:55:36,996 [INFO] |     ----------------------
2025-04-16 00:55:36,996 [INFO] 15794 |     mut pos: libc::c_int,
2025-04-16 00:55:36,997 [INFO] |     --------------------
2025-04-16 00:55:36,997 [INFO] 15795 |     mut regs: *mut re_registers,
2025-04-16 00:55:36,997 [INFO] |     ---------------------------
2025-04-16 00:55:36,998 [INFO] 15796 |     mut stop: libc::c_int,
2025-04-16 00:55:36,998 [INFO] |     ---------------------
2025-04-16 00:55:36,998 [INFO] 
2025-04-16 00:55:37,134 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-16 00:55:37,139 [INFO] warning: `c2rust_out` (lib) generated 24 warnings
2025-04-16 00:55:37,139 [INFO] error: could not compile `c2rust_out` due to previous error; 24 warnings emitted
2025-04-16 00:55:37,142 [ERROR] cargo build failed with code 101
2025-04-16 00:55:37,153 [INFO] Running: cargo build
2025-04-16 00:55:37,392 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-16 00:55:37,682 [INFO] error: expected type, found `0`
2025-04-16 00:55:37,682 [INFO] --> compat/regex.rs:15776:67
2025-04-16 00:55:37,682 [INFO] |
2025-04-16 00:55:37,682 [INFO] 15776 |         && *((*bufp).buffer).offsetre_opcode_t::from_libc_c_uint((0 as libc::c_int as isize))
2025-04-16 00:55:37,682 [INFO] |                                                                   ^ expected type
2025-04-16 00:55:37,682 [INFO] |
2025-04-16 00:55:37,683 [INFO] help: expressions must be enclosed in braces to be used as const generic arguments
2025-04-16 00:55:37,683 [INFO] |
2025-04-16 00:55:37,683 [INFO] 15776 ~         && *((*bufp).buffer).offsetre_opcode_t::{ from_libc_c_uint((0 as libc::c_int as isize))
2025-04-16 00:55:37,683 [INFO] 15777 |             as libc::c_uint == re_opcode_t::begbuf as libc::c_int as libc::c_uint
2025-04-16 00:55:37,683 [INFO] 15778 ~         && range } > 0 as libc::c_int
2025-04-16 00:55:37,684 [INFO] |
2025-04-16 00:55:37,684 [INFO] 
2025-04-16 00:55:37,685 [INFO] error: expected `{`, found `::`
2025-04-16 00:55:37,685 [INFO] --> compat/regex.rs:15776:47
2025-04-16 00:55:37,685 [INFO] |
2025-04-16 00:55:37,685 [INFO] 15776 |         && *((*bufp).buffer).offsetre_opcode_t::from_libc_c_uint((0 as libc::c_int as isize))
2025-04-16 00:55:37,685 [INFO] |                                               ^^ expected `{`
2025-04-16 00:55:37,686 [INFO] |
2025-04-16 00:55:37,686 [INFO] note: the `if` expression is missing a block after this condition
2025-04-16 00:55:37,686 [INFO] --> compat/regex.rs:15775:8
2025-04-16 00:55:37,686 [INFO] |
2025-04-16 00:55:37,686 [INFO] 15775 |       if (*bufp).used > 0 as libc::c_int as libc::c_ulong
2025-04-16 00:55:37,687 [INFO] |  ________^
2025-04-16 00:55:37,687 [INFO] 15776 | |         && *((*bufp).buffer).offsetre_opcode_t::from_libc_c_uint((0 as libc::c_int as isize))
2025-04-16 00:55:37,688 [INFO] | |______________________________________________^
2025-04-16 00:55:37,688 [INFO] help: try placing this code inside a block
2025-04-16 00:55:37,688 [INFO] |
2025-04-16 00:55:37,689 [INFO] 15776 ~         && *((*bufp).buffer).offsetre_opcode_t{ ::from_libc_c_uint((0 as libc::c_int as isize))
2025-04-16 00:55:37,689 [INFO] 15777 |             as libc::c_uint == re_opcode_t::begbuf as libc::c_int as libc::c_uint
2025-04-16 00:55:37,690 [INFO] 15778 ~         && range > 0 as libc::c_int }
2025-04-16 00:55:37,690 [INFO] |
2025-04-16 00:55:37,690 [INFO] 
2025-04-16 00:55:37,690 [INFO] error: expected type, found `3`
2025-04-16 00:55:37,690 [INFO] --> compat/regex.rs:16570:73
2025-04-16 00:55:37,691 [INFO] |
2025-04-16 00:55:37,691 [INFO] 16570 | ...                   && *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,691 [INFO] |                                                                   ^ expected type
2025-04-16 00:55:37,691 [INFO] |
2025-04-16 00:55:37,692 [INFO] help: expressions must be enclosed in braces to be used as const generic arguments
2025-04-16 00:55:37,692 [INFO] |
2025-04-16 00:55:37,692 [INFO] 16570 ~                             && *p1.offsetre_opcode_t::{ from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,692 [INFO] 16571 |                                 as libc::c_uint
2025-04-16 00:55:37,693 [INFO] 16572 |                                 == re_opcode_t::start_memory as libc::c_int as libc::c_uint
2025-04-16 00:55:37,693 [INFO] 16573 |                             && *p1.offset(4 as libc::c_int as isize) as libc::c_int
2025-04-16 00:55:37,693 [INFO] 16574 ~                                 == *p as libc::c_int }
2025-04-16 00:55:37,693 [INFO] |
2025-04-16 00:55:37,694 [INFO] 
2025-04-16 00:55:37,694 [INFO] error: expected `{`, found `::`
2025-04-16 00:55:37,694 [INFO] --> compat/regex.rs:16570:53
2025-04-16 00:55:37,694 [INFO] |
2025-04-16 00:55:37,694 [INFO] 16570 | ...                   && *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,695 [INFO] |                                               ^^ expected `{`
2025-04-16 00:55:37,695 [INFO] |
2025-04-16 00:55:37,695 [INFO] note: the `if` expression is missing a block after this condition
2025-04-16 00:55:37,695 [INFO] --> compat/regex.rs:16567:28
2025-04-16 00:55:37,696 [INFO] |
2025-04-16 00:55:37,696 [INFO] 16567 |                           if mcnt < 0 as libc::c_int
2025-04-16 00:55:37,697 [INFO] |  ____________________________^
2025-04-16 00:55:37,697 [INFO] 16568 | |                             && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:37,697 [INFO] 16569 | |                                 == re_opcode_t::on_failure_jump as libc::c_int as libc::c_uint
2025-04-16 00:55:37,698 [INFO] 16570 | |                             && *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,698 [INFO] | |____________________________________________________^
2025-04-16 00:55:37,698 [INFO] help: try placing this code inside a block
2025-04-16 00:55:37,698 [INFO] |
2025-04-16 00:55:37,699 [INFO] 16570 ~                             && *p1.offsetre_opcode_t{ ::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,699 [INFO] 16571 |                                 as libc::c_uint
2025-04-16 00:55:37,699 [INFO] 16572 |                                 == re_opcode_t::start_memory as libc::c_int as libc::c_uint
2025-04-16 00:55:37,700 [INFO] 16573 |                             && *p1.offset(4 as libc::c_int as isize) as libc::c_int
2025-04-16 00:55:37,701 [INFO] 16574 ~                                 == *p as libc::c_int }
2025-04-16 00:55:37,701 [INFO] |
2025-04-16 00:55:37,701 [INFO] 
2025-04-16 00:55:37,701 [INFO] error: expected type, found `3`
2025-04-16 00:55:37,701 [INFO] --> compat/regex.rs:17017:69
2025-04-16 00:55:37,701 [INFO] |
2025-04-16 00:55:37,702 [INFO] 17017 |                         if *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,702 [INFO] |                                                                     ^ expected type
2025-04-16 00:55:37,702 [INFO] |
2025-04-16 00:55:37,703 [INFO] help: expressions must be enclosed in braces to be used as const generic arguments
2025-04-16 00:55:37,703 [INFO] |
2025-04-16 00:55:37,703 [INFO] 17017 ~                         if *p1.offsetre_opcode_t::{ from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,703 [INFO] 17018 |                             as libc::c_uint == re_opcode_t::exactn as libc::c_int as libc::c_uint
2025-04-16 00:55:37,703 [INFO] 17019 |                             && *p1.offset(5 as libc::c_int as isize) as libc::c_int
2025-04-16 00:55:37,704 [INFO] 17020 ~                                 != c_0 as libc::c_int }
2025-04-16 00:55:37,704 [INFO] |
2025-04-16 00:55:37,704 [INFO] 
2025-04-16 00:55:37,704 [INFO] error: expected `{`, found `::`
2025-04-16 00:55:37,704 [INFO] --> compat/regex.rs:17017:49
2025-04-16 00:55:37,704 [INFO] |
2025-04-16 00:55:37,705 [INFO] 17017 |                         if *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,705 [INFO] |                                                 ^^ expected `{`
2025-04-16 00:55:37,705 [INFO] |
2025-04-16 00:55:37,705 [INFO] note: the `if` expression is missing a block after this condition
2025-04-16 00:55:37,705 [INFO] --> compat/regex.rs:17017:28
2025-04-16 00:55:37,705 [INFO] |
2025-04-16 00:55:37,706 [INFO] 17017 |                         if *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,707 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:37,707 [INFO] help: try placing this code inside a block
2025-04-16 00:55:37,707 [INFO] |
2025-04-16 00:55:37,707 [INFO] 17017 ~                         if *p1.offsetre_opcode_t{ ::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,708 [INFO] 17018 |                             as libc::c_uint == re_opcode_t::exactn as libc::c_int as libc::c_uint
2025-04-16 00:55:37,709 [INFO] 17019 |                             && *p1.offset(5 as libc::c_int as isize) as libc::c_int
2025-04-16 00:55:37,709 [INFO] 17020 ~                                 != c_0 as libc::c_int }
2025-04-16 00:55:37,709 [INFO] |
2025-04-16 00:55:37,709 [INFO] 
2025-04-16 00:55:37,710 [INFO] error: expected type, found `3`
2025-04-16 00:55:37,710 [INFO] --> compat/regex.rs:17060:69
2025-04-16 00:55:37,710 [INFO] |
2025-04-16 00:55:37,710 [INFO] 17060 |                         if *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,710 [INFO] |                                                                     ^ expected type
2025-04-16 00:55:37,711 [INFO] |
2025-04-16 00:55:37,711 [INFO] help: expressions must be enclosed in braces to be used as const generic arguments
2025-04-16 00:55:37,711 [INFO] |
2025-04-16 00:55:37,712 [INFO] 17060 ~                         if *p1.offsetre_opcode_t::{ from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,712 [INFO] 17061 |                             as libc::c_uint == re_opcode_t::exactn as libc::c_int as libc::c_uint
2025-04-16 00:55:37,712 [INFO] ...
2025-04-16 00:55:37,712 [INFO] 17072 |                                         << *p1.offset(4 as libc::c_int as isize) as libc::c_int
2025-04-16 00:55:37,713 [INFO] 17073 ~                                             % 8 as libc::c_int != 0) }
2025-04-16 00:55:37,713 [INFO] |
2025-04-16 00:55:37,713 [INFO] 
2025-04-16 00:55:37,714 [INFO] error: expected `{`, found `::`
2025-04-16 00:55:37,714 [INFO] --> compat/regex.rs:17060:49
2025-04-16 00:55:37,714 [INFO] |
2025-04-16 00:55:37,714 [INFO] 17060 |                         if *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,714 [INFO] |                                                 ^^ expected `{`
2025-04-16 00:55:37,715 [INFO] |
2025-04-16 00:55:37,716 [INFO] note: the `if` expression is missing a block after this condition
2025-04-16 00:55:37,716 [INFO] --> compat/regex.rs:17060:28
2025-04-16 00:55:37,716 [INFO] |
2025-04-16 00:55:37,716 [INFO] 17060 |                         if *p1.offsetre_opcode_t::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,716 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:37,716 [INFO] help: try placing this code inside a block
2025-04-16 00:55:37,717 [INFO] |
2025-04-16 00:55:37,717 [INFO] 17060 ~                         if *p1.offsetre_opcode_t{ ::from_libc_c_uint((3 as libc::c_int as isize))
2025-04-16 00:55:37,717 [INFO] 17061 |                             as libc::c_uint == re_opcode_t::exactn as libc::c_int as libc::c_uint
2025-04-16 00:55:37,718 [INFO] ...
2025-04-16 00:55:37,718 [INFO] 17072 |                                         << *p1.offset(4 as libc::c_int as isize) as libc::c_int
2025-04-16 00:55:37,718 [INFO] 17073 ~                                             % 8 as libc::c_int != 0) }
2025-04-16 00:55:37,718 [INFO] |
2025-04-16 00:55:37,719 [INFO] 
2025-04-16 00:55:37,830 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,830 [INFO] --> compat/regex.rs:496:55
2025-04-16 00:55:37,831 [INFO] |
2025-04-16 00:55:37,831 [INFO] 496 |             return reg_errcode_t::REG_ESPACE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,831 [INFO] |                                                       ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,831 [INFO] 
2025-04-16 00:55:37,836 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,836 [INFO] --> compat/regex.rs:743:63
2025-04-16 00:55:37,836 [INFO] |
2025-04-16 00:55:37,837 [INFO] 743 |                     return reg_errcode_t::REG_EBRACK as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,837 [INFO] |                                                               ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,837 [INFO] 
2025-04-16 00:55:37,838 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,838 [INFO] --> compat/regex.rs:961:67
2025-04-16 00:55:37,839 [INFO] |
2025-04-16 00:55:37,839 [INFO] 961 |                         return reg_errcode_t::REG_EBRACK as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,839 [INFO] |                                                                   ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,839 [INFO] 
2025-04-16 00:55:37,839 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,840 [INFO] --> compat/regex.rs:977:72
2025-04-16 00:55:37,840 [INFO] |
2025-04-16 00:55:37,840 [INFO] 977 | ...                   return reg_errcode_t::REG_EESCAPE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,840 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,840 [INFO] 
2025-04-16 00:55:37,840 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,841 [INFO] --> compat/regex.rs:1004:71
2025-04-16 00:55:37,841 [INFO] |
2025-04-16 00:55:37,841 [INFO] 1004 | ...                   return reg_errcode_t::REG_ERANGE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,841 [INFO] |                                                                 ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,842 [INFO] 
2025-04-16 00:55:37,842 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,842 [INFO] --> compat/regex.rs:1069:75
2025-04-16 00:55:37,842 [INFO] |
2025-04-16 00:55:37,843 [INFO] 1069 | ...                   return reg_errcode_t::REG_EBRACK as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,843 [INFO] |                                                                 ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,844 [INFO] 
2025-04-16 00:55:37,844 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,844 [INFO] --> compat/regex.rs:1194:79
2025-04-16 00:55:37,845 [INFO] |
2025-04-16 00:55:37,845 [INFO] 1194 | ...                   return reg_errcode_t::REG_ECTYPE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,845 [INFO] |                                                                 ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,845 [INFO] 
2025-04-16 00:55:37,845 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,850 [INFO] --> compat/regex.rs:1207:79
2025-04-16 00:55:37,850 [INFO] |
2025-04-16 00:55:37,851 [INFO] 1207 | ...                   return reg_errcode_t::REG_EBRACK as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,851 [INFO] |                                                                 ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,852 [INFO] 
2025-04-16 00:55:37,853 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,853 [INFO] --> compat/regex.rs:1469:64
2025-04-16 00:55:37,853 [INFO] |
2025-04-16 00:55:37,853 [INFO] 1469 |                     return reg_errcode_t::REG_EESCAPE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,854 [INFO] |                                                                ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,854 [INFO] 
2025-04-16 00:55:37,855 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,855 [INFO] --> compat/regex.rs:1742:84
2025-04-16 00:55:37,856 [INFO] |
2025-04-16 00:55:37,856 [INFO] 1742 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,857 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,857 [INFO] 
2025-04-16 00:55:37,857 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,857 [INFO] --> compat/regex.rs:2190:84
2025-04-16 00:55:37,858 [INFO] |
2025-04-16 00:55:37,858 [INFO] 2190 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,858 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,858 [INFO] 
2025-04-16 00:55:37,859 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,859 [INFO] --> compat/regex.rs:2616:84
2025-04-16 00:55:37,859 [INFO] |
2025-04-16 00:55:37,859 [INFO] 2616 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,860 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,860 [INFO] 
2025-04-16 00:55:37,860 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,861 [INFO] --> compat/regex.rs:3064:84
2025-04-16 00:55:37,861 [INFO] |
2025-04-16 00:55:37,862 [INFO] 3064 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,862 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,862 [INFO] 
2025-04-16 00:55:37,862 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,862 [INFO] --> compat/regex.rs:3490:84
2025-04-16 00:55:37,863 [INFO] |
2025-04-16 00:55:37,863 [INFO] 3490 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,864 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,864 [INFO] 
2025-04-16 00:55:37,864 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,864 [INFO] --> compat/regex.rs:3938:84
2025-04-16 00:55:37,864 [INFO] |
2025-04-16 00:55:37,864 [INFO] 3938 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,865 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,865 [INFO] 
2025-04-16 00:55:37,865 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,866 [INFO] --> compat/regex.rs:4364:84
2025-04-16 00:55:37,866 [INFO] |
2025-04-16 00:55:37,867 [INFO] 4364 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,867 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,867 [INFO] 
2025-04-16 00:55:37,867 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,867 [INFO] --> compat/regex.rs:4812:84
2025-04-16 00:55:37,868 [INFO] |
2025-04-16 00:55:37,869 [INFO] 4812 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,869 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,869 [INFO] 
2025-04-16 00:55:37,869 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,869 [INFO] --> compat/regex.rs:5238:84
2025-04-16 00:55:37,870 [INFO] |
2025-04-16 00:55:37,870 [INFO] 5238 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,871 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,871 [INFO] 
2025-04-16 00:55:37,871 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,871 [INFO] --> compat/regex.rs:5686:84
2025-04-16 00:55:37,872 [INFO] |
2025-04-16 00:55:37,872 [INFO] 5686 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,872 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,873 [INFO] 
2025-04-16 00:55:37,874 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,875 [INFO] --> compat/regex.rs:6112:84
2025-04-16 00:55:37,875 [INFO] |
2025-04-16 00:55:37,875 [INFO] 6112 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,875 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,876 [INFO] 
2025-04-16 00:55:37,876 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,877 [INFO] --> compat/regex.rs:6560:84
2025-04-16 00:55:37,877 [INFO] |
2025-04-16 00:55:37,877 [INFO] 6560 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,877 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,878 [INFO] 
2025-04-16 00:55:37,878 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,878 [INFO] --> compat/regex.rs:6986:84
2025-04-16 00:55:37,879 [INFO] |
2025-04-16 00:55:37,879 [INFO] 6986 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,879 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,880 [INFO] 
2025-04-16 00:55:37,880 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,880 [INFO] --> compat/regex.rs:7434:84
2025-04-16 00:55:37,881 [INFO] |
2025-04-16 00:55:37,881 [INFO] 7434 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,881 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,881 [INFO] 
2025-04-16 00:55:37,882 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,882 [INFO] --> compat/regex.rs:7860:84
2025-04-16 00:55:37,882 [INFO] |
2025-04-16 00:55:37,882 [INFO] 7860 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,883 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,883 [INFO] 
2025-04-16 00:55:37,883 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,883 [INFO] --> compat/regex.rs:8308:84
2025-04-16 00:55:37,884 [INFO] |
2025-04-16 00:55:37,884 [INFO] 8308 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,884 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,884 [INFO] 
2025-04-16 00:55:37,885 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,885 [INFO] --> compat/regex.rs:8734:84
2025-04-16 00:55:37,885 [INFO] |
2025-04-16 00:55:37,886 [INFO] 8734 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,886 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,886 [INFO] 
2025-04-16 00:55:37,886 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,886 [INFO] --> compat/regex.rs:9182:84
2025-04-16 00:55:37,886 [INFO] |
2025-04-16 00:55:37,887 [INFO] 9182 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,888 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,889 [INFO] 
2025-04-16 00:55:37,889 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,889 [INFO] --> compat/regex.rs:9608:84
2025-04-16 00:55:37,890 [INFO] |
2025-04-16 00:55:37,890 [INFO] 9608 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,891 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,891 [INFO] 
2025-04-16 00:55:37,891 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,892 [INFO] --> compat/regex.rs:10056:84
2025-04-16 00:55:37,892 [INFO] |
2025-04-16 00:55:37,892 [INFO] 10056 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,893 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,893 [INFO] 
2025-04-16 00:55:37,893 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,893 [INFO] --> compat/regex.rs:10482:84
2025-04-16 00:55:37,894 [INFO] |
2025-04-16 00:55:37,895 [INFO] 10482 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,895 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,895 [INFO] 
2025-04-16 00:55:37,896 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,896 [INFO] --> compat/regex.rs:10930:84
2025-04-16 00:55:37,896 [INFO] |
2025-04-16 00:55:37,896 [INFO] 10930 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,897 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,897 [INFO] 
2025-04-16 00:55:37,897 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,897 [INFO] --> compat/regex.rs:11356:84
2025-04-16 00:55:37,897 [INFO] |
2025-04-16 00:55:37,897 [INFO] 11356 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,898 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,898 [INFO] 
2025-04-16 00:55:37,898 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,898 [INFO] --> compat/regex.rs:11804:84
2025-04-16 00:55:37,898 [INFO] |
2025-04-16 00:55:37,899 [INFO] 11804 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,899 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,899 [INFO] 
2025-04-16 00:55:37,900 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,900 [INFO] --> compat/regex.rs:12230:84
2025-04-16 00:55:37,900 [INFO] |
2025-04-16 00:55:37,900 [INFO] 12230 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,900 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,901 [INFO] 
2025-04-16 00:55:37,901 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,901 [INFO] --> compat/regex.rs:12678:84
2025-04-16 00:55:37,902 [INFO] |
2025-04-16 00:55:37,902 [INFO] 12678 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,902 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,903 [INFO] 
2025-04-16 00:55:37,903 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,903 [INFO] --> compat/regex.rs:13104:84
2025-04-16 00:55:37,903 [INFO] |
2025-04-16 00:55:37,903 [INFO] 13104 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,903 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,904 [INFO] 
2025-04-16 00:55:37,905 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,905 [INFO] --> compat/regex.rs:13552:84
2025-04-16 00:55:37,906 [INFO] |
2025-04-16 00:55:37,906 [INFO] 13552 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,906 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,906 [INFO] 
2025-04-16 00:55:37,907 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,907 [INFO] --> compat/regex.rs:13739:67
2025-04-16 00:55:37,907 [INFO] |
2025-04-16 00:55:37,909 [INFO] 13739 |                         return reg_errcode_t::REG_EBRACE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,909 [INFO] |                                                                   ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,909 [INFO] 
2025-04-16 00:55:37,909 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,909 [INFO] --> compat/regex.rs:13833:70
2025-04-16 00:55:37,911 [INFO] |
2025-04-16 00:55:37,911 [INFO] 13833 | ...                   return reg_errcode_t::REG_BADBR as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,911 [INFO] |                                                                ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,912 [INFO] 
2025-04-16 00:55:37,912 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,912 [INFO] --> compat/regex.rs:13847:75
2025-04-16 00:55:37,912 [INFO] |
2025-04-16 00:55:37,913 [INFO] 13847 | ...                   return reg_errcode_t::REG_EBRACE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,913 [INFO] |                                                                 ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,913 [INFO] 
2025-04-16 00:55:37,913 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,913 [INFO] --> compat/regex.rs:13870:74
2025-04-16 00:55:37,913 [INFO] |
2025-04-16 00:55:37,914 [INFO] 13870 | ...                   return reg_errcode_t::REG_BADBR as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,914 [INFO] |                                                                ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,914 [INFO] 
2025-04-16 00:55:37,914 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,914 [INFO] --> compat/regex.rs:13881:79
2025-04-16 00:55:37,915 [INFO] |
2025-04-16 00:55:37,916 [INFO] 13881 | ...                   return reg_errcode_t::REG_BADRPT as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,916 [INFO] |                                                                 ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,916 [INFO] 
2025-04-16 00:55:37,916 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,916 [INFO] --> compat/regex.rs:14352:68
2025-04-16 00:55:37,917 [INFO] |
2025-04-16 00:55:37,918 [INFO] 14352 |                         return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,918 [INFO] |                                                                    ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,918 [INFO] 
2025-04-16 00:55:37,918 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,919 [INFO] --> compat/regex.rs:14591:67
2025-04-16 00:55:37,919 [INFO] |
2025-04-16 00:55:37,919 [INFO] 14591 |                         return reg_errcode_t::REG_BADRPT as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,919 [INFO] |                                                                   ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,920 [INFO] 
2025-04-16 00:55:37,920 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,920 [INFO] --> compat/regex.rs:14646:80
2025-04-16 00:55:37,920 [INFO] |
2025-04-16 00:55:37,921 [INFO] 14646 | ...                   return reg_errcode_t::REG_EESCAPE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,921 [INFO] |                                                                  ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,921 [INFO] 
2025-04-16 00:55:37,921 [INFO] error[E0433]: failed to resolve: could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,921 [INFO] --> compat/regex.rs:15115:51
2025-04-16 00:55:37,922 [INFO] |
2025-04-16 00:55:37,922 [INFO] 15115 |         return reg_errcode_t::REG_EPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,922 [INFO] |                                                   ^^^^^^^^^^^^^ could not find `reg_errcode_t` in `libc`
2025-04-16 00:55:37,922 [INFO] 
2025-04-16 00:55:37,965 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:37,966 [INFO] --> compat/regex.rs:496:87
2025-04-16 00:55:37,966 [INFO] |
2025-04-16 00:55:37,966 [INFO] 496 |             return reg_errcode_t::REG_ESPACE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,966 [INFO] |                                                                                       ^^^^^ not found in this scope
2025-04-16 00:55:37,966 [INFO] |
2025-04-16 00:55:37,967 [INFO] help: consider importing one of these items
2025-04-16 00:55:37,967 [INFO] |
2025-04-16 00:55:37,967 [INFO] 2   | use core::ffi::c_int;
2025-04-16 00:55:37,968 [INFO] |
2025-04-16 00:55:37,968 [INFO] 2   | use libc::c_int;
2025-04-16 00:55:37,968 [INFO] |
2025-04-16 00:55:37,968 [INFO] 2   | use std::ffi::c_int;
2025-04-16 00:55:37,969 [INFO] |
2025-04-16 00:55:37,969 [INFO] 2   | use std::os::raw::c_int;
2025-04-16 00:55:37,969 [INFO] |
2025-04-16 00:55:37,969 [INFO] 
2025-04-16 00:55:37,971 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:37,971 [INFO] --> compat/regex.rs:743:95
2025-04-16 00:55:37,972 [INFO] |
2025-04-16 00:55:37,972 [INFO] 743 |                     return reg_errcode_t::REG_EBRACK as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,972 [INFO] |                                                                                               ^^^^^ not found in this scope
2025-04-16 00:55:37,972 [INFO] |
2025-04-16 00:55:37,972 [INFO] help: consider importing one of these items
2025-04-16 00:55:37,973 [INFO] |
2025-04-16 00:55:37,973 [INFO] 2   | use core::ffi::c_int;
2025-04-16 00:55:37,974 [INFO] |
2025-04-16 00:55:37,974 [INFO] 2   | use libc::c_int;
2025-04-16 00:55:37,974 [INFO] |
2025-04-16 00:55:37,974 [INFO] 2   | use std::ffi::c_int;
2025-04-16 00:55:37,974 [INFO] |
2025-04-16 00:55:37,974 [INFO] 2   | use std::os::raw::c_int;
2025-04-16 00:55:37,975 [INFO] |
2025-04-16 00:55:37,975 [INFO] 
2025-04-16 00:55:37,977 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:37,977 [INFO] --> compat/regex.rs:961:99
2025-04-16 00:55:37,977 [INFO] |
2025-04-16 00:55:37,977 [INFO] 961 |                         return reg_errcode_t::REG_EBRACK as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,977 [INFO] |                                                                                                   ^^^^^ not found in this scope
2025-04-16 00:55:37,978 [INFO] |
2025-04-16 00:55:37,978 [INFO] help: consider importing one of these items
2025-04-16 00:55:37,978 [INFO] |
2025-04-16 00:55:37,979 [INFO] 2   | use core::ffi::c_int;
2025-04-16 00:55:37,979 [INFO] |
2025-04-16 00:55:37,979 [INFO] 2   | use libc::c_int;
2025-04-16 00:55:37,980 [INFO] |
2025-04-16 00:55:37,981 [INFO] 2   | use std::ffi::c_int;
2025-04-16 00:55:37,981 [INFO] |
2025-04-16 00:55:37,981 [INFO] 2   | use std::os::raw::c_int;
2025-04-16 00:55:37,981 [INFO] |
2025-04-16 00:55:37,981 [INFO] 
2025-04-16 00:55:37,982 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:37,983 [INFO] --> compat/regex.rs:977:104
2025-04-16 00:55:37,983 [INFO] |
2025-04-16 00:55:37,983 [INFO] 977 | ...                   return reg_errcode_t::REG_EESCAPE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,983 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:37,984 [INFO] |
2025-04-16 00:55:37,984 [INFO] help: consider importing one of these items
2025-04-16 00:55:37,984 [INFO] |
2025-04-16 00:55:37,985 [INFO] 2   | use core::ffi::c_int;
2025-04-16 00:55:37,985 [INFO] |
2025-04-16 00:55:37,985 [INFO] 2   | use libc::c_int;
2025-04-16 00:55:37,986 [INFO] |
2025-04-16 00:55:37,986 [INFO] 2   | use std::ffi::c_int;
2025-04-16 00:55:37,986 [INFO] |
2025-04-16 00:55:37,986 [INFO] 2   | use std::os::raw::c_int;
2025-04-16 00:55:37,986 [INFO] |
2025-04-16 00:55:37,987 [INFO] 
2025-04-16 00:55:37,989 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:37,989 [INFO] --> compat/regex.rs:1004:103
2025-04-16 00:55:37,989 [INFO] |
2025-04-16 00:55:37,989 [INFO] 1004 | ...                   return reg_errcode_t::REG_ERANGE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,989 [INFO] |                                                                                                 ^^^^^ not found in this scope
2025-04-16 00:55:37,989 [INFO] |
2025-04-16 00:55:37,990 [INFO] help: consider importing one of these items
2025-04-16 00:55:37,990 [INFO] |
2025-04-16 00:55:37,990 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:37,991 [INFO] |
2025-04-16 00:55:37,992 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:37,992 [INFO] |
2025-04-16 00:55:37,993 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:37,993 [INFO] |
2025-04-16 00:55:37,993 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:37,993 [INFO] |
2025-04-16 00:55:37,993 [INFO] 
2025-04-16 00:55:37,995 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:37,995 [INFO] --> compat/regex.rs:1069:107
2025-04-16 00:55:37,996 [INFO] |
2025-04-16 00:55:37,996 [INFO] 1069 | ...                   return reg_errcode_t::REG_EBRACK as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:37,996 [INFO] |                                                                                                 ^^^^^ not found in this scope
2025-04-16 00:55:37,996 [INFO] |
2025-04-16 00:55:37,996 [INFO] help: consider importing one of these items
2025-04-16 00:55:37,997 [INFO] |
2025-04-16 00:55:37,998 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:37,998 [INFO] |
2025-04-16 00:55:37,998 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:37,998 [INFO] |
2025-04-16 00:55:37,998 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:37,998 [INFO] |
2025-04-16 00:55:37,999 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:37,999 [INFO] |
2025-04-16 00:55:38,000 [INFO] 
2025-04-16 00:55:38,001 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,002 [INFO] --> compat/regex.rs:1194:111
2025-04-16 00:55:38,002 [INFO] |
2025-04-16 00:55:38,002 [INFO] 1194 | ...                   return reg_errcode_t::REG_ECTYPE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,002 [INFO] |                                                                                                 ^^^^^ not found in this scope
2025-04-16 00:55:38,002 [INFO] |
2025-04-16 00:55:38,002 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,003 [INFO] |
2025-04-16 00:55:38,003 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,003 [INFO] |
2025-04-16 00:55:38,003 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,004 [INFO] |
2025-04-16 00:55:38,004 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,004 [INFO] |
2025-04-16 00:55:38,004 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,005 [INFO] |
2025-04-16 00:55:38,006 [INFO] 
2025-04-16 00:55:38,007 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,008 [INFO] --> compat/regex.rs:1207:111
2025-04-16 00:55:38,008 [INFO] |
2025-04-16 00:55:38,008 [INFO] 1207 | ...                   return reg_errcode_t::REG_EBRACK as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,008 [INFO] |                                                                                                 ^^^^^ not found in this scope
2025-04-16 00:55:38,009 [INFO] |
2025-04-16 00:55:38,009 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,009 [INFO] |
2025-04-16 00:55:38,009 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,009 [INFO] |
2025-04-16 00:55:38,010 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,010 [INFO] |
2025-04-16 00:55:38,010 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,010 [INFO] |
2025-04-16 00:55:38,011 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,011 [INFO] |
2025-04-16 00:55:38,011 [INFO] 
2025-04-16 00:55:38,013 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,014 [INFO] --> compat/regex.rs:1469:96
2025-04-16 00:55:38,014 [INFO] |
2025-04-16 00:55:38,014 [INFO] 1469 |                     return reg_errcode_t::REG_EESCAPE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,015 [INFO] |                                                                                                ^^^^^ not found in this scope
2025-04-16 00:55:38,015 [INFO] |
2025-04-16 00:55:38,015 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,015 [INFO] |
2025-04-16 00:55:38,016 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,016 [INFO] |
2025-04-16 00:55:38,016 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,016 [INFO] |
2025-04-16 00:55:38,016 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,017 [INFO] |
2025-04-16 00:55:38,017 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,017 [INFO] |
2025-04-16 00:55:38,018 [INFO] 
2025-04-16 00:55:38,019 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,020 [INFO] --> compat/regex.rs:1742:116
2025-04-16 00:55:38,020 [INFO] |
2025-04-16 00:55:38,020 [INFO] 1742 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,020 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,020 [INFO] |
2025-04-16 00:55:38,021 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,021 [INFO] |
2025-04-16 00:55:38,021 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,022 [INFO] |
2025-04-16 00:55:38,022 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,022 [INFO] |
2025-04-16 00:55:38,022 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,023 [INFO] |
2025-04-16 00:55:38,023 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,023 [INFO] |
2025-04-16 00:55:38,024 [INFO] 
2025-04-16 00:55:38,025 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,026 [INFO] --> compat/regex.rs:2190:116
2025-04-16 00:55:38,026 [INFO] |
2025-04-16 00:55:38,027 [INFO] 2190 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,027 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,027 [INFO] |
2025-04-16 00:55:38,028 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,028 [INFO] |
2025-04-16 00:55:38,028 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,028 [INFO] |
2025-04-16 00:55:38,028 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,029 [INFO] |
2025-04-16 00:55:38,029 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,029 [INFO] |
2025-04-16 00:55:38,029 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,029 [INFO] |
2025-04-16 00:55:38,029 [INFO] 
2025-04-16 00:55:38,030 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,030 [INFO] --> compat/regex.rs:2616:116
2025-04-16 00:55:38,030 [INFO] |
2025-04-16 00:55:38,030 [INFO] 2616 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,030 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,030 [INFO] |
2025-04-16 00:55:38,031 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,031 [INFO] |
2025-04-16 00:55:38,031 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,031 [INFO] |
2025-04-16 00:55:38,031 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,031 [INFO] |
2025-04-16 00:55:38,032 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,032 [INFO] |
2025-04-16 00:55:38,032 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,032 [INFO] |
2025-04-16 00:55:38,032 [INFO] 
2025-04-16 00:55:38,034 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,034 [INFO] --> compat/regex.rs:3064:116
2025-04-16 00:55:38,035 [INFO] |
2025-04-16 00:55:38,035 [INFO] 3064 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,035 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,035 [INFO] |
2025-04-16 00:55:38,036 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,036 [INFO] |
2025-04-16 00:55:38,036 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,036 [INFO] |
2025-04-16 00:55:38,036 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,037 [INFO] |
2025-04-16 00:55:38,037 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,037 [INFO] |
2025-04-16 00:55:38,037 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,037 [INFO] |
2025-04-16 00:55:38,037 [INFO] 
2025-04-16 00:55:38,040 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,041 [INFO] --> compat/regex.rs:3490:116
2025-04-16 00:55:38,041 [INFO] |
2025-04-16 00:55:38,041 [INFO] 3490 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,042 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,042 [INFO] |
2025-04-16 00:55:38,042 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,042 [INFO] |
2025-04-16 00:55:38,042 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,043 [INFO] |
2025-04-16 00:55:38,043 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,044 [INFO] |
2025-04-16 00:55:38,045 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,045 [INFO] |
2025-04-16 00:55:38,046 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,047 [INFO] |
2025-04-16 00:55:38,047 [INFO] 
2025-04-16 00:55:38,047 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,048 [INFO] --> compat/regex.rs:3938:116
2025-04-16 00:55:38,048 [INFO] |
2025-04-16 00:55:38,048 [INFO] 3938 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,048 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,048 [INFO] |
2025-04-16 00:55:38,048 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,049 [INFO] |
2025-04-16 00:55:38,049 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,049 [INFO] |
2025-04-16 00:55:38,049 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,049 [INFO] |
2025-04-16 00:55:38,049 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,050 [INFO] |
2025-04-16 00:55:38,050 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,050 [INFO] |
2025-04-16 00:55:38,050 [INFO] 
2025-04-16 00:55:38,051 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,051 [INFO] --> compat/regex.rs:4364:116
2025-04-16 00:55:38,052 [INFO] |
2025-04-16 00:55:38,052 [INFO] 4364 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,052 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,052 [INFO] |
2025-04-16 00:55:38,053 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,053 [INFO] |
2025-04-16 00:55:38,053 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,054 [INFO] |
2025-04-16 00:55:38,054 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,054 [INFO] |
2025-04-16 00:55:38,054 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,054 [INFO] |
2025-04-16 00:55:38,054 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,055 [INFO] |
2025-04-16 00:55:38,056 [INFO] 
2025-04-16 00:55:38,057 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,057 [INFO] --> compat/regex.rs:4812:116
2025-04-16 00:55:38,057 [INFO] |
2025-04-16 00:55:38,058 [INFO] 4812 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,058 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,058 [INFO] |
2025-04-16 00:55:38,059 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,059 [INFO] |
2025-04-16 00:55:38,059 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,060 [INFO] |
2025-04-16 00:55:38,060 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,060 [INFO] |
2025-04-16 00:55:38,060 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,060 [INFO] |
2025-04-16 00:55:38,061 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,061 [INFO] |
2025-04-16 00:55:38,062 [INFO] 
2025-04-16 00:55:38,063 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,064 [INFO] --> compat/regex.rs:5238:116
2025-04-16 00:55:38,064 [INFO] |
2025-04-16 00:55:38,064 [INFO] 5238 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,064 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,064 [INFO] |
2025-04-16 00:55:38,065 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,065 [INFO] |
2025-04-16 00:55:38,065 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,065 [INFO] |
2025-04-16 00:55:38,065 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,066 [INFO] |
2025-04-16 00:55:38,066 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,066 [INFO] |
2025-04-16 00:55:38,066 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,066 [INFO] |
2025-04-16 00:55:38,066 [INFO] 
2025-04-16 00:55:38,068 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,069 [INFO] --> compat/regex.rs:5686:116
2025-04-16 00:55:38,069 [INFO] |
2025-04-16 00:55:38,069 [INFO] 5686 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,069 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,069 [INFO] |
2025-04-16 00:55:38,069 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,070 [INFO] |
2025-04-16 00:55:38,071 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,071 [INFO] |
2025-04-16 00:55:38,072 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,072 [INFO] |
2025-04-16 00:55:38,073 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,073 [INFO] |
2025-04-16 00:55:38,073 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,074 [INFO] |
2025-04-16 00:55:38,074 [INFO] 
2025-04-16 00:55:38,074 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,075 [INFO] --> compat/regex.rs:6112:116
2025-04-16 00:55:38,075 [INFO] |
2025-04-16 00:55:38,076 [INFO] 6112 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,076 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,077 [INFO] |
2025-04-16 00:55:38,077 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,077 [INFO] |
2025-04-16 00:55:38,078 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,078 [INFO] |
2025-04-16 00:55:38,078 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,079 [INFO] |
2025-04-16 00:55:38,079 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,079 [INFO] |
2025-04-16 00:55:38,080 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,080 [INFO] |
2025-04-16 00:55:38,080 [INFO] 
2025-04-16 00:55:38,080 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,081 [INFO] --> compat/regex.rs:6560:116
2025-04-16 00:55:38,081 [INFO] |
2025-04-16 00:55:38,081 [INFO] 6560 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,081 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,082 [INFO] |
2025-04-16 00:55:38,082 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,082 [INFO] |
2025-04-16 00:55:38,082 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,082 [INFO] |
2025-04-16 00:55:38,083 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,083 [INFO] |
2025-04-16 00:55:38,083 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,083 [INFO] |
2025-04-16 00:55:38,084 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,084 [INFO] |
2025-04-16 00:55:38,084 [INFO] 
2025-04-16 00:55:38,085 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,085 [INFO] --> compat/regex.rs:6986:116
2025-04-16 00:55:38,085 [INFO] |
2025-04-16 00:55:38,085 [INFO] 6986 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,085 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,085 [INFO] |
2025-04-16 00:55:38,086 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,086 [INFO] |
2025-04-16 00:55:38,086 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,086 [INFO] |
2025-04-16 00:55:38,086 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,086 [INFO] |
2025-04-16 00:55:38,086 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,087 [INFO] |
2025-04-16 00:55:38,087 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,087 [INFO] |
2025-04-16 00:55:38,087 [INFO] 
2025-04-16 00:55:38,090 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,090 [INFO] --> compat/regex.rs:7434:116
2025-04-16 00:55:38,091 [INFO] |
2025-04-16 00:55:38,091 [INFO] 7434 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,091 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,092 [INFO] |
2025-04-16 00:55:38,092 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,092 [INFO] |
2025-04-16 00:55:38,092 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,092 [INFO] |
2025-04-16 00:55:38,093 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,093 [INFO] |
2025-04-16 00:55:38,093 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,094 [INFO] |
2025-04-16 00:55:38,094 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,094 [INFO] |
2025-04-16 00:55:38,094 [INFO] 
2025-04-16 00:55:38,096 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,096 [INFO] --> compat/regex.rs:7860:116
2025-04-16 00:55:38,096 [INFO] |
2025-04-16 00:55:38,096 [INFO] 7860 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,097 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,097 [INFO] |
2025-04-16 00:55:38,098 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,098 [INFO] |
2025-04-16 00:55:38,098 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,098 [INFO] |
2025-04-16 00:55:38,098 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,098 [INFO] |
2025-04-16 00:55:38,099 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,099 [INFO] |
2025-04-16 00:55:38,099 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,100 [INFO] |
2025-04-16 00:55:38,100 [INFO] 
2025-04-16 00:55:38,102 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,102 [INFO] --> compat/regex.rs:8308:116
2025-04-16 00:55:38,102 [INFO] |
2025-04-16 00:55:38,103 [INFO] 8308 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,103 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,103 [INFO] |
2025-04-16 00:55:38,103 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,103 [INFO] |
2025-04-16 00:55:38,104 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,104 [INFO] |
2025-04-16 00:55:38,104 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,105 [INFO] |
2025-04-16 00:55:38,105 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,105 [INFO] |
2025-04-16 00:55:38,105 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,106 [INFO] |
2025-04-16 00:55:38,106 [INFO] 
2025-04-16 00:55:38,108 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,108 [INFO] --> compat/regex.rs:8734:116
2025-04-16 00:55:38,109 [INFO] |
2025-04-16 00:55:38,109 [INFO] 8734 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,109 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,109 [INFO] |
2025-04-16 00:55:38,109 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,110 [INFO] |
2025-04-16 00:55:38,110 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,110 [INFO] |
2025-04-16 00:55:38,111 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,111 [INFO] |
2025-04-16 00:55:38,112 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,112 [INFO] |
2025-04-16 00:55:38,112 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,112 [INFO] |
2025-04-16 00:55:38,112 [INFO] 
2025-04-16 00:55:38,114 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,114 [INFO] --> compat/regex.rs:9182:116
2025-04-16 00:55:38,114 [INFO] |
2025-04-16 00:55:38,115 [INFO] 9182 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,115 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,115 [INFO] |
2025-04-16 00:55:38,115 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,116 [INFO] |
2025-04-16 00:55:38,116 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,116 [INFO] |
2025-04-16 00:55:38,117 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,117 [INFO] |
2025-04-16 00:55:38,117 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,117 [INFO] |
2025-04-16 00:55:38,117 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,118 [INFO] |
2025-04-16 00:55:38,118 [INFO] 
2025-04-16 00:55:38,119 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,120 [INFO] --> compat/regex.rs:9608:116
2025-04-16 00:55:38,120 [INFO] |
2025-04-16 00:55:38,120 [INFO] 9608 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,120 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,120 [INFO] |
2025-04-16 00:55:38,120 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,121 [INFO] |
2025-04-16 00:55:38,121 [INFO] 2    | use core::ffi::c_int;
2025-04-16 00:55:38,121 [INFO] |
2025-04-16 00:55:38,121 [INFO] 2    | use libc::c_int;
2025-04-16 00:55:38,121 [INFO] |
2025-04-16 00:55:38,122 [INFO] 2    | use std::ffi::c_int;
2025-04-16 00:55:38,122 [INFO] |
2025-04-16 00:55:38,123 [INFO] 2    | use std::os::raw::c_int;
2025-04-16 00:55:38,123 [INFO] |
2025-04-16 00:55:38,123 [INFO] 
2025-04-16 00:55:38,125 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,126 [INFO] --> compat/regex.rs:10056:116
2025-04-16 00:55:38,126 [INFO] |
2025-04-16 00:55:38,126 [INFO] 10056 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,126 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,126 [INFO] |
2025-04-16 00:55:38,128 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,128 [INFO] |
2025-04-16 00:55:38,128 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,128 [INFO] |
2025-04-16 00:55:38,130 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,130 [INFO] |
2025-04-16 00:55:38,131 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,131 [INFO] |
2025-04-16 00:55:38,132 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,132 [INFO] |
2025-04-16 00:55:38,132 [INFO] 
2025-04-16 00:55:38,133 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,133 [INFO] --> compat/regex.rs:10482:116
2025-04-16 00:55:38,133 [INFO] |
2025-04-16 00:55:38,133 [INFO] 10482 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,133 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,134 [INFO] |
2025-04-16 00:55:38,134 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,134 [INFO] |
2025-04-16 00:55:38,134 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,134 [INFO] |
2025-04-16 00:55:38,134 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,135 [INFO] |
2025-04-16 00:55:38,136 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,136 [INFO] |
2025-04-16 00:55:38,136 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,136 [INFO] |
2025-04-16 00:55:38,137 [INFO] 
2025-04-16 00:55:38,137 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,137 [INFO] --> compat/regex.rs:10930:116
2025-04-16 00:55:38,137 [INFO] |
2025-04-16 00:55:38,138 [INFO] 10930 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,138 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,138 [INFO] |
2025-04-16 00:55:38,139 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,139 [INFO] |
2025-04-16 00:55:38,139 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,139 [INFO] |
2025-04-16 00:55:38,140 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,140 [INFO] |
2025-04-16 00:55:38,140 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,140 [INFO] |
2025-04-16 00:55:38,141 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,141 [INFO] |
2025-04-16 00:55:38,141 [INFO] 
2025-04-16 00:55:38,142 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,142 [INFO] --> compat/regex.rs:11356:116
2025-04-16 00:55:38,142 [INFO] |
2025-04-16 00:55:38,142 [INFO] 11356 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,143 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,143 [INFO] |
2025-04-16 00:55:38,143 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,143 [INFO] |
2025-04-16 00:55:38,144 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,144 [INFO] |
2025-04-16 00:55:38,144 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,144 [INFO] |
2025-04-16 00:55:38,144 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,145 [INFO] |
2025-04-16 00:55:38,145 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,145 [INFO] |
2025-04-16 00:55:38,145 [INFO] 
2025-04-16 00:55:38,147 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,147 [INFO] --> compat/regex.rs:11804:116
2025-04-16 00:55:38,148 [INFO] |
2025-04-16 00:55:38,148 [INFO] 11804 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,149 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,149 [INFO] |
2025-04-16 00:55:38,149 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,150 [INFO] |
2025-04-16 00:55:38,150 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,150 [INFO] |
2025-04-16 00:55:38,150 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,150 [INFO] |
2025-04-16 00:55:38,151 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,151 [INFO] |
2025-04-16 00:55:38,151 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,151 [INFO] |
2025-04-16 00:55:38,151 [INFO] 
2025-04-16 00:55:38,152 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,152 [INFO] --> compat/regex.rs:12230:116
2025-04-16 00:55:38,152 [INFO] |
2025-04-16 00:55:38,152 [INFO] 12230 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,152 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,153 [INFO] |
2025-04-16 00:55:38,153 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,153 [INFO] |
2025-04-16 00:55:38,153 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,153 [INFO] |
2025-04-16 00:55:38,153 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,154 [INFO] |
2025-04-16 00:55:38,154 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,154 [INFO] |
2025-04-16 00:55:38,154 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,155 [INFO] |
2025-04-16 00:55:38,155 [INFO] 
2025-04-16 00:55:38,157 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,157 [INFO] --> compat/regex.rs:12678:116
2025-04-16 00:55:38,157 [INFO] |
2025-04-16 00:55:38,157 [INFO] 12678 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,158 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,158 [INFO] |
2025-04-16 00:55:38,158 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,159 [INFO] |
2025-04-16 00:55:38,159 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,159 [INFO] |
2025-04-16 00:55:38,160 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,160 [INFO] |
2025-04-16 00:55:38,160 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,161 [INFO] |
2025-04-16 00:55:38,161 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,161 [INFO] |
2025-04-16 00:55:38,161 [INFO] 
2025-04-16 00:55:38,162 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,163 [INFO] --> compat/regex.rs:13104:116
2025-04-16 00:55:38,163 [INFO] |
2025-04-16 00:55:38,163 [INFO] 13104 | ...                   return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,163 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,163 [INFO] |
2025-04-16 00:55:38,164 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,165 [INFO] |
2025-04-16 00:55:38,165 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,165 [INFO] |
2025-04-16 00:55:38,165 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,165 [INFO] |
2025-04-16 00:55:38,165 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,166 [INFO] |
2025-04-16 00:55:38,166 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,166 [INFO] |
2025-04-16 00:55:38,166 [INFO] 
2025-04-16 00:55:38,168 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,168 [INFO] --> compat/regex.rs:13552:116
2025-04-16 00:55:38,168 [INFO] |
2025-04-16 00:55:38,168 [INFO] 13552 | ...                   return reg_errcode_t::REG_ESUBREG as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,168 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,169 [INFO] |
2025-04-16 00:55:38,169 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,169 [INFO] |
2025-04-16 00:55:38,170 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,170 [INFO] |
2025-04-16 00:55:38,170 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,170 [INFO] |
2025-04-16 00:55:38,170 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,171 [INFO] |
2025-04-16 00:55:38,171 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,171 [INFO] |
2025-04-16 00:55:38,171 [INFO] 
2025-04-16 00:55:38,173 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,173 [INFO] --> compat/regex.rs:13739:99
2025-04-16 00:55:38,173 [INFO] |
2025-04-16 00:55:38,174 [INFO] 13739 |                         return reg_errcode_t::REG_EBRACE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,174 [INFO] |                                                                                                   ^^^^^ not found in this scope
2025-04-16 00:55:38,175 [INFO] |
2025-04-16 00:55:38,175 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,176 [INFO] |
2025-04-16 00:55:38,176 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,176 [INFO] |
2025-04-16 00:55:38,177 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,177 [INFO] |
2025-04-16 00:55:38,177 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,177 [INFO] |
2025-04-16 00:55:38,177 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,177 [INFO] |
2025-04-16 00:55:38,180 [INFO] 
2025-04-16 00:55:38,180 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,180 [INFO] --> compat/regex.rs:13833:102
2025-04-16 00:55:38,180 [INFO] |
2025-04-16 00:55:38,180 [INFO] 13833 | ...                   return reg_errcode_t::REG_BADBR as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,180 [INFO] |                                                                                                ^^^^^ not found in this scope
2025-04-16 00:55:38,181 [INFO] |
2025-04-16 00:55:38,181 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,181 [INFO] |
2025-04-16 00:55:38,182 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,182 [INFO] |
2025-04-16 00:55:38,182 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,182 [INFO] |
2025-04-16 00:55:38,182 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,182 [INFO] |
2025-04-16 00:55:38,183 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,183 [INFO] |
2025-04-16 00:55:38,183 [INFO] 
2025-04-16 00:55:38,184 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,185 [INFO] --> compat/regex.rs:13847:107
2025-04-16 00:55:38,185 [INFO] |
2025-04-16 00:55:38,185 [INFO] 13847 | ...                   return reg_errcode_t::REG_EBRACE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,185 [INFO] |                                                                                                 ^^^^^ not found in this scope
2025-04-16 00:55:38,185 [INFO] |
2025-04-16 00:55:38,185 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,186 [INFO] |
2025-04-16 00:55:38,186 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,187 [INFO] |
2025-04-16 00:55:38,187 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,187 [INFO] |
2025-04-16 00:55:38,187 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,188 [INFO] |
2025-04-16 00:55:38,188 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,189 [INFO] |
2025-04-16 00:55:38,189 [INFO] 
2025-04-16 00:55:38,190 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,191 [INFO] --> compat/regex.rs:13870:106
2025-04-16 00:55:38,191 [INFO] |
2025-04-16 00:55:38,191 [INFO] 13870 | ...                   return reg_errcode_t::REG_BADBR as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,191 [INFO] |                                                                                                ^^^^^ not found in this scope
2025-04-16 00:55:38,192 [INFO] |
2025-04-16 00:55:38,192 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,192 [INFO] |
2025-04-16 00:55:38,192 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,193 [INFO] |
2025-04-16 00:55:38,193 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,193 [INFO] |
2025-04-16 00:55:38,193 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,193 [INFO] |
2025-04-16 00:55:38,194 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,194 [INFO] |
2025-04-16 00:55:38,195 [INFO] 
2025-04-16 00:55:38,196 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,196 [INFO] --> compat/regex.rs:13881:111
2025-04-16 00:55:38,196 [INFO] |
2025-04-16 00:55:38,197 [INFO] 13881 | ...                   return reg_errcode_t::REG_BADRPT as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,197 [INFO] |                                                                                                 ^^^^^ not found in this scope
2025-04-16 00:55:38,197 [INFO] |
2025-04-16 00:55:38,197 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,197 [INFO] |
2025-04-16 00:55:38,198 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,198 [INFO] |
2025-04-16 00:55:38,198 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,198 [INFO] |
2025-04-16 00:55:38,198 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,198 [INFO] |
2025-04-16 00:55:38,199 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,199 [INFO] |
2025-04-16 00:55:38,199 [INFO] 
2025-04-16 00:55:38,201 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,201 [INFO] --> compat/regex.rs:14352:100
2025-04-16 00:55:38,201 [INFO] |
2025-04-16 00:55:38,201 [INFO] 14352 |                         return reg_errcode_t::REG_ERPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,203 [INFO] |                                                                                                    ^^^^^ not found in this scope
2025-04-16 00:55:38,203 [INFO] |
2025-04-16 00:55:38,203 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,204 [INFO] |
2025-04-16 00:55:38,204 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,204 [INFO] |
2025-04-16 00:55:38,205 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,205 [INFO] |
2025-04-16 00:55:38,206 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,206 [INFO] |
2025-04-16 00:55:38,206 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,206 [INFO] |
2025-04-16 00:55:38,206 [INFO] 
2025-04-16 00:55:38,207 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,207 [INFO] --> compat/regex.rs:14591:99
2025-04-16 00:55:38,208 [INFO] |
2025-04-16 00:55:38,208 [INFO] 14591 |                         return reg_errcode_t::REG_BADRPT as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,208 [INFO] |                                                                                                   ^^^^^ not found in this scope
2025-04-16 00:55:38,208 [INFO] |
2025-04-16 00:55:38,208 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,209 [INFO] |
2025-04-16 00:55:38,209 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,209 [INFO] |
2025-04-16 00:55:38,210 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,210 [INFO] |
2025-04-16 00:55:38,210 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,210 [INFO] |
2025-04-16 00:55:38,210 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,211 [INFO] |
2025-04-16 00:55:38,211 [INFO] 
2025-04-16 00:55:38,212 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,212 [INFO] --> compat/regex.rs:14646:112
2025-04-16 00:55:38,212 [INFO] |
2025-04-16 00:55:38,212 [INFO] 14646 | ...                   return reg_errcode_t::REG_EESCAPE as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,213 [INFO] |                                                                                                  ^^^^^ not found in this scope
2025-04-16 00:55:38,213 [INFO] |
2025-04-16 00:55:38,213 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,214 [INFO] |
2025-04-16 00:55:38,214 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,214 [INFO] |
2025-04-16 00:55:38,214 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,214 [INFO] |
2025-04-16 00:55:38,215 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,215 [INFO] |
2025-04-16 00:55:38,215 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,215 [INFO] |
2025-04-16 00:55:38,215 [INFO] 
2025-04-16 00:55:38,216 [INFO] error[E0412]: cannot find type `c_int` in this scope
2025-04-16 00:55:38,216 [INFO] --> compat/regex.rs:15115:83
2025-04-16 00:55:38,216 [INFO] |
2025-04-16 00:55:38,216 [INFO] 15115 |         return reg_errcode_t::REG_EPAREN as libc::reg_errcode_t::from_libc_c_uint(c_int);
2025-04-16 00:55:38,216 [INFO] |                                                                                   ^^^^^ not found in this scope
2025-04-16 00:55:38,217 [INFO] |
2025-04-16 00:55:38,217 [INFO] help: consider importing one of these items
2025-04-16 00:55:38,217 [INFO] |
2025-04-16 00:55:38,217 [INFO] 2     | use core::ffi::c_int;
2025-04-16 00:55:38,217 [INFO] |
2025-04-16 00:55:38,217 [INFO] 2     | use libc::c_int;
2025-04-16 00:55:38,217 [INFO] |
2025-04-16 00:55:38,217 [INFO] 2     | use std::ffi::c_int;
2025-04-16 00:55:38,218 [INFO] |
2025-04-16 00:55:38,218 [INFO] 2     | use std::os::raw::c_int;
2025-04-16 00:55:38,218 [INFO] |
2025-04-16 00:55:38,218 [INFO] 
2025-04-16 00:55:38,227 [INFO] warning: unused label
2025-04-16 00:55:38,228 [INFO] --> afmlib/afmparse.rs:1500:9
2025-04-16 00:55:38,228 [INFO] |
2025-04-16 00:55:38,230 [INFO] 1500 |         'c_3684: {
2025-04-16 00:55:38,230 [INFO] |         ^^^^^^^
2025-04-16 00:55:38,230 [INFO] |
2025-04-16 00:55:38,230 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-16 00:55:38,230 [INFO] 
2025-04-16 00:55:38,231 [INFO] warning: unused import: `::libc`
2025-04-16 00:55:38,231 [INFO] --> compat/getopt.rs:1:5
2025-04-16 00:55:38,231 [INFO] |
2025-04-16 00:55:38,231 [INFO] 1 | use ::libc;
2025-04-16 00:55:38,231 [INFO] |     ^^^^^^
2025-04-16 00:55:38,231 [INFO] |
2025-04-16 00:55:38,231 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-16 00:55:38,231 [INFO] 
2025-04-16 00:55:38,231 [INFO] warning: unused import: `::libc`
2025-04-16 00:55:38,232 [INFO] --> compat/getopt1.rs:1:5
2025-04-16 00:55:38,232 [INFO] |
2025-04-16 00:55:38,232 [INFO] 1 | use ::libc;
2025-04-16 00:55:38,232 [INFO] |     ^^^^^^
2025-04-16 00:55:38,232 [INFO] 
2025-04-16 00:55:38,236 [INFO] warning: unnecessary parentheses around function argument
2025-04-16 00:55:38,236 [INFO] --> compat/regex.rs:14849:59
2025-04-16 00:55:38,236 [INFO] |
2025-04-16 00:55:38,237 [INFO] 14849 | ...                   re_opcode_t::from_libc_c_uint((if keep_string_p as libc::c_int != 0 {
2025-04-16 00:55:38,237 [INFO] |                                                     ^
2025-04-16 00:55:38,237 [INFO] ...
2025-04-16 00:55:38,237 [INFO] 14853 | ...                   })),
2025-04-16 00:55:38,237 [INFO] |                        ^
2025-04-16 00:55:38,237 [INFO] |
2025-04-16 00:55:38,237 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-16 00:55:38,237 [INFO] help: remove these parentheses
2025-04-16 00:55:38,237 [INFO] |
2025-04-16 00:55:38,237 [INFO] 14849 ~                             re_opcode_t::from_libc_c_uint(if keep_string_p as libc::c_int != 0 {
2025-04-16 00:55:38,238 [INFO] 14850 |                                 re_opcode_t::on_failure_keep_string_jump as libc::c_int
2025-04-16 00:55:38,238 [INFO] 14851 |                             } else {
2025-04-16 00:55:38,238 [INFO] 14852 |                                 re_opcode_t::on_failure_jump as libc::c_int
2025-04-16 00:55:38,238 [INFO] 14853 ~                             }),
2025-04-16 00:55:38,238 [INFO] |
2025-04-16 00:55:38,238 [INFO] 
2025-04-16 00:55:38,239 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,240 [INFO] --> compat/regex.rs:15661:33
2025-04-16 00:55:38,240 [INFO] |
2025-04-16 00:55:38,240 [INFO] 15661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,240 [INFO] |                       ^
2025-04-16 00:55:38,240 [INFO] ...
2025-04-16 00:55:38,240 [INFO] 15666 | ...                   })
2025-04-16 00:55:38,241 [INFO] |                        ^
2025-04-16 00:55:38,241 [INFO] |
2025-04-16 00:55:38,241 [INFO] help: remove these parentheses
2025-04-16 00:55:38,241 [INFO] |
2025-04-16 00:55:38,241 [INFO] 15661 ~                                 if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,241 [INFO] 15662 |                                     0 as libc::c_int
2025-04-16 00:55:38,241 [INFO] ...
2025-04-16 00:55:38,241 [INFO] 15665 |                                     1 as libc::c_int
2025-04-16 00:55:38,241 [INFO] 15666 ~                                 }
2025-04-16 00:55:38,242 [INFO] |
2025-04-16 00:55:38,242 [INFO] 
2025-04-16 00:55:38,242 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,242 [INFO] --> compat/regex.rs:16912:29
2025-04-16 00:55:38,242 [INFO] |
2025-04-16 00:55:38,242 [INFO] 16912 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,242 [INFO] |                       ^
2025-04-16 00:55:38,242 [INFO] ...
2025-04-16 00:55:38,242 [INFO] 16917 | ...                   })
2025-04-16 00:55:38,242 [INFO] |                        ^
2025-04-16 00:55:38,243 [INFO] |
2025-04-16 00:55:38,243 [INFO] help: remove these parentheses
2025-04-16 00:55:38,243 [INFO] |
2025-04-16 00:55:38,243 [INFO] 16912 ~                             if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,243 [INFO] 16913 |                                 0 as libc::c_int
2025-04-16 00:55:38,243 [INFO] ...
2025-04-16 00:55:38,243 [INFO] 16916 |                                 1 as libc::c_int
2025-04-16 00:55:38,243 [INFO] 16917 ~                             }
2025-04-16 00:55:38,243 [INFO] |
2025-04-16 00:55:38,243 [INFO] 
2025-04-16 00:55:38,243 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,244 [INFO] --> compat/regex.rs:17200:29
2025-04-16 00:55:38,244 [INFO] |
2025-04-16 00:55:38,244 [INFO] 17200 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,244 [INFO] |                       ^
2025-04-16 00:55:38,244 [INFO] ...
2025-04-16 00:55:38,244 [INFO] 17205 | ...                   })
2025-04-16 00:55:38,245 [INFO] |                        ^
2025-04-16 00:55:38,245 [INFO] |
2025-04-16 00:55:38,245 [INFO] help: remove these parentheses
2025-04-16 00:55:38,246 [INFO] |
2025-04-16 00:55:38,246 [INFO] 17200 ~                             if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,247 [INFO] 17201 |                                 0 as libc::c_int
2025-04-16 00:55:38,247 [INFO] ...
2025-04-16 00:55:38,248 [INFO] 17204 |                                 1 as libc::c_int
2025-04-16 00:55:38,248 [INFO] 17205 ~                             }
2025-04-16 00:55:38,248 [INFO] |
2025-04-16 00:55:38,248 [INFO] 
2025-04-16 00:55:38,248 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,248 [INFO] --> compat/regex.rs:17297:29
2025-04-16 00:55:38,249 [INFO] |
2025-04-16 00:55:38,249 [INFO] 17297 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,249 [INFO] |                       ^
2025-04-16 00:55:38,250 [INFO] ...
2025-04-16 00:55:38,250 [INFO] 17302 | ...                   })
2025-04-16 00:55:38,250 [INFO] |                        ^
2025-04-16 00:55:38,250 [INFO] |
2025-04-16 00:55:38,250 [INFO] help: remove these parentheses
2025-04-16 00:55:38,250 [INFO] |
2025-04-16 00:55:38,250 [INFO] 17297 ~                             if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,251 [INFO] 17298 |                                 0 as libc::c_int
2025-04-16 00:55:38,251 [INFO] ...
2025-04-16 00:55:38,252 [INFO] 17301 |                                 1 as libc::c_int
2025-04-16 00:55:38,252 [INFO] 17302 ~                             }
2025-04-16 00:55:38,252 [INFO] |
2025-04-16 00:55:38,252 [INFO] 
2025-04-16 00:55:38,252 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,252 [INFO] --> compat/regex.rs:17453:29
2025-04-16 00:55:38,252 [INFO] |
2025-04-16 00:55:38,253 [INFO] 17453 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,253 [INFO] |                       ^
2025-04-16 00:55:38,256 [INFO] ...
2025-04-16 00:55:38,256 [INFO] 17459 | ...                   })
2025-04-16 00:55:38,257 [INFO] |                        ^
2025-04-16 00:55:38,257 [INFO] |
2025-04-16 00:55:38,257 [INFO] help: remove these parentheses
2025-04-16 00:55:38,257 [INFO] |
2025-04-16 00:55:38,257 [INFO] 17453 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,257 [INFO] 17454 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,257 [INFO] ...
2025-04-16 00:55:38,259 [INFO] 17458 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,260 [INFO] 17459 ~                             }
2025-04-16 00:55:38,260 [INFO] |
2025-04-16 00:55:38,260 [INFO] 
2025-04-16 00:55:38,260 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,261 [INFO] --> compat/regex.rs:17465:29
2025-04-16 00:55:38,262 [INFO] |
2025-04-16 00:55:38,263 [INFO] 17465 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,263 [INFO] |                       ^
2025-04-16 00:55:38,263 [INFO] ...
2025-04-16 00:55:38,265 [INFO] 17469 | ...                   })
2025-04-16 00:55:38,265 [INFO] |                        ^
2025-04-16 00:55:38,265 [INFO] |
2025-04-16 00:55:38,266 [INFO] help: remove these parentheses
2025-04-16 00:55:38,266 [INFO] |
2025-04-16 00:55:38,266 [INFO] 17465 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,266 [INFO] 17466 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,266 [INFO] 17467 |                             } else {
2025-04-16 00:55:38,268 [INFO] 17468 |                                 *d as libc::c_int
2025-04-16 00:55:38,268 [INFO] 17469 ~                             }
2025-04-16 00:55:38,268 [INFO] |
2025-04-16 00:55:38,268 [INFO] 
2025-04-16 00:55:38,268 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,270 [INFO] --> compat/regex.rs:17492:29
2025-04-16 00:55:38,270 [INFO] |
2025-04-16 00:55:38,270 [INFO] 17492 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,271 [INFO] |                       ^
2025-04-16 00:55:38,271 [INFO] ...
2025-04-16 00:55:38,273 [INFO] 17498 | ...                   })
2025-04-16 00:55:38,273 [INFO] |                        ^
2025-04-16 00:55:38,273 [INFO] |
2025-04-16 00:55:38,273 [INFO] help: remove these parentheses
2025-04-16 00:55:38,274 [INFO] |
2025-04-16 00:55:38,274 [INFO] 17492 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,276 [INFO] 17493 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,276 [INFO] ...
2025-04-16 00:55:38,276 [INFO] 17497 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,276 [INFO] 17498 ~                             }
2025-04-16 00:55:38,276 [INFO] |
2025-04-16 00:55:38,276 [INFO] 
2025-04-16 00:55:38,277 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,277 [INFO] --> compat/regex.rs:17504:29
2025-04-16 00:55:38,277 [INFO] |
2025-04-16 00:55:38,277 [INFO] 17504 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,277 [INFO] |                       ^
2025-04-16 00:55:38,277 [INFO] ...
2025-04-16 00:55:38,277 [INFO] 17508 | ...                   })
2025-04-16 00:55:38,277 [INFO] |                        ^
2025-04-16 00:55:38,278 [INFO] |
2025-04-16 00:55:38,278 [INFO] help: remove these parentheses
2025-04-16 00:55:38,278 [INFO] |
2025-04-16 00:55:38,278 [INFO] 17504 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,278 [INFO] 17505 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,278 [INFO] 17506 |                             } else {
2025-04-16 00:55:38,278 [INFO] 17507 |                                 *d as libc::c_int
2025-04-16 00:55:38,279 [INFO] 17508 ~                             }
2025-04-16 00:55:38,279 [INFO] |
2025-04-16 00:55:38,279 [INFO] 
2025-04-16 00:55:38,280 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,280 [INFO] --> compat/regex.rs:17522:25
2025-04-16 00:55:38,280 [INFO] |
2025-04-16 00:55:38,280 [INFO] 17522 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,280 [INFO] |                         ^
2025-04-16 00:55:38,280 [INFO] ...
2025-04-16 00:55:38,281 [INFO] 17526 |                         })
2025-04-16 00:55:38,282 [INFO] |                          ^
2025-04-16 00:55:38,282 [INFO] |
2025-04-16 00:55:38,282 [INFO] help: remove these parentheses
2025-04-16 00:55:38,282 [INFO] |
2025-04-16 00:55:38,283 [INFO] 17522 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,284 [INFO] 17523 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,284 [INFO] 17524 |                         } else {
2025-04-16 00:55:38,284 [INFO] 17525 |                             *d as libc::c_int
2025-04-16 00:55:38,284 [INFO] 17526 ~                         }
2025-04-16 00:55:38,285 [INFO] |
2025-04-16 00:55:38,285 [INFO] 
2025-04-16 00:55:38,285 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,285 [INFO] --> compat/regex.rs:17535:33
2025-04-16 00:55:38,286 [INFO] |
2025-04-16 00:55:38,286 [INFO] 17535 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,286 [INFO] |                       ^
2025-04-16 00:55:38,286 [INFO] ...
2025-04-16 00:55:38,286 [INFO] 17541 | ...                   })
2025-04-16 00:55:38,287 [INFO] |                        ^
2025-04-16 00:55:38,287 [INFO] |
2025-04-16 00:55:38,287 [INFO] help: remove these parentheses
2025-04-16 00:55:38,287 [INFO] |
2025-04-16 00:55:38,288 [INFO] 17535 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,288 [INFO] 17536 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,288 [INFO] ...
2025-04-16 00:55:38,288 [INFO] 17540 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,289 [INFO] 17541 ~                                 }
2025-04-16 00:55:38,289 [INFO] |
2025-04-16 00:55:38,289 [INFO] 
2025-04-16 00:55:38,289 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,290 [INFO] --> compat/regex.rs:17556:29
2025-04-16 00:55:38,290 [INFO] |
2025-04-16 00:55:38,292 [INFO] 17556 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,292 [INFO] |                       ^
2025-04-16 00:55:38,294 [INFO] ...
2025-04-16 00:55:38,294 [INFO] 17562 | ...                   })
2025-04-16 00:55:38,294 [INFO] |                        ^
2025-04-16 00:55:38,295 [INFO] |
2025-04-16 00:55:38,295 [INFO] help: remove these parentheses
2025-04-16 00:55:38,295 [INFO] |
2025-04-16 00:55:38,295 [INFO] 17556 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,296 [INFO] 17557 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:38,296 [INFO] ...
2025-04-16 00:55:38,296 [INFO] 17561 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,297 [INFO] 17562 ~                             }
2025-04-16 00:55:38,297 [INFO] |
2025-04-16 00:55:38,298 [INFO] 
2025-04-16 00:55:38,298 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,298 [INFO] --> compat/regex.rs:17567:29
2025-04-16 00:55:38,298 [INFO] |
2025-04-16 00:55:38,298 [INFO] 17567 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,299 [INFO] |                       ^
2025-04-16 00:55:38,300 [INFO] ...
2025-04-16 00:55:38,301 [INFO] 17571 | ...                   })
2025-04-16 00:55:38,301 [INFO] |                        ^
2025-04-16 00:55:38,301 [INFO] |
2025-04-16 00:55:38,301 [INFO] help: remove these parentheses
2025-04-16 00:55:38,302 [INFO] |
2025-04-16 00:55:38,302 [INFO] 17567 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,302 [INFO] 17568 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,302 [INFO] 17569 |                             } else {
2025-04-16 00:55:38,303 [INFO] 17570 |                                 *d as libc::c_int
2025-04-16 00:55:38,303 [INFO] 17571 ~                             }
2025-04-16 00:55:38,303 [INFO] |
2025-04-16 00:55:38,304 [INFO] 
2025-04-16 00:55:38,304 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,304 [INFO] --> compat/regex.rs:17598:33
2025-04-16 00:55:38,304 [INFO] |
2025-04-16 00:55:38,304 [INFO] 17598 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,305 [INFO] |                       ^
2025-04-16 00:55:38,305 [INFO] ...
2025-04-16 00:55:38,305 [INFO] 17602 | ...                   })
2025-04-16 00:55:38,305 [INFO] |                        ^
2025-04-16 00:55:38,306 [INFO] |
2025-04-16 00:55:38,306 [INFO] help: remove these parentheses
2025-04-16 00:55:38,306 [INFO] |
2025-04-16 00:55:38,307 [INFO] 17598 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,309 [INFO] 17599 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,310 [INFO] 17600 |                                 } else {
2025-04-16 00:55:38,310 [INFO] 17601 |                                     *d as libc::c_int
2025-04-16 00:55:38,311 [INFO] 17602 ~                                 }
2025-04-16 00:55:38,311 [INFO] |
2025-04-16 00:55:38,311 [INFO] 
2025-04-16 00:55:38,311 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,311 [INFO] --> compat/regex.rs:17654:33
2025-04-16 00:55:38,312 [INFO] |
2025-04-16 00:55:38,312 [INFO] 17654 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,312 [INFO] |                       ^
2025-04-16 00:55:38,312 [INFO] ...
2025-04-16 00:55:38,312 [INFO] 17658 | ...                   })
2025-04-16 00:55:38,312 [INFO] |                        ^
2025-04-16 00:55:38,313 [INFO] |
2025-04-16 00:55:38,313 [INFO] help: remove these parentheses
2025-04-16 00:55:38,313 [INFO] |
2025-04-16 00:55:38,313 [INFO] 17654 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-16 00:55:38,313 [INFO] 17655 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-16 00:55:38,314 [INFO] 17656 |                                 } else {
2025-04-16 00:55:38,314 [INFO] 17657 |                                     *d as libc::c_int
2025-04-16 00:55:38,314 [INFO] 17658 ~                                 }
2025-04-16 00:55:38,314 [INFO] |
2025-04-16 00:55:38,315 [INFO] 
2025-04-16 00:55:38,315 [INFO] warning: unnecessary parentheses around block return value
2025-04-16 00:55:38,315 [INFO] --> compat/regex.rs:17820:37
2025-04-16 00:55:38,315 [INFO] |
2025-04-16 00:55:38,315 [INFO] 17820 | ...                   (if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,316 [INFO] |                       ^
2025-04-16 00:55:38,316 [INFO] ...
2025-04-16 00:55:38,317 [INFO] 17825 | ...                   })
2025-04-16 00:55:38,318 [INFO] |                        ^
2025-04-16 00:55:38,318 [INFO] |
2025-04-16 00:55:38,318 [INFO] help: remove these parentheses
2025-04-16 00:55:38,319 [INFO] |
2025-04-16 00:55:38,319 [INFO] 17820 ~                                     if (fail_stack.stack).is_null() {
2025-04-16 00:55:38,320 [INFO] 17821 |                                         0 as libc::c_int
2025-04-16 00:55:38,320 [INFO] ...
2025-04-16 00:55:38,320 [INFO] 17824 |                                         1 as libc::c_int
2025-04-16 00:55:38,320 [INFO] 17825 ~                                     }
2025-04-16 00:55:38,321 [INFO] |
2025-04-16 00:55:38,321 [INFO] 
2025-04-16 00:55:38,321 [INFO] warning: unnecessary parentheses around method argument
2025-04-16 00:55:38,321 [INFO] --> compat/regex.rs:18170:13
2025-04-16 00:55:38,321 [INFO] |
2025-04-16 00:55:38,322 [INFO] 18170 |             (if dend == end_match_1 {
2025-04-16 00:55:38,322 [INFO] |             ^
2025-04-16 00:55:38,322 [INFO] ...
2025-04-16 00:55:38,322 [INFO] 18174 |             }),
2025-04-16 00:55:38,323 [INFO] |              ^
2025-04-16 00:55:38,324 [INFO] |
2025-04-16 00:55:38,324 [INFO] help: remove these parentheses
2025-04-16 00:55:38,324 [INFO] |
2025-04-16 00:55:38,325 [INFO] 18170 ~             if dend == end_match_1 {
2025-04-16 00:55:38,325 [INFO] 18171 |                 string1
2025-04-16 00:55:38,326 [INFO] 18172 |             } else {
2025-04-16 00:55:38,326 [INFO] 18173 |                 string2.offset(-(size1 as isize))
2025-04-16 00:55:38,326 [INFO] 18174 ~             },
2025-04-16 00:55:38,327 [INFO] |
2025-04-16 00:55:38,327 [INFO] 
2025-04-16 00:55:38,327 [INFO] warning: unused label
2025-04-16 00:55:38,327 [INFO] --> src/psgen.rs:4789:5
2025-04-16 00:55:38,328 [INFO] |
2025-04-16 00:55:38,328 [INFO] 4789 |     'c_18634: {
2025-04-16 00:55:38,328 [INFO] |     ^^^^^^^^
2025-04-16 00:55:38,329 [INFO] 
2025-04-16 00:55:38,329 [INFO] warning: unused label
2025-04-16 00:55:38,329 [INFO] --> src/psgen.rs:4864:5
2025-04-16 00:55:38,329 [INFO] |
2025-04-16 00:55:38,329 [INFO] 4864 |     'c_8697: {
2025-04-16 00:55:38,330 [INFO] |     ^^^^^^^
2025-04-16 00:55:38,330 [INFO] 
2025-04-16 00:55:38,330 [INFO] warning: unnecessary parentheses around function argument
2025-04-16 00:55:38,331 [INFO] --> states/prims.rs:567:17
2025-04-16 00:55:38,331 [INFO] |
2025-04-16 00:55:38,331 [INFO] 567 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-16 00:55:38,332 [INFO] |                 ^
2025-04-16 00:55:38,332 [INFO] ...
2025-04-16 00:55:38,333 [INFO] 572 |                 }),
2025-04-16 00:55:38,333 [INFO] |                  ^
2025-04-16 00:55:38,334 [INFO] |
2025-04-16 00:55:38,334 [INFO] help: remove these parentheses
2025-04-16 00:55:38,334 [INFO] |
2025-04-16 00:55:38,334 [INFO] 567 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-16 00:55:38,334 [INFO] 568 |                     &mut (*n).u.re.compiled
2025-04-16 00:55:38,335 [INFO] ...
2025-04-16 00:55:38,335 [INFO] 571 |                     &mut (*n).u.re.compiled
2025-04-16 00:55:38,336 [INFO] 572 ~                 },
2025-04-16 00:55:38,336 [INFO] |
2025-04-16 00:55:38,336 [INFO] 
2025-04-16 00:55:38,336 [INFO] warning: unnecessary parentheses around function argument
2025-04-16 00:55:38,337 [INFO] --> states/prims.rs:623:17
2025-04-16 00:55:38,337 [INFO] |
2025-04-16 00:55:38,337 [INFO] 623 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-16 00:55:38,337 [INFO] |                 ^
2025-04-16 00:55:38,337 [INFO] ...
2025-04-16 00:55:38,338 [INFO] 628 |                 }),
2025-04-16 00:55:38,338 [INFO] |                  ^
2025-04-16 00:55:38,338 [INFO] |
2025-04-16 00:55:38,338 [INFO] help: remove these parentheses
2025-04-16 00:55:38,338 [INFO] |
2025-04-16 00:55:38,339 [INFO] 623 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-16 00:55:38,339 [INFO] 624 |                     &mut (*n).u.re.compiled
2025-04-16 00:55:38,340 [INFO] ...
2025-04-16 00:55:38,341 [INFO] 627 |                     &mut (*n).u.re.compiled
2025-04-16 00:55:38,341 [INFO] 628 ~                 },
2025-04-16 00:55:38,342 [INFO] |
2025-04-16 00:55:38,342 [INFO] 
2025-04-16 00:55:38,452 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,452 [INFO] --> afmlib/afm.rs:2:1
2025-04-16 00:55:38,452 [INFO] |
2025-04-16 00:55:38,453 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,453 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,453 [INFO] |
2025-04-16 00:55:38,453 [INFO] = note: `#[warn(unused_attributes)]` on by default
2025-04-16 00:55:38,453 [INFO] 
2025-04-16 00:55:38,453 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,454 [INFO] --> afmlib/afmparse.rs:2:1
2025-04-16 00:55:38,454 [INFO] |
2025-04-16 00:55:38,454 [INFO] 2 | #![feature(extern_types, label_break_value)]
2025-04-16 00:55:38,454 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,454 [INFO] 
2025-04-16 00:55:38,454 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,455 [INFO] --> afmlib/deffont.rs:2:1
2025-04-16 00:55:38,455 [INFO] |
2025-04-16 00:55:38,455 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,455 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,455 [INFO] 
2025-04-16 00:55:38,471 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,471 [INFO] --> src/main.rs:2:1
2025-04-16 00:55:38,472 [INFO] |
2025-04-16 00:55:38,472 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,473 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,473 [INFO] 
2025-04-16 00:55:38,473 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,473 [INFO] --> src/psgen.rs:2:1
2025-04-16 00:55:38,473 [INFO] |
2025-04-16 00:55:38,473 [INFO] 2 | #![feature(extern_types, label_break_value)]
2025-04-16 00:55:38,474 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,474 [INFO] 
2025-04-16 00:55:38,474 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,475 [INFO] --> src/util.rs:2:1
2025-04-16 00:55:38,475 [INFO] |
2025-04-16 00:55:38,475 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,476 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,476 [INFO] 
2025-04-16 00:55:38,482 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,482 [INFO] --> states/gram.rs:2:1
2025-04-16 00:55:38,482 [INFO] |
2025-04-16 00:55:38,483 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,483 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,483 [INFO] 
2025-04-16 00:55:38,483 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,484 [INFO] --> states/lex.rs:2:1
2025-04-16 00:55:38,485 [INFO] |
2025-04-16 00:55:38,485 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,485 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,485 [INFO] 
2025-04-16 00:55:38,485 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,485 [INFO] --> states/prims.rs:2:1
2025-04-16 00:55:38,486 [INFO] |
2025-04-16 00:55:38,486 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,486 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,486 [INFO] 
2025-04-16 00:55:38,487 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,487 [INFO] --> states/process.rs:2:1
2025-04-16 00:55:38,487 [INFO] |
2025-04-16 00:55:38,488 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,488 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,488 [INFO] 
2025-04-16 00:55:38,488 [INFO] warning: crate-level attribute should be in the root module
2025-04-16 00:55:38,488 [INFO] --> states/utils.rs:2:1
2025-04-16 00:55:38,489 [INFO] |
2025-04-16 00:55:38,489 [INFO] 2 | #![feature(extern_types)]
2025-04-16 00:55:38,489 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,489 [INFO] 
2025-04-16 00:55:38,655 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,655 [INFO] --> afmlib/afmparse.rs:1695:52
2025-04-16 00:55:38,655 [INFO] |
2025-04-16 00:55:38,655 [INFO] 1695 |             *key_return = AFMKey::from_libc_c_uint(key);
2025-04-16 00:55:38,656 [INFO] |                           ------------------------ ^^^ expected `u32`, found `i32`
2025-04-16 00:55:38,656 [INFO] |                           |
2025-04-16 00:55:38,656 [INFO] |                           arguments to this function are incorrect
2025-04-16 00:55:38,656 [INFO] |
2025-04-16 00:55:38,656 [INFO] note: associated function defined here
2025-04-16 00:55:38,657 [INFO] --> afmlib/afmparse.rs:471:8
2025-04-16 00:55:38,657 [INFO] |
2025-04-16 00:55:38,657 [INFO] 471  |     fn from_libc_c_uint(value: libc::c_uint) -> AFMKey {
2025-04-16 00:55:38,657 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:38,657 [INFO] help: you can convert an `i32` to a `u32` and panic if the converted value doesn't fit
2025-04-16 00:55:38,657 [INFO] |
2025-04-16 00:55:38,658 [INFO] 1695 |             *key_return = AFMKey::from_libc_c_uint(key.try_into().unwrap());
2025-04-16 00:55:38,658 [INFO] |                                                       ++++++++++++++++++++
2025-04-16 00:55:38,658 [INFO] 
2025-04-16 00:55:38,770 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,770 [INFO] --> compat/regex.rs:14850:33
2025-04-16 00:55:38,771 [INFO] |
2025-04-16 00:55:38,771 [INFO] 14850 | ...                   re_opcode_t::on_failure_keep_string_jump as libc::c_int
2025-04-16 00:55:38,771 [INFO] |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `i32`
2025-04-16 00:55:38,771 [INFO] |
2025-04-16 00:55:38,771 [INFO] help: you can convert an `i32` to a `u32` and panic if the converted value doesn't fit
2025-04-16 00:55:38,772 [INFO] |
2025-04-16 00:55:38,772 [INFO] 14850 |                                 (re_opcode_t::on_failure_keep_string_jump as libc::c_int).try_into().unwrap()
2025-04-16 00:55:38,772 [INFO] |                                 +                                                       +++++++++++++++++++++
2025-04-16 00:55:38,772 [INFO] 
2025-04-16 00:55:38,772 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,773 [INFO] --> compat/regex.rs:14852:33
2025-04-16 00:55:38,773 [INFO] |
2025-04-16 00:55:38,773 [INFO] 14852 | ...                   re_opcode_t::on_failure_jump as libc::c_int
2025-04-16 00:55:38,773 [INFO] |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `i32`
2025-04-16 00:55:38,773 [INFO] |
2025-04-16 00:55:38,773 [INFO] help: you can convert an `i32` to a `u32` and panic if the converted value doesn't fit
2025-04-16 00:55:38,774 [INFO] |
2025-04-16 00:55:38,774 [INFO] 14852 |                                 (re_opcode_t::on_failure_jump as libc::c_int).try_into().unwrap()
2025-04-16 00:55:38,774 [INFO] |                                 +                                           +++++++++++++++++++++
2025-04-16 00:55:38,774 [INFO] 
2025-04-16 00:55:38,789 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-16 00:55:38,789 [INFO] --> compat/regex.rs:939:20
2025-04-16 00:55:38,789 [INFO] |
2025-04-16 00:55:38,789 [INFO] 939 |                 if *b.offset(-(2 as libc::c_int) as isize) as re_opcode_t as libc::c_uint
2025-04-16 00:55:38,789 [INFO] |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-16 00:55:38,790 [INFO] 
2025-04-16 00:55:38,831 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,831 [INFO] --> compat/regex.rs:15236:15
2025-04-16 00:55:38,831 [INFO] |
2025-04-16 00:55:38,831 [INFO] 15236 |     store_op1(op as libc::c_uint, loc, arg);
2025-04-16 00:55:38,832 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-16 00:55:38,832 [INFO] |     |
2025-04-16 00:55:38,832 [INFO] |     arguments to this function are incorrect
2025-04-16 00:55:38,832 [INFO] |
2025-04-16 00:55:38,832 [INFO] note: function defined here
2025-04-16 00:55:38,832 [INFO] --> compat/regex.rs:15184:22
2025-04-16 00:55:38,832 [INFO] |
2025-04-16 00:55:38,833 [INFO] 15184 | unsafe extern "C" fn store_op1(
2025-04-16 00:55:38,833 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:38,833 [INFO] 15185 |     mut op: re_opcode_t,
2025-04-16 00:55:38,833 [INFO] |     -------------------
2025-04-16 00:55:38,834 [INFO] 15186 |     mut loc: *mut libc::c_uchar,
2025-04-16 00:55:38,834 [INFO] |     ---------------------------
2025-04-16 00:55:38,834 [INFO] 15187 |     mut arg: libc::c_int,
2025-04-16 00:55:38,834 [INFO] |     --------------------
2025-04-16 00:55:38,834 [INFO] 
2025-04-16 00:55:38,848 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,849 [INFO] --> compat/regex.rs:15252:15
2025-04-16 00:55:38,849 [INFO] |
2025-04-16 00:55:38,849 [INFO] 15252 |     store_op2(op as libc::c_uint, loc, arg1, arg2);
2025-04-16 00:55:38,849 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-16 00:55:38,849 [INFO] |     |
2025-04-16 00:55:38,849 [INFO] |     arguments to this function are incorrect
2025-04-16 00:55:38,849 [INFO] |
2025-04-16 00:55:38,850 [INFO] note: function defined here
2025-04-16 00:55:38,850 [INFO] --> compat/regex.rs:15199:22
2025-04-16 00:55:38,850 [INFO] |
2025-04-16 00:55:38,850 [INFO] 15199 | unsafe extern "C" fn store_op2(
2025-04-16 00:55:38,850 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:38,850 [INFO] 15200 |     mut op: re_opcode_t,
2025-04-16 00:55:38,850 [INFO] |     -------------------
2025-04-16 00:55:38,851 [INFO] 15201 |     mut loc: *mut libc::c_uchar,
2025-04-16 00:55:38,851 [INFO] |     ---------------------------
2025-04-16 00:55:38,851 [INFO] 15202 |     mut arg1: libc::c_int,
2025-04-16 00:55:38,851 [INFO] |     ---------------------
2025-04-16 00:55:38,851 [INFO] 15203 |     mut arg2: libc::c_int,
2025-04-16 00:55:38,851 [INFO] |     ---------------------
2025-04-16 00:55:38,852 [INFO] 
2025-04-16 00:55:38,853 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-16 00:55:38,854 [INFO] --> compat/regex.rs:15359:16
2025-04-16 00:55:38,854 [INFO] |
2025-04-16 00:55:38,854 [INFO] 15359 |           return (if syntax
2025-04-16 00:55:38,854 [INFO] |  ________________^
2025-04-16 00:55:38,854 [INFO] 15360 | |             & ((((((((((((((((1 as libc::c_int as libc::c_ulong) << 1 as libc::c_int)
2025-04-16 00:55:38,855 [INFO] 15361 | |                 << 1 as libc::c_int) << 1 as libc::c_int) << 1 as libc::c_int)
2025-04-16 00:55:38,855 [INFO] 15362 | |                 << 1 as libc::c_int) << 1 as libc::c_int) << 1 as libc::c_int)
2025-04-16 00:55:38,855 [INFO] ...     |
2025-04-16 00:55:38,855 [INFO] 15369 | |             reg_errcode_t::REG_NOERROR as libc::c_int
2025-04-16 00:55:38,856 [INFO] 15370 | |         }) as reg_errcode_t;
2025-04-16 00:55:38,856 [INFO] | |___________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-16 00:55:38,856 [INFO] 
2025-04-16 00:55:38,886 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,887 [INFO] --> compat/regex.rs:15452:50
2025-04-16 00:55:38,887 [INFO] |
2025-04-16 00:55:38,887 [INFO] 15452 |             match *re_opcode_t::from_libc_c_uint(fresh56) as libc::c_uint {
2025-04-16 00:55:38,887 [INFO] |                    ----------------------------- ^^^^^^^ expected `u32`, found *-ptr
2025-04-16 00:55:38,887 [INFO] |                    |
2025-04-16 00:55:38,887 [INFO] |                    arguments to this function are incorrect
2025-04-16 00:55:38,888 [INFO] |
2025-04-16 00:55:38,888 [INFO] = note:     expected type `u32`
2025-04-16 00:55:38,888 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:38,888 [INFO] note: associated function defined here
2025-04-16 00:55:38,888 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:38,889 [INFO] |
2025-04-16 00:55:38,889 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:38,889 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:38,889 [INFO] 
2025-04-16 00:55:38,889 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:38,889 [INFO] --> compat/regex.rs:15452:19
2025-04-16 00:55:38,890 [INFO] |
2025-04-16 00:55:38,890 [INFO] 15452 |             match *re_opcode_t::from_libc_c_uint(fresh56) as libc::c_uint {
2025-04-16 00:55:38,890 [INFO] |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,890 [INFO] 
2025-04-16 00:55:38,913 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,914 [INFO] --> compat/regex.rs:15567:55
2025-04-16 00:55:38,914 [INFO] |
2025-04-16 00:55:38,914 [INFO] 15567 |                     if *re_opcode_t::from_libc_c_uint(p) as libc::c_uint
2025-04-16 00:55:38,914 [INFO] |                         ----------------------------- ^ expected `u32`, found *-ptr
2025-04-16 00:55:38,914 [INFO] |                         |
2025-04-16 00:55:38,915 [INFO] |                         arguments to this function are incorrect
2025-04-16 00:55:38,915 [INFO] |
2025-04-16 00:55:38,915 [INFO] = note:     expected type `u32`
2025-04-16 00:55:38,915 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:38,916 [INFO] note: associated function defined here
2025-04-16 00:55:38,916 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:38,916 [INFO] |
2025-04-16 00:55:38,916 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:38,916 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:38,917 [INFO] 
2025-04-16 00:55:38,917 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:38,917 [INFO] --> compat/regex.rs:15567:24
2025-04-16 00:55:38,918 [INFO] |
2025-04-16 00:55:38,918 [INFO] 15567 |                     if *re_opcode_t::from_libc_c_uint(p) as libc::c_uint
2025-04-16 00:55:38,918 [INFO] |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,918 [INFO] 
2025-04-16 00:55:38,940 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,940 [INFO] --> compat/regex.rs:15569:59
2025-04-16 00:55:38,940 [INFO] |
2025-04-16 00:55:38,940 [INFO] 15569 |                         && *re_opcode_t::from_libc_c_uint(p) as libc::c_uint
2025-04-16 00:55:38,940 [INFO] |                             ----------------------------- ^ expected `u32`, found *-ptr
2025-04-16 00:55:38,941 [INFO] |                             |
2025-04-16 00:55:38,941 [INFO] |                             arguments to this function are incorrect
2025-04-16 00:55:38,941 [INFO] |
2025-04-16 00:55:38,941 [INFO] = note:     expected type `u32`
2025-04-16 00:55:38,941 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:38,942 [INFO] note: associated function defined here
2025-04-16 00:55:38,942 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:38,942 [INFO] |
2025-04-16 00:55:38,942 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:38,942 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:38,942 [INFO] 
2025-04-16 00:55:38,943 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:38,943 [INFO] --> compat/regex.rs:15569:28
2025-04-16 00:55:38,943 [INFO] |
2025-04-16 00:55:38,944 [INFO] 15569 |                         && *re_opcode_t::from_libc_c_uint(p) as libc::c_uint
2025-04-16 00:55:38,944 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,944 [INFO] 
2025-04-16 00:55:38,956 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,956 [INFO] --> compat/regex.rs:15914:9
2025-04-16 00:55:38,956 [INFO] |
2025-04-16 00:55:38,957 [INFO] 15912 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-16 00:55:38,957 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-16 00:55:38,957 [INFO] 15913 |         bufp,
2025-04-16 00:55:38,957 [INFO] 15914 |         0 as *mut libc::c_void,
2025-04-16 00:55:38,957 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-16 00:55:38,958 [INFO] |
2025-04-16 00:55:38,958 [INFO] = note: expected raw pointer `*const i8`
2025-04-16 00:55:38,958 [INFO] found raw pointer `*mut c_void`
2025-04-16 00:55:38,958 [INFO] note: function defined here
2025-04-16 00:55:38,958 [INFO] --> compat/regex.rs:15947:22
2025-04-16 00:55:38,958 [INFO] |
2025-04-16 00:55:38,959 [INFO] 15947 | unsafe extern "C" fn re_match_2_internal(
2025-04-16 00:55:38,959 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,959 [INFO] 15948 |     mut bufp: *mut re_pattern_buffer,
2025-04-16 00:55:38,960 [INFO] |     --------------------------------
2025-04-16 00:55:38,960 [INFO] 15949 |     mut string1: *const libc::c_char,
2025-04-16 00:55:38,960 [INFO] |     --------------------------------
2025-04-16 00:55:38,961 [INFO] 15950 |     mut size1: libc::c_int,
2025-04-16 00:55:38,961 [INFO] |     ----------------------
2025-04-16 00:55:38,961 [INFO] 15951 |     mut string2: *const libc::c_char,
2025-04-16 00:55:38,961 [INFO] |     --------------------------------
2025-04-16 00:55:38,962 [INFO] 15952 |     mut size2: libc::c_int,
2025-04-16 00:55:38,962 [INFO] |     ----------------------
2025-04-16 00:55:38,962 [INFO] 15953 |     mut pos: libc::c_int,
2025-04-16 00:55:38,963 [INFO] |     --------------------
2025-04-16 00:55:38,963 [INFO] 15954 |     mut regs: *mut re_registers,
2025-04-16 00:55:38,963 [INFO] |     ---------------------------
2025-04-16 00:55:38,964 [INFO] 15955 |     mut stop: libc::c_int,
2025-04-16 00:55:38,964 [INFO] |     ---------------------
2025-04-16 00:55:38,964 [INFO] 
2025-04-16 00:55:38,988 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:38,988 [INFO] --> compat/regex.rs:16219:50
2025-04-16 00:55:38,988 [INFO] |
2025-04-16 00:55:38,989 [INFO] 16219 |             match *re_opcode_t::from_libc_c_uint(fresh88) as libc::c_uint {
2025-04-16 00:55:38,989 [INFO] |                    ----------------------------- ^^^^^^^ expected `u32`, found *-ptr
2025-04-16 00:55:38,989 [INFO] |                    |
2025-04-16 00:55:38,989 [INFO] |                    arguments to this function are incorrect
2025-04-16 00:55:38,989 [INFO] |
2025-04-16 00:55:38,990 [INFO] = note:     expected type `u32`
2025-04-16 00:55:38,990 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:38,990 [INFO] note: associated function defined here
2025-04-16 00:55:38,990 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:38,991 [INFO] |
2025-04-16 00:55:38,991 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:38,991 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:38,991 [INFO] 
2025-04-16 00:55:38,992 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:38,992 [INFO] --> compat/regex.rs:16219:19
2025-04-16 00:55:38,992 [INFO] |
2025-04-16 00:55:38,993 [INFO] 16219 |             match *re_opcode_t::from_libc_c_uint(fresh88) as libc::c_uint {
2025-04-16 00:55:38,993 [INFO] |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:38,993 [INFO] 
2025-04-16 00:55:39,019 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,019 [INFO] --> compat/regex.rs:16541:62
2025-04-16 00:55:39,019 [INFO] |
2025-04-16 00:55:39,019 [INFO] 16541 |                         match *re_opcode_t::from_libc_c_uint(fresh108) as libc::c_uint {
2025-04-16 00:55:39,019 [INFO] |                                ----------------------------- ^^^^^^^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,020 [INFO] |                                |
2025-04-16 00:55:39,020 [INFO] |                                arguments to this function are incorrect
2025-04-16 00:55:39,020 [INFO] |
2025-04-16 00:55:39,020 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,020 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,020 [INFO] note: associated function defined here
2025-04-16 00:55:39,021 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,021 [INFO] |
2025-04-16 00:55:39,021 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,021 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,021 [INFO] 
2025-04-16 00:55:39,022 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,022 [INFO] --> compat/regex.rs:16541:31
2025-04-16 00:55:39,022 [INFO] |
2025-04-16 00:55:39,022 [INFO] 16541 |                         match *re_opcode_t::from_libc_c_uint(fresh108) as libc::c_uint {
2025-04-16 00:55:39,022 [INFO] |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,023 [INFO] 
2025-04-16 00:55:39,050 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,050 [INFO] --> compat/regex.rs:16982:64
2025-04-16 00:55:39,050 [INFO] |
2025-04-16 00:55:39,050 [INFO] 16982 | ...                   && (*re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,050 [INFO] |                            ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,051 [INFO] |                            |
2025-04-16 00:55:39,051 [INFO] |                            arguments to this function are incorrect
2025-04-16 00:55:39,051 [INFO] |
2025-04-16 00:55:39,051 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,051 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,052 [INFO] note: associated function defined here
2025-04-16 00:55:39,052 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,052 [INFO] |
2025-04-16 00:55:39,052 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,052 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,052 [INFO] 
2025-04-16 00:55:39,053 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,053 [INFO] --> compat/regex.rs:16982:33
2025-04-16 00:55:39,053 [INFO] |
2025-04-16 00:55:39,053 [INFO] 16982 | ...                   && (*re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,053 [INFO] |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,053 [INFO] 
2025-04-16 00:55:39,080 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,080 [INFO] --> compat/regex.rs:16984:67
2025-04-16 00:55:39,080 [INFO] |
2025-04-16 00:55:39,080 [INFO] 16984 | ...                   || *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,080 [INFO] |                           ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,081 [INFO] |                           |
2025-04-16 00:55:39,081 [INFO] |                           arguments to this function are incorrect
2025-04-16 00:55:39,081 [INFO] |
2025-04-16 00:55:39,081 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,081 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,081 [INFO] note: associated function defined here
2025-04-16 00:55:39,082 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,082 [INFO] |
2025-04-16 00:55:39,082 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,082 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,082 [INFO] 
2025-04-16 00:55:39,082 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,082 [INFO] --> compat/regex.rs:16984:36
2025-04-16 00:55:39,082 [INFO] |
2025-04-16 00:55:39,083 [INFO] 16984 | ...                   || *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,083 [INFO] |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,083 [INFO] 
2025-04-16 00:55:39,107 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,107 [INFO] --> compat/regex.rs:16990:67
2025-04-16 00:55:39,108 [INFO] |
2025-04-16 00:55:39,108 [INFO] 16990 | ...                   && *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,108 [INFO] |                           ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,108 [INFO] |                           |
2025-04-16 00:55:39,108 [INFO] |                           arguments to this function are incorrect
2025-04-16 00:55:39,109 [INFO] |
2025-04-16 00:55:39,109 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,109 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,109 [INFO] note: associated function defined here
2025-04-16 00:55:39,109 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,109 [INFO] |
2025-04-16 00:55:39,110 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,110 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,110 [INFO] 
2025-04-16 00:55:39,110 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,110 [INFO] --> compat/regex.rs:16990:36
2025-04-16 00:55:39,110 [INFO] |
2025-04-16 00:55:39,111 [INFO] 16990 | ...                   && *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,111 [INFO] |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,111 [INFO] 
2025-04-16 00:55:39,134 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,134 [INFO] --> compat/regex.rs:17004:62
2025-04-16 00:55:39,134 [INFO] |
2025-04-16 00:55:39,135 [INFO] 17004 |                     } else if *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,135 [INFO] |                                ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,135 [INFO] |                                |
2025-04-16 00:55:39,135 [INFO] |                                arguments to this function are incorrect
2025-04-16 00:55:39,135 [INFO] |
2025-04-16 00:55:39,135 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,136 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,136 [INFO] note: associated function defined here
2025-04-16 00:55:39,136 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,136 [INFO] |
2025-04-16 00:55:39,136 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,137 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,137 [INFO] 
2025-04-16 00:55:39,137 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,137 [INFO] --> compat/regex.rs:17004:31
2025-04-16 00:55:39,137 [INFO] |
2025-04-16 00:55:39,137 [INFO] 17004 |                     } else if *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,138 [INFO] |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,138 [INFO] 
2025-04-16 00:55:39,162 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,162 [INFO] --> compat/regex.rs:17007:63
2025-04-16 00:55:39,162 [INFO] |
2025-04-16 00:55:39,162 [INFO] 17007 | ...                   && *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,162 [INFO] |                           ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,163 [INFO] |                           |
2025-04-16 00:55:39,163 [INFO] |                           arguments to this function are incorrect
2025-04-16 00:55:39,163 [INFO] |
2025-04-16 00:55:39,163 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,163 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,164 [INFO] note: associated function defined here
2025-04-16 00:55:39,164 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,164 [INFO] |
2025-04-16 00:55:39,164 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,164 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,164 [INFO] 
2025-04-16 00:55:39,165 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,165 [INFO] --> compat/regex.rs:17007:32
2025-04-16 00:55:39,165 [INFO] |
2025-04-16 00:55:39,165 [INFO] 17007 | ...                   && *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,165 [INFO] |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,166 [INFO] 
2025-04-16 00:55:39,193 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,193 [INFO] --> compat/regex.rs:17057:62
2025-04-16 00:55:39,193 [INFO] |
2025-04-16 00:55:39,193 [INFO] 17057 |                     } else if *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,194 [INFO] |                                ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,194 [INFO] |                                |
2025-04-16 00:55:39,194 [INFO] |                                arguments to this function are incorrect
2025-04-16 00:55:39,194 [INFO] |
2025-04-16 00:55:39,194 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,195 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,195 [INFO] note: associated function defined here
2025-04-16 00:55:39,195 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,195 [INFO] |
2025-04-16 00:55:39,196 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,196 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,196 [INFO] 
2025-04-16 00:55:39,196 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,197 [INFO] --> compat/regex.rs:17057:31
2025-04-16 00:55:39,197 [INFO] |
2025-04-16 00:55:39,197 [INFO] 17057 |                     } else if *re_opcode_t::from_libc_c_uint(p2) as libc::c_uint
2025-04-16 00:55:39,197 [INFO] |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,198 [INFO] 
2025-04-16 00:55:39,224 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,224 [INFO] --> compat/regex.rs:17759:67
2025-04-16 00:55:39,224 [INFO] |
2025-04-16 00:55:39,225 [INFO] 17759 | ...                   && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,225 [INFO] |                           ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,225 [INFO] |                           |
2025-04-16 00:55:39,225 [INFO] |                           arguments to this function are incorrect
2025-04-16 00:55:39,225 [INFO] |
2025-04-16 00:55:39,225 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,226 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,226 [INFO] note: associated function defined here
2025-04-16 00:55:39,226 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,226 [INFO] |
2025-04-16 00:55:39,226 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,227 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,227 [INFO] 
2025-04-16 00:55:39,227 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,228 [INFO] --> compat/regex.rs:17759:36
2025-04-16 00:55:39,228 [INFO] |
2025-04-16 00:55:39,228 [INFO] 17759 | ...                   && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,228 [INFO] |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,229 [INFO] 
2025-04-16 00:55:39,252 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,252 [INFO] --> compat/regex.rs:17766:67
2025-04-16 00:55:39,252 [INFO] |
2025-04-16 00:55:39,252 [INFO] 17766 | ...                   && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,252 [INFO] |                           ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,252 [INFO] |                           |
2025-04-16 00:55:39,253 [INFO] |                           arguments to this function are incorrect
2025-04-16 00:55:39,253 [INFO] |
2025-04-16 00:55:39,253 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,253 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,253 [INFO] note: associated function defined here
2025-04-16 00:55:39,253 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,253 [INFO] |
2025-04-16 00:55:39,254 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,254 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,254 [INFO] 
2025-04-16 00:55:39,254 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,254 [INFO] --> compat/regex.rs:17766:36
2025-04-16 00:55:39,254 [INFO] |
2025-04-16 00:55:39,254 [INFO] 17766 | ...                   && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,254 [INFO] |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,255 [INFO] 
2025-04-16 00:55:39,279 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,279 [INFO] --> compat/regex.rs:17939:54
2025-04-16 00:55:39,279 [INFO] |
2025-04-16 00:55:39,279 [INFO] 17939 |                 match *re_opcode_t::from_libc_c_uint(p) as libc::c_uint {
2025-04-16 00:55:39,280 [INFO] |                        ----------------------------- ^ expected `u32`, found *-ptr
2025-04-16 00:55:39,280 [INFO] |                        |
2025-04-16 00:55:39,280 [INFO] |                        arguments to this function are incorrect
2025-04-16 00:55:39,280 [INFO] |
2025-04-16 00:55:39,280 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,281 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,281 [INFO] note: associated function defined here
2025-04-16 00:55:39,281 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,281 [INFO] |
2025-04-16 00:55:39,281 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,281 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,282 [INFO] 
2025-04-16 00:55:39,282 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,282 [INFO] --> compat/regex.rs:17939:23
2025-04-16 00:55:39,282 [INFO] |
2025-04-16 00:55:39,282 [INFO] 17939 |                 match *re_opcode_t::from_libc_c_uint(p) as libc::c_uint {
2025-04-16 00:55:39,282 [INFO] |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,283 [INFO] 
2025-04-16 00:55:39,312 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,312 [INFO] --> compat/regex.rs:17956:55
2025-04-16 00:55:39,313 [INFO] |
2025-04-16 00:55:39,313 [INFO] 17956 |                     && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,313 [INFO] |                         ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,313 [INFO] |                         |
2025-04-16 00:55:39,313 [INFO] |                         arguments to this function are incorrect
2025-04-16 00:55:39,314 [INFO] |
2025-04-16 00:55:39,314 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,314 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,314 [INFO] note: associated function defined here
2025-04-16 00:55:39,314 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,315 [INFO] |
2025-04-16 00:55:39,315 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,315 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,315 [INFO] 
2025-04-16 00:55:39,316 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,316 [INFO] --> compat/regex.rs:17956:24
2025-04-16 00:55:39,316 [INFO] |
2025-04-16 00:55:39,317 [INFO] 17956 |                     && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,317 [INFO] |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,317 [INFO] 
2025-04-16 00:55:39,342 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,342 [INFO] --> compat/regex.rs:17959:59
2025-04-16 00:55:39,342 [INFO] |
2025-04-16 00:55:39,342 [INFO] 17959 |                         && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,342 [INFO] |                             ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,342 [INFO] |                             |
2025-04-16 00:55:39,343 [INFO] |                             arguments to this function are incorrect
2025-04-16 00:55:39,343 [INFO] |
2025-04-16 00:55:39,344 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,344 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,344 [INFO] note: associated function defined here
2025-04-16 00:55:39,344 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,344 [INFO] |
2025-04-16 00:55:39,344 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,345 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,345 [INFO] 
2025-04-16 00:55:39,345 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,345 [INFO] --> compat/regex.rs:17959:28
2025-04-16 00:55:39,346 [INFO] |
2025-04-16 00:55:39,346 [INFO] 17959 |                         && *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,346 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,346 [INFO] 
2025-04-16 00:55:39,348 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-16 00:55:39,349 [INFO] --> compat/regex.rs:16378:45
2025-04-16 00:55:39,349 [INFO] |
2025-04-16 00:55:39,350 [INFO] 16378 |                       let mut not: boolean = (*p.offset(-(1 as libc::c_int as isize))
2025-04-16 00:55:39,350 [INFO] |  _____________________________________________^
2025-04-16 00:55:39,350 [INFO] 16379 | |                         as re_opcode_t as libc::c_uint
2025-04-16 00:55:39,350 [INFO] | |______________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-16 00:55:39,350 [INFO] 
2025-04-16 00:55:39,351 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-16 00:55:39,351 [INFO] --> compat/regex.rs:17142:24
2025-04-16 00:55:39,352 [INFO] |
2025-04-16 00:55:39,352 [INFO] 17142 |                     if *p.offset(-(1 as libc::c_int) as isize) as re_opcode_t
2025-04-16 00:55:39,352 [INFO] |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-16 00:55:39,352 [INFO] 
2025-04-16 00:55:39,382 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,382 [INFO] --> compat/regex.rs:18204:46
2025-04-16 00:55:39,382 [INFO] |
2025-04-16 00:55:39,382 [INFO] 18204 |         match *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint {
2025-04-16 00:55:39,382 [INFO] |                ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,382 [INFO] |                |
2025-04-16 00:55:39,383 [INFO] |                arguments to this function are incorrect
2025-04-16 00:55:39,383 [INFO] |
2025-04-16 00:55:39,383 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,384 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,384 [INFO] note: associated function defined here
2025-04-16 00:55:39,384 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,384 [INFO] |
2025-04-16 00:55:39,385 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,385 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,385 [INFO] 
2025-04-16 00:55:39,385 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,385 [INFO] --> compat/regex.rs:18204:15
2025-04-16 00:55:39,386 [INFO] |
2025-04-16 00:55:39,386 [INFO] 18204 |         match *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint {
2025-04-16 00:55:39,386 [INFO] |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,386 [INFO] 
2025-04-16 00:55:39,410 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,410 [INFO] --> compat/regex.rs:18228:59
2025-04-16 00:55:39,411 [INFO] |
2025-04-16 00:55:39,411 [INFO] 18228 |                         if *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,411 [INFO] |                             ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,411 [INFO] |                             |
2025-04-16 00:55:39,411 [INFO] |                             arguments to this function are incorrect
2025-04-16 00:55:39,412 [INFO] |
2025-04-16 00:55:39,412 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,412 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,412 [INFO] note: associated function defined here
2025-04-16 00:55:39,412 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,413 [INFO] |
2025-04-16 00:55:39,413 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,413 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,413 [INFO] 
2025-04-16 00:55:39,413 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,413 [INFO] --> compat/regex.rs:18228:28
2025-04-16 00:55:39,414 [INFO] |
2025-04-16 00:55:39,414 [INFO] 18228 |                         if *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint
2025-04-16 00:55:39,414 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,414 [INFO] 
2025-04-16 00:55:39,414 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-16 00:55:39,415 [INFO] --> compat/regex.rs:18214:27
2025-04-16 00:55:39,415 [INFO] |
2025-04-16 00:55:39,415 [INFO] 18214 |                     while *p1.offset((mcnt - 3 as libc::c_int) as isize) as re_opcode_t
2025-04-16 00:55:39,416 [INFO] |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-16 00:55:39,416 [INFO] 
2025-04-16 00:55:39,416 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-16 00:55:39,416 [INFO] --> compat/regex.rs:18240:30
2025-04-16 00:55:39,416 [INFO] |
2025-04-16 00:55:39,417 [INFO] 18240 |                           if !(*p1.offset((mcnt - 3 as libc::c_int) as isize)
2025-04-16 00:55:39,417 [INFO] |  ______________________________^
2025-04-16 00:55:39,417 [INFO] 18241 | |                             as re_opcode_t as libc::c_uint
2025-04-16 00:55:39,417 [INFO] | |__________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-16 00:55:39,417 [INFO] 
2025-04-16 00:55:39,441 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,441 [INFO] --> compat/regex.rs:18285:46
2025-04-16 00:55:39,441 [INFO] |
2025-04-16 00:55:39,441 [INFO] 18285 |         match *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint {
2025-04-16 00:55:39,442 [INFO] |                ----------------------------- ^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,442 [INFO] |                |
2025-04-16 00:55:39,442 [INFO] |                arguments to this function are incorrect
2025-04-16 00:55:39,442 [INFO] |
2025-04-16 00:55:39,442 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,442 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,443 [INFO] note: associated function defined here
2025-04-16 00:55:39,443 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,443 [INFO] |
2025-04-16 00:55:39,444 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,444 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,444 [INFO] 
2025-04-16 00:55:39,444 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,444 [INFO] --> compat/regex.rs:18285:15
2025-04-16 00:55:39,445 [INFO] |
2025-04-16 00:55:39,445 [INFO] 18285 |         match *re_opcode_t::from_libc_c_uint(p1) as libc::c_uint {
2025-04-16 00:55:39,445 [INFO] |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,445 [INFO] 
2025-04-16 00:55:39,470 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,470 [INFO] --> compat/regex.rs:18317:42
2025-04-16 00:55:39,470 [INFO] |
2025-04-16 00:55:39,470 [INFO] 18317 |     match *re_opcode_t::from_libc_c_uint(fresh187) as libc::c_uint {
2025-04-16 00:55:39,470 [INFO] |            ----------------------------- ^^^^^^^^ expected `u32`, found *-ptr
2025-04-16 00:55:39,471 [INFO] |            |
2025-04-16 00:55:39,471 [INFO] |            arguments to this function are incorrect
2025-04-16 00:55:39,471 [INFO] |
2025-04-16 00:55:39,472 [INFO] = note:     expected type `u32`
2025-04-16 00:55:39,472 [INFO] found raw pointer `*mut u8`
2025-04-16 00:55:39,472 [INFO] note: associated function defined here
2025-04-16 00:55:39,472 [INFO] --> compat/regex.rs:227:8
2025-04-16 00:55:39,472 [INFO] |
2025-04-16 00:55:39,473 [INFO] 227   |     fn from_libc_c_uint(value: libc::c_uint) -> re_opcode_t {
2025-04-16 00:55:39,473 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,473 [INFO] 
2025-04-16 00:55:39,473 [INFO] error[E0614]: type `re_opcode_t` cannot be dereferenced
2025-04-16 00:55:39,473 [INFO] --> compat/regex.rs:18317:11
2025-04-16 00:55:39,473 [INFO] |
2025-04-16 00:55:39,474 [INFO] 18317 |     match *re_opcode_t::from_libc_c_uint(fresh187) as libc::c_uint {
2025-04-16 00:55:39,474 [INFO] |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-16 00:55:39,474 [INFO] 
2025-04-16 00:55:39,515 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,515 [INFO] --> src/psgen.rs:2837:55
2025-04-16 00:55:39,516 [INFO] |
2025-04-16 00:55:39,516 [INFO] 2837 |         (*token).type_0 = TokenType::from_libc_c_uint(pending_token);
2025-04-16 00:55:39,516 [INFO] |                           --------------------------- ^^^^^^^^^^^^^ expected `u32`, found `i32`
2025-04-16 00:55:39,516 [INFO] |                           |
2025-04-16 00:55:39,516 [INFO] |                           arguments to this function are incorrect
2025-04-16 00:55:39,517 [INFO] |
2025-04-16 00:55:39,517 [INFO] note: associated function defined here
2025-04-16 00:55:39,517 [INFO] --> src/psgen.rs:593:8
2025-04-16 00:55:39,517 [INFO] |
2025-04-16 00:55:39,517 [INFO] 593  |     fn from_libc_c_uint(value: libc::c_uint) -> TokenType {
2025-04-16 00:55:39,517 [INFO] |        ^^^^^^^^^^^^^^^^ -------------------
2025-04-16 00:55:39,518 [INFO] help: you can convert an `i32` to a `u32` and panic if the converted value doesn't fit
2025-04-16 00:55:39,518 [INFO] |
2025-04-16 00:55:39,518 [INFO] 2837 |         (*token).type_0 = TokenType::from_libc_c_uint(pending_token.try_into().unwrap());
2025-04-16 00:55:39,518 [INFO] |                                                                    ++++++++++++++++++++
2025-04-16 00:55:39,518 [INFO] 
2025-04-16 00:55:39,612 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,612 [INFO] --> states/prims.rs:723:9
2025-04-16 00:55:39,612 [INFO] |
2025-04-16 00:55:39,612 [INFO] 721 |     n = match_arg(
2025-04-16 00:55:39,613 [INFO] |         --------- arguments to this function are incorrect
2025-04-16 00:55:39,613 [INFO] 722 |         prim_name,
2025-04-16 00:55:39,613 [INFO] 723 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,613 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,613 [INFO] |
2025-04-16 00:55:39,614 [INFO] note: function defined here
2025-04-16 00:55:39,614 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,614 [INFO] |
2025-04-16 00:55:39,614 [INFO] 450 | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,614 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,614 [INFO] 451 |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,615 [INFO] |     --------------------------------
2025-04-16 00:55:39,615 [INFO] 452 |     mut type_0: NodeType,
2025-04-16 00:55:39,616 [INFO] |     --------------------
2025-04-16 00:55:39,616 [INFO] 453 |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,616 [INFO] |     ----------------------------
2025-04-16 00:55:39,616 [INFO] 454 |     mut env: *mut Environment,
2025-04-16 00:55:39,617 [INFO] |     -------------------------
2025-04-16 00:55:39,617 [INFO] 455 |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,617 [INFO] |     -------------------------
2025-04-16 00:55:39,618 [INFO] 
2025-04-16 00:55:39,629 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,629 [INFO] --> states/prims.rs:790:9
2025-04-16 00:55:39,630 [INFO] |
2025-04-16 00:55:39,630 [INFO] 788 |     var = match_arg(
2025-04-16 00:55:39,630 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:39,630 [INFO] 789 |         prim_name,
2025-04-16 00:55:39,630 [INFO] 790 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,630 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,630 [INFO] |
2025-04-16 00:55:39,630 [INFO] note: function defined here
2025-04-16 00:55:39,631 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,631 [INFO] |
2025-04-16 00:55:39,631 [INFO] 450 | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,632 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,632 [INFO] 451 |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,632 [INFO] |     --------------------------------
2025-04-16 00:55:39,632 [INFO] 452 |     mut type_0: NodeType,
2025-04-16 00:55:39,632 [INFO] |     --------------------
2025-04-16 00:55:39,632 [INFO] 453 |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,632 [INFO] |     ----------------------------
2025-04-16 00:55:39,632 [INFO] 454 |     mut env: *mut Environment,
2025-04-16 00:55:39,633 [INFO] |     -------------------------
2025-04-16 00:55:39,633 [INFO] 455 |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,633 [INFO] |     -------------------------
2025-04-16 00:55:39,633 [INFO] 
2025-04-16 00:55:39,649 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,649 [INFO] --> states/prims.rs:843:9
2025-04-16 00:55:39,649 [INFO] |
2025-04-16 00:55:39,649 [INFO] 841 |     n = match_arg(
2025-04-16 00:55:39,649 [INFO] |         --------- arguments to this function are incorrect
2025-04-16 00:55:39,649 [INFO] 842 |         prim_name,
2025-04-16 00:55:39,650 [INFO] 843 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,650 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,650 [INFO] |
2025-04-16 00:55:39,650 [INFO] note: function defined here
2025-04-16 00:55:39,651 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,651 [INFO] |
2025-04-16 00:55:39,651 [INFO] 450 | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,651 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,651 [INFO] 451 |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,652 [INFO] |     --------------------------------
2025-04-16 00:55:39,652 [INFO] 452 |     mut type_0: NodeType,
2025-04-16 00:55:39,652 [INFO] |     --------------------
2025-04-16 00:55:39,652 [INFO] 453 |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,653 [INFO] |     ----------------------------
2025-04-16 00:55:39,653 [INFO] 454 |     mut env: *mut Environment,
2025-04-16 00:55:39,653 [INFO] |     -------------------------
2025-04-16 00:55:39,653 [INFO] 455 |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,653 [INFO] |     -------------------------
2025-04-16 00:55:39,654 [INFO] 
2025-04-16 00:55:39,669 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,669 [INFO] --> states/prims.rs:1024:9
2025-04-16 00:55:39,670 [INFO] |
2025-04-16 00:55:39,670 [INFO] 1022 |     s = match_arg(
2025-04-16 00:55:39,670 [INFO] |         --------- arguments to this function are incorrect
2025-04-16 00:55:39,670 [INFO] 1023 |         prim_name,
2025-04-16 00:55:39,671 [INFO] 1024 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,671 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,671 [INFO] |
2025-04-16 00:55:39,671 [INFO] note: function defined here
2025-04-16 00:55:39,671 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,672 [INFO] |
2025-04-16 00:55:39,672 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,672 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,672 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,672 [INFO] |     --------------------------------
2025-04-16 00:55:39,672 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,673 [INFO] |     --------------------
2025-04-16 00:55:39,673 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,673 [INFO] |     ----------------------------
2025-04-16 00:55:39,673 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,674 [INFO] |     -------------------------
2025-04-16 00:55:39,674 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,674 [INFO] |     -------------------------
2025-04-16 00:55:39,674 [INFO] 
2025-04-16 00:55:39,690 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,690 [INFO] --> states/prims.rs:1211:9
2025-04-16 00:55:39,690 [INFO] |
2025-04-16 00:55:39,690 [INFO] 1209 |     start = match_arg(
2025-04-16 00:55:39,690 [INFO] |             --------- arguments to this function are incorrect
2025-04-16 00:55:39,690 [INFO] 1210 |         prim_name,
2025-04-16 00:55:39,690 [INFO] 1211 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,691 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,691 [INFO] |
2025-04-16 00:55:39,691 [INFO] note: function defined here
2025-04-16 00:55:39,691 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,691 [INFO] |
2025-04-16 00:55:39,691 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,691 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,691 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,692 [INFO] |     --------------------------------
2025-04-16 00:55:39,692 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,692 [INFO] |     --------------------
2025-04-16 00:55:39,692 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,692 [INFO] |     ----------------------------
2025-04-16 00:55:39,692 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,692 [INFO] |     -------------------------
2025-04-16 00:55:39,692 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,692 [INFO] |     -------------------------
2025-04-16 00:55:39,693 [INFO] 
2025-04-16 00:55:39,703 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,704 [INFO] --> states/prims.rs:1218:9
2025-04-16 00:55:39,704 [INFO] |
2025-04-16 00:55:39,704 [INFO] 1216 |     end = match_arg(
2025-04-16 00:55:39,704 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:39,704 [INFO] 1217 |         prim_name,
2025-04-16 00:55:39,705 [INFO] 1218 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,705 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,705 [INFO] |
2025-04-16 00:55:39,705 [INFO] note: function defined here
2025-04-16 00:55:39,705 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,706 [INFO] |
2025-04-16 00:55:39,706 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,706 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,706 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,706 [INFO] |     --------------------------------
2025-04-16 00:55:39,706 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,706 [INFO] |     --------------------
2025-04-16 00:55:39,707 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,707 [INFO] |     ----------------------------
2025-04-16 00:55:39,707 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,707 [INFO] |     -------------------------
2025-04-16 00:55:39,708 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,708 [INFO] |     -------------------------
2025-04-16 00:55:39,708 [INFO] 
2025-04-16 00:55:39,722 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,723 [INFO] --> states/prims.rs:1351:9
2025-04-16 00:55:39,723 [INFO] |
2025-04-16 00:55:39,723 [INFO] 1349 |     str = match_arg(
2025-04-16 00:55:39,723 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:39,723 [INFO] 1350 |         prim_name,
2025-04-16 00:55:39,723 [INFO] 1351 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,724 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,724 [INFO] |
2025-04-16 00:55:39,724 [INFO] note: function defined here
2025-04-16 00:55:39,724 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,724 [INFO] |
2025-04-16 00:55:39,724 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,725 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,725 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,725 [INFO] |     --------------------------------
2025-04-16 00:55:39,725 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,725 [INFO] |     --------------------
2025-04-16 00:55:39,726 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,726 [INFO] |     ----------------------------
2025-04-16 00:55:39,726 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,726 [INFO] |     -------------------------
2025-04-16 00:55:39,726 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,726 [INFO] |     -------------------------
2025-04-16 00:55:39,727 [INFO] 
2025-04-16 00:55:39,739 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,739 [INFO] --> states/prims.rs:1398:9
2025-04-16 00:55:39,739 [INFO] |
2025-04-16 00:55:39,739 [INFO] 1396 |     ch = match_arg(
2025-04-16 00:55:39,739 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,739 [INFO] 1397 |         prim_name,
2025-04-16 00:55:39,740 [INFO] 1398 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,740 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,740 [INFO] |
2025-04-16 00:55:39,740 [INFO] note: function defined here
2025-04-16 00:55:39,740 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,740 [INFO] |
2025-04-16 00:55:39,740 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,740 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,741 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,741 [INFO] |     --------------------------------
2025-04-16 00:55:39,741 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,741 [INFO] |     --------------------
2025-04-16 00:55:39,741 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,741 [INFO] |     ----------------------------
2025-04-16 00:55:39,741 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,742 [INFO] |     -------------------------
2025-04-16 00:55:39,742 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,742 [INFO] |     -------------------------
2025-04-16 00:55:39,742 [INFO] 
2025-04-16 00:55:39,757 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,757 [INFO] --> states/prims.rs:1405:9
2025-04-16 00:55:39,757 [INFO] |
2025-04-16 00:55:39,757 [INFO] 1403 |     st = match_arg(
2025-04-16 00:55:39,757 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,757 [INFO] 1404 |         prim_name,
2025-04-16 00:55:39,758 [INFO] 1405 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,758 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,758 [INFO] |
2025-04-16 00:55:39,758 [INFO] note: function defined here
2025-04-16 00:55:39,758 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,758 [INFO] |
2025-04-16 00:55:39,759 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,759 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,759 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,759 [INFO] |     --------------------------------
2025-04-16 00:55:39,760 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,760 [INFO] |     --------------------
2025-04-16 00:55:39,760 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,760 [INFO] |     ----------------------------
2025-04-16 00:55:39,761 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,761 [INFO] |     -------------------------
2025-04-16 00:55:39,761 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,761 [INFO] |     -------------------------
2025-04-16 00:55:39,761 [INFO] 
2025-04-16 00:55:39,769 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,769 [INFO] --> states/prims.rs:1466:9
2025-04-16 00:55:39,770 [INFO] |
2025-04-16 00:55:39,771 [INFO] 1464 |     str = match_arg(
2025-04-16 00:55:39,771 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:39,771 [INFO] 1465 |         prim_name,
2025-04-16 00:55:39,771 [INFO] 1466 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,771 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,772 [INFO] |
2025-04-16 00:55:39,773 [INFO] note: function defined here
2025-04-16 00:55:39,773 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,773 [INFO] |
2025-04-16 00:55:39,774 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,774 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,774 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,774 [INFO] |     --------------------------------
2025-04-16 00:55:39,775 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,775 [INFO] |     --------------------
2025-04-16 00:55:39,776 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,776 [INFO] |     ----------------------------
2025-04-16 00:55:39,776 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,776 [INFO] |     -------------------------
2025-04-16 00:55:39,776 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,777 [INFO] |     -------------------------
2025-04-16 00:55:39,777 [INFO] 
2025-04-16 00:55:39,781 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,782 [INFO] --> states/prims.rs:1473:9
2025-04-16 00:55:39,782 [INFO] |
2025-04-16 00:55:39,782 [INFO] 1471 |     re = match_arg(
2025-04-16 00:55:39,782 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,782 [INFO] 1472 |         prim_name,
2025-04-16 00:55:39,782 [INFO] 1473 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,782 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,783 [INFO] |
2025-04-16 00:55:39,783 [INFO] note: function defined here
2025-04-16 00:55:39,783 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,783 [INFO] |
2025-04-16 00:55:39,783 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,783 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,784 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,784 [INFO] |     --------------------------------
2025-04-16 00:55:39,784 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,784 [INFO] |     --------------------
2025-04-16 00:55:39,784 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,784 [INFO] |     ----------------------------
2025-04-16 00:55:39,785 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,785 [INFO] |     -------------------------
2025-04-16 00:55:39,785 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,785 [INFO] |     -------------------------
2025-04-16 00:55:39,785 [INFO] 
2025-04-16 00:55:39,795 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,795 [INFO] --> states/prims.rs:1805:9
2025-04-16 00:55:39,796 [INFO] |
2025-04-16 00:55:39,796 [INFO] 1803 |     str = match_arg(
2025-04-16 00:55:39,796 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:39,797 [INFO] 1804 |         prim_name,
2025-04-16 00:55:39,797 [INFO] 1805 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,797 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,797 [INFO] |
2025-04-16 00:55:39,797 [INFO] note: function defined here
2025-04-16 00:55:39,798 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,798 [INFO] |
2025-04-16 00:55:39,798 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,799 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,799 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,799 [INFO] |     --------------------------------
2025-04-16 00:55:39,800 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,800 [INFO] |     --------------------
2025-04-16 00:55:39,800 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,800 [INFO] |     ----------------------------
2025-04-16 00:55:39,801 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,801 [INFO] |     -------------------------
2025-04-16 00:55:39,801 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,802 [INFO] |     -------------------------
2025-04-16 00:55:39,802 [INFO] 
2025-04-16 00:55:39,810 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,811 [INFO] --> states/prims.rs:1812:9
2025-04-16 00:55:39,811 [INFO] |
2025-04-16 00:55:39,811 [INFO] 1810 |     re = match_arg(
2025-04-16 00:55:39,812 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,812 [INFO] 1811 |         prim_name,
2025-04-16 00:55:39,812 [INFO] 1812 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,812 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,812 [INFO] |
2025-04-16 00:55:39,813 [INFO] note: function defined here
2025-04-16 00:55:39,813 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,813 [INFO] |
2025-04-16 00:55:39,813 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,813 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,813 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,814 [INFO] |     --------------------------------
2025-04-16 00:55:39,814 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,815 [INFO] |     --------------------
2025-04-16 00:55:39,815 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,815 [INFO] |     ----------------------------
2025-04-16 00:55:39,815 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,815 [INFO] |     -------------------------
2025-04-16 00:55:39,816 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,817 [INFO] |     -------------------------
2025-04-16 00:55:39,817 [INFO] 
2025-04-16 00:55:39,825 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,825 [INFO] --> states/prims.rs:1819:9
2025-04-16 00:55:39,825 [INFO] |
2025-04-16 00:55:39,826 [INFO] 1817 |     subst = match_arg(
2025-04-16 00:55:39,826 [INFO] |             --------- arguments to this function are incorrect
2025-04-16 00:55:39,827 [INFO] 1818 |         prim_name,
2025-04-16 00:55:39,827 [INFO] 1819 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,827 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,827 [INFO] |
2025-04-16 00:55:39,828 [INFO] note: function defined here
2025-04-16 00:55:39,828 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,828 [INFO] |
2025-04-16 00:55:39,828 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,828 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,829 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,829 [INFO] |     --------------------------------
2025-04-16 00:55:39,829 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,829 [INFO] |     --------------------
2025-04-16 00:55:39,830 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,830 [INFO] |     ----------------------------
2025-04-16 00:55:39,830 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,830 [INFO] |     -------------------------
2025-04-16 00:55:39,831 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,832 [INFO] |     -------------------------
2025-04-16 00:55:39,832 [INFO] 
2025-04-16 00:55:39,837 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,838 [INFO] --> states/prims.rs:1852:9
2025-04-16 00:55:39,838 [INFO] |
2025-04-16 00:55:39,838 [INFO] 1850 |     str = match_arg(
2025-04-16 00:55:39,838 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:39,838 [INFO] 1851 |         prim_name,
2025-04-16 00:55:39,838 [INFO] 1852 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,839 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,839 [INFO] |
2025-04-16 00:55:39,839 [INFO] note: function defined here
2025-04-16 00:55:39,839 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,839 [INFO] |
2025-04-16 00:55:39,839 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,839 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,839 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,840 [INFO] |     --------------------------------
2025-04-16 00:55:39,840 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,840 [INFO] |     --------------------
2025-04-16 00:55:39,840 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,840 [INFO] |     ----------------------------
2025-04-16 00:55:39,840 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,841 [INFO] |     -------------------------
2025-04-16 00:55:39,841 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,841 [INFO] |     -------------------------
2025-04-16 00:55:39,841 [INFO] 
2025-04-16 00:55:39,851 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,851 [INFO] --> states/prims.rs:1859:9
2025-04-16 00:55:39,851 [INFO] |
2025-04-16 00:55:39,851 [INFO] 1857 |     re = match_arg(
2025-04-16 00:55:39,851 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,852 [INFO] 1858 |         prim_name,
2025-04-16 00:55:39,852 [INFO] 1859 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,852 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,853 [INFO] |
2025-04-16 00:55:39,853 [INFO] note: function defined here
2025-04-16 00:55:39,853 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,853 [INFO] |
2025-04-16 00:55:39,853 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,853 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,854 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,854 [INFO] |     --------------------------------
2025-04-16 00:55:39,854 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,855 [INFO] |     --------------------
2025-04-16 00:55:39,855 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,855 [INFO] |     ----------------------------
2025-04-16 00:55:39,855 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,856 [INFO] |     -------------------------
2025-04-16 00:55:39,856 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,856 [INFO] |     -------------------------
2025-04-16 00:55:39,856 [INFO] 
2025-04-16 00:55:39,865 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,865 [INFO] --> states/prims.rs:1866:9
2025-04-16 00:55:39,865 [INFO] |
2025-04-16 00:55:39,865 [INFO] 1864 |     subst = match_arg(
2025-04-16 00:55:39,865 [INFO] |             --------- arguments to this function are incorrect
2025-04-16 00:55:39,866 [INFO] 1865 |         prim_name,
2025-04-16 00:55:39,866 [INFO] 1866 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,866 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,867 [INFO] |
2025-04-16 00:55:39,867 [INFO] note: function defined here
2025-04-16 00:55:39,867 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,867 [INFO] |
2025-04-16 00:55:39,867 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,868 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,868 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,868 [INFO] |     --------------------------------
2025-04-16 00:55:39,868 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,869 [INFO] |     --------------------
2025-04-16 00:55:39,869 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,869 [INFO] |     ----------------------------
2025-04-16 00:55:39,869 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,870 [INFO] |     -------------------------
2025-04-16 00:55:39,870 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,870 [INFO] |     -------------------------
2025-04-16 00:55:39,870 [INFO] 
2025-04-16 00:55:39,880 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,880 [INFO] --> states/prims.rs:1902:9
2025-04-16 00:55:39,880 [INFO] |
2025-04-16 00:55:39,880 [INFO] 1900 |     re = match_arg(
2025-04-16 00:55:39,881 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,881 [INFO] 1901 |         prim_name,
2025-04-16 00:55:39,881 [INFO] 1902 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,881 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,881 [INFO] |
2025-04-16 00:55:39,881 [INFO] note: function defined here
2025-04-16 00:55:39,882 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,882 [INFO] |
2025-04-16 00:55:39,882 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,882 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,882 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,883 [INFO] |     --------------------------------
2025-04-16 00:55:39,883 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,883 [INFO] |     --------------------
2025-04-16 00:55:39,883 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,884 [INFO] |     ----------------------------
2025-04-16 00:55:39,884 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,884 [INFO] |     -------------------------
2025-04-16 00:55:39,885 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,885 [INFO] |     -------------------------
2025-04-16 00:55:39,885 [INFO] 
2025-04-16 00:55:39,894 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,895 [INFO] --> states/prims.rs:1909:9
2025-04-16 00:55:39,896 [INFO] |
2025-04-16 00:55:39,896 [INFO] 1907 |     str = match_arg(
2025-04-16 00:55:39,896 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:39,896 [INFO] 1908 |         prim_name,
2025-04-16 00:55:39,896 [INFO] 1909 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,897 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,897 [INFO] |
2025-04-16 00:55:39,897 [INFO] note: function defined here
2025-04-16 00:55:39,897 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,898 [INFO] |
2025-04-16 00:55:39,898 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,898 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,898 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,898 [INFO] |     --------------------------------
2025-04-16 00:55:39,898 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,898 [INFO] |     --------------------
2025-04-16 00:55:39,899 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,899 [INFO] |     ----------------------------
2025-04-16 00:55:39,900 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,900 [INFO] |     -------------------------
2025-04-16 00:55:39,900 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,900 [INFO] |     -------------------------
2025-04-16 00:55:39,900 [INFO] 
2025-04-16 00:55:39,909 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,909 [INFO] --> states/prims.rs:2032:9
2025-04-16 00:55:39,909 [INFO] |
2025-04-16 00:55:39,909 [INFO] 2030 |     fmt = match_arg(
2025-04-16 00:55:39,909 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:39,909 [INFO] 2031 |         prim_name,
2025-04-16 00:55:39,910 [INFO] 2032 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,910 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,910 [INFO] |
2025-04-16 00:55:39,911 [INFO] note: function defined here
2025-04-16 00:55:39,911 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,911 [INFO] |
2025-04-16 00:55:39,911 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,911 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,912 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,912 [INFO] |     --------------------------------
2025-04-16 00:55:39,912 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,912 [INFO] |     --------------------
2025-04-16 00:55:39,913 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,913 [INFO] |     ----------------------------
2025-04-16 00:55:39,914 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,914 [INFO] |     -------------------------
2025-04-16 00:55:39,914 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,914 [INFO] |     -------------------------
2025-04-16 00:55:39,915 [INFO] 
2025-04-16 00:55:39,927 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,927 [INFO] --> states/prims.rs:2324:9
2025-04-16 00:55:39,928 [INFO] |
2025-04-16 00:55:39,928 [INFO] 2322 |     s1 = match_arg(
2025-04-16 00:55:39,928 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,928 [INFO] 2323 |         prim_name,
2025-04-16 00:55:39,928 [INFO] 2324 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,928 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,928 [INFO] |
2025-04-16 00:55:39,929 [INFO] note: function defined here
2025-04-16 00:55:39,929 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,929 [INFO] |
2025-04-16 00:55:39,929 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,929 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,930 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,930 [INFO] |     --------------------------------
2025-04-16 00:55:39,930 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,930 [INFO] |     --------------------
2025-04-16 00:55:39,930 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,930 [INFO] |     ----------------------------
2025-04-16 00:55:39,931 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,931 [INFO] |     -------------------------
2025-04-16 00:55:39,931 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,932 [INFO] |     -------------------------
2025-04-16 00:55:39,932 [INFO] 
2025-04-16 00:55:39,939 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,939 [INFO] --> states/prims.rs:2331:9
2025-04-16 00:55:39,940 [INFO] |
2025-04-16 00:55:39,940 [INFO] 2329 |     s2 = match_arg(
2025-04-16 00:55:39,941 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,941 [INFO] 2330 |         prim_name,
2025-04-16 00:55:39,941 [INFO] 2331 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,941 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,941 [INFO] |
2025-04-16 00:55:39,942 [INFO] note: function defined here
2025-04-16 00:55:39,942 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,942 [INFO] |
2025-04-16 00:55:39,942 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,943 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,943 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,943 [INFO] |     --------------------------------
2025-04-16 00:55:39,944 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,944 [INFO] |     --------------------
2025-04-16 00:55:39,944 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,944 [INFO] |     ----------------------------
2025-04-16 00:55:39,945 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,945 [INFO] |     -------------------------
2025-04-16 00:55:39,945 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,945 [INFO] |     -------------------------
2025-04-16 00:55:39,946 [INFO] 
2025-04-16 00:55:39,955 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,955 [INFO] --> states/prims.rs:2407:9
2025-04-16 00:55:39,955 [INFO] |
2025-04-16 00:55:39,955 [INFO] 2405 |     n = match_arg(
2025-04-16 00:55:39,956 [INFO] |         --------- arguments to this function are incorrect
2025-04-16 00:55:39,956 [INFO] 2406 |         prim_name,
2025-04-16 00:55:39,956 [INFO] 2407 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,956 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,956 [INFO] |
2025-04-16 00:55:39,957 [INFO] note: function defined here
2025-04-16 00:55:39,957 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,957 [INFO] |
2025-04-16 00:55:39,957 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,958 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,958 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,958 [INFO] |     --------------------------------
2025-04-16 00:55:39,959 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,959 [INFO] |     --------------------
2025-04-16 00:55:39,959 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,959 [INFO] |     ----------------------------
2025-04-16 00:55:39,959 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,960 [INFO] |     -------------------------
2025-04-16 00:55:39,960 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,960 [INFO] |     -------------------------
2025-04-16 00:55:39,961 [INFO] 
2025-04-16 00:55:39,971 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,971 [INFO] --> states/prims.rs:2505:9
2025-04-16 00:55:39,972 [INFO] |
2025-04-16 00:55:39,972 [INFO] 2503 |     s1 = match_arg(
2025-04-16 00:55:39,972 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,972 [INFO] 2504 |         prim_name,
2025-04-16 00:55:39,972 [INFO] 2505 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,972 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,973 [INFO] |
2025-04-16 00:55:39,973 [INFO] note: function defined here
2025-04-16 00:55:39,973 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,973 [INFO] |
2025-04-16 00:55:39,973 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,974 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,974 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,974 [INFO] |     --------------------------------
2025-04-16 00:55:39,974 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,974 [INFO] |     --------------------
2025-04-16 00:55:39,974 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,975 [INFO] |     ----------------------------
2025-04-16 00:55:39,975 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,975 [INFO] |     -------------------------
2025-04-16 00:55:39,975 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,976 [INFO] |     -------------------------
2025-04-16 00:55:39,976 [INFO] 
2025-04-16 00:55:39,985 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,985 [INFO] --> states/prims.rs:2512:9
2025-04-16 00:55:39,985 [INFO] |
2025-04-16 00:55:39,985 [INFO] 2510 |     s2 = match_arg(
2025-04-16 00:55:39,985 [INFO] |          --------- arguments to this function are incorrect
2025-04-16 00:55:39,986 [INFO] 2511 |         prim_name,
2025-04-16 00:55:39,986 [INFO] 2512 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:39,986 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:39,986 [INFO] |
2025-04-16 00:55:39,987 [INFO] note: function defined here
2025-04-16 00:55:39,987 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:39,987 [INFO] |
2025-04-16 00:55:39,987 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:39,988 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:39,988 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:39,988 [INFO] |     --------------------------------
2025-04-16 00:55:39,988 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:39,989 [INFO] |     --------------------
2025-04-16 00:55:39,989 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:39,989 [INFO] |     ----------------------------
2025-04-16 00:55:39,990 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:39,990 [INFO] |     -------------------------
2025-04-16 00:55:39,990 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:39,990 [INFO] |     -------------------------
2025-04-16 00:55:39,991 [INFO] 
2025-04-16 00:55:39,999 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:39,999 [INFO] --> states/prims.rs:2519:9
2025-04-16 00:55:39,999 [INFO] |
2025-04-16 00:55:40,000 [INFO] 2517 |     len = match_arg(
2025-04-16 00:55:40,000 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:40,000 [INFO] 2518 |         prim_name,
2025-04-16 00:55:40,000 [INFO] 2519 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-16 00:55:40,000 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:40,001 [INFO] |
2025-04-16 00:55:40,001 [INFO] note: function defined here
2025-04-16 00:55:40,001 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:40,001 [INFO] |
2025-04-16 00:55:40,002 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:40,002 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:40,002 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:40,002 [INFO] |     --------------------------------
2025-04-16 00:55:40,002 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:40,002 [INFO] |     --------------------
2025-04-16 00:55:40,003 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:40,003 [INFO] |     ----------------------------
2025-04-16 00:55:40,003 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:40,003 [INFO] |     -------------------------
2025-04-16 00:55:40,004 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:40,004 [INFO] |     -------------------------
2025-04-16 00:55:40,004 [INFO] 
2025-04-16 00:55:40,014 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,014 [INFO] --> states/prims.rs:2599:9
2025-04-16 00:55:40,014 [INFO] |
2025-04-16 00:55:40,014 [INFO] 2597 |     str = match_arg(
2025-04-16 00:55:40,014 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:40,015 [INFO] 2598 |         prim_name,
2025-04-16 00:55:40,015 [INFO] 2599 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-16 00:55:40,015 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:40,015 [INFO] |
2025-04-16 00:55:40,015 [INFO] note: function defined here
2025-04-16 00:55:40,016 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:40,016 [INFO] |
2025-04-16 00:55:40,016 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:40,016 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:40,016 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:40,016 [INFO] |     --------------------------------
2025-04-16 00:55:40,017 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:40,017 [INFO] |     --------------------
2025-04-16 00:55:40,017 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:40,017 [INFO] |     ----------------------------
2025-04-16 00:55:40,017 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:40,018 [INFO] |     -------------------------
2025-04-16 00:55:40,018 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:40,018 [INFO] |     -------------------------
2025-04-16 00:55:40,018 [INFO] 
2025-04-16 00:55:40,027 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,027 [INFO] --> states/prims.rs:2606:9
2025-04-16 00:55:40,027 [INFO] |
2025-04-16 00:55:40,027 [INFO] 2604 |     start = match_arg(
2025-04-16 00:55:40,028 [INFO] |             --------- arguments to this function are incorrect
2025-04-16 00:55:40,028 [INFO] 2605 |         prim_name,
2025-04-16 00:55:40,028 [INFO] 2606 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-16 00:55:40,028 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:40,029 [INFO] |
2025-04-16 00:55:40,029 [INFO] note: function defined here
2025-04-16 00:55:40,029 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:40,029 [INFO] |
2025-04-16 00:55:40,029 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:40,029 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:40,030 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:40,030 [INFO] |     --------------------------------
2025-04-16 00:55:40,030 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:40,030 [INFO] |     --------------------
2025-04-16 00:55:40,031 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:40,031 [INFO] |     ----------------------------
2025-04-16 00:55:40,031 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:40,032 [INFO] |     -------------------------
2025-04-16 00:55:40,032 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:40,033 [INFO] |     -------------------------
2025-04-16 00:55:40,033 [INFO] 
2025-04-16 00:55:40,042 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,042 [INFO] --> states/prims.rs:2613:9
2025-04-16 00:55:40,042 [INFO] |
2025-04-16 00:55:40,043 [INFO] 2611 |     end = match_arg(
2025-04-16 00:55:40,043 [INFO] |           --------- arguments to this function are incorrect
2025-04-16 00:55:40,043 [INFO] 2612 |         prim_name,
2025-04-16 00:55:40,043 [INFO] 2613 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-16 00:55:40,043 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-16 00:55:40,044 [INFO] |
2025-04-16 00:55:40,044 [INFO] note: function defined here
2025-04-16 00:55:40,044 [INFO] --> states/prims.rs:450:22
2025-04-16 00:55:40,044 [INFO] |
2025-04-16 00:55:40,044 [INFO] 450  | unsafe extern "C" fn match_arg(
2025-04-16 00:55:40,045 [INFO] |                      ^^^^^^^^^
2025-04-16 00:55:40,045 [INFO] 451  |     mut prim_name: *mut libc::c_char,
2025-04-16 00:55:40,045 [INFO] |     --------------------------------
2025-04-16 00:55:40,045 [INFO] 452  |     mut type_0: NodeType,
2025-04-16 00:55:40,045 [INFO] |     --------------------
2025-04-16 00:55:40,045 [INFO] 453  |     mut argp: *mut *mut ListItem,
2025-04-16 00:55:40,046 [INFO] |     ----------------------------
2025-04-16 00:55:40,046 [INFO] 454  |     mut env: *mut Environment,
2025-04-16 00:55:40,046 [INFO] |     -------------------------
2025-04-16 00:55:40,046 [INFO] 455  |     mut linenum: libc::c_uint,
2025-04-16 00:55:40,047 [INFO] |     -------------------------
2025-04-16 00:55:40,047 [INFO] 
2025-04-16 00:55:40,068 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,068 [INFO] --> states/utils.rs:642:21
2025-04-16 00:55:40,069 [INFO] |
2025-04-16 00:55:40,069 [INFO] 642 |     n2 = node_alloc((*n).type_0 as libc::c_uint);
2025-04-16 00:55:40,069 [INFO] |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,069 [INFO] |          |
2025-04-16 00:55:40,070 [INFO] |          arguments to this function are incorrect
2025-04-16 00:55:40,070 [INFO] |
2025-04-16 00:55:40,070 [INFO] note: function defined here
2025-04-16 00:55:40,070 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,070 [INFO] |
2025-04-16 00:55:40,070 [INFO] 620 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,071 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,071 [INFO] 
2025-04-16 00:55:40,081 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,081 [INFO] --> states/utils.rs:743:20
2025-04-16 00:55:40,082 [INFO] |
2025-04-16 00:55:40,082 [INFO] 743 |     n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-16 00:55:40,082 [INFO] |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,082 [INFO] |         |
2025-04-16 00:55:40,082 [INFO] |         arguments to this function are incorrect
2025-04-16 00:55:40,083 [INFO] |
2025-04-16 00:55:40,083 [INFO] note: function defined here
2025-04-16 00:55:40,083 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,084 [INFO] |
2025-04-16 00:55:40,084 [INFO] 620 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,084 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,084 [INFO] 
2025-04-16 00:55:40,096 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,096 [INFO] --> states/utils.rs:1046:28
2025-04-16 00:55:40,096 [INFO] |
2025-04-16 00:55:40,096 [INFO] 1046 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-16 00:55:40,096 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,097 [INFO] |                 |
2025-04-16 00:55:40,097 [INFO] |                 arguments to this function are incorrect
2025-04-16 00:55:40,097 [INFO] |
2025-04-16 00:55:40,097 [INFO] note: function defined here
2025-04-16 00:55:40,098 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,098 [INFO] |
2025-04-16 00:55:40,098 [INFO] 620  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,098 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,098 [INFO] 
2025-04-16 00:55:40,109 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,110 [INFO] --> states/utils.rs:1079:28
2025-04-16 00:55:40,110 [INFO] |
2025-04-16 00:55:40,110 [INFO] 1079 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-16 00:55:40,110 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,110 [INFO] |                 |
2025-04-16 00:55:40,111 [INFO] |                 arguments to this function are incorrect
2025-04-16 00:55:40,111 [INFO] |
2025-04-16 00:55:40,111 [INFO] note: function defined here
2025-04-16 00:55:40,112 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,112 [INFO] |
2025-04-16 00:55:40,112 [INFO] 620  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,112 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,112 [INFO] 
2025-04-16 00:55:40,121 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,121 [INFO] --> states/utils.rs:1112:28
2025-04-16 00:55:40,121 [INFO] |
2025-04-16 00:55:40,122 [INFO] 1112 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-16 00:55:40,122 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,122 [INFO] |                 |
2025-04-16 00:55:40,122 [INFO] |                 arguments to this function are incorrect
2025-04-16 00:55:40,122 [INFO] |
2025-04-16 00:55:40,122 [INFO] note: function defined here
2025-04-16 00:55:40,123 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,123 [INFO] |
2025-04-16 00:55:40,123 [INFO] 620  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,124 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,124 [INFO] 
2025-04-16 00:55:40,134 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,135 [INFO] --> states/utils.rs:1202:32
2025-04-16 00:55:40,135 [INFO] |
2025-04-16 00:55:40,136 [INFO] 1202 |                 n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-16 00:55:40,136 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,136 [INFO] |                     |
2025-04-16 00:55:40,136 [INFO] |                     arguments to this function are incorrect
2025-04-16 00:55:40,136 [INFO] |
2025-04-16 00:55:40,136 [INFO] note: function defined here
2025-04-16 00:55:40,137 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,137 [INFO] |
2025-04-16 00:55:40,137 [INFO] 620  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,137 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,138 [INFO] 
2025-04-16 00:55:40,147 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,148 [INFO] --> states/utils.rs:1270:32
2025-04-16 00:55:40,148 [INFO] |
2025-04-16 00:55:40,149 [INFO] 1270 |                 n = node_alloc(NodeType::nREAL as libc::c_int as libc::c_uint);
2025-04-16 00:55:40,149 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,149 [INFO] |                     |
2025-04-16 00:55:40,149 [INFO] |                     arguments to this function are incorrect
2025-04-16 00:55:40,149 [INFO] |
2025-04-16 00:55:40,149 [INFO] note: function defined here
2025-04-16 00:55:40,150 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,150 [INFO] |
2025-04-16 00:55:40,151 [INFO] 620  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,151 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,151 [INFO] 
2025-04-16 00:55:40,161 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,161 [INFO] --> states/utils.rs:1375:28
2025-04-16 00:55:40,162 [INFO] |
2025-04-16 00:55:40,162 [INFO] 1375 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-16 00:55:40,162 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,162 [INFO] |                 |
2025-04-16 00:55:40,162 [INFO] |                 arguments to this function are incorrect
2025-04-16 00:55:40,162 [INFO] |
2025-04-16 00:55:40,163 [INFO] note: function defined here
2025-04-16 00:55:40,163 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,164 [INFO] |
2025-04-16 00:55:40,164 [INFO] 620  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,164 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,164 [INFO] 
2025-04-16 00:55:40,176 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,177 [INFO] --> states/utils.rs:1514:25
2025-04-16 00:55:40,177 [INFO] |
2025-04-16 00:55:40,178 [INFO] 1511 |                     n2 = calculate_binary(
2025-04-16 00:55:40,178 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-16 00:55:40,178 [INFO] ...
2025-04-16 00:55:40,178 [INFO] 1514 |                         ExprType::ePLUS as libc::c_int as libc::c_uint,
2025-04-16 00:55:40,179 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-16 00:55:40,179 [INFO] |
2025-04-16 00:55:40,179 [INFO] note: function defined here
2025-04-16 00:55:40,180 [INFO] --> states/utils.rs:1190:22
2025-04-16 00:55:40,180 [INFO] |
2025-04-16 00:55:40,180 [INFO] 1190 | unsafe extern "C" fn calculate_binary(
2025-04-16 00:55:40,180 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-16 00:55:40,181 [INFO] 1191 |     mut l: *mut Node,
2025-04-16 00:55:40,181 [INFO] |     ----------------
2025-04-16 00:55:40,181 [INFO] 1192 |     mut r: *mut Node,
2025-04-16 00:55:40,181 [INFO] |     ----------------
2025-04-16 00:55:40,182 [INFO] 1193 |     mut type_0: ExprType,
2025-04-16 00:55:40,182 [INFO] |     --------------------
2025-04-16 00:55:40,182 [INFO] 1194 |     mut linenum_0: libc::c_uint,
2025-04-16 00:55:40,182 [INFO] |     ---------------------------
2025-04-16 00:55:40,182 [INFO] 
2025-04-16 00:55:40,201 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,202 [INFO] --> states/utils.rs:1522:25
2025-04-16 00:55:40,202 [INFO] |
2025-04-16 00:55:40,202 [INFO] 1519 |                     n2 = calculate_binary(
2025-04-16 00:55:40,202 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-16 00:55:40,202 [INFO] ...
2025-04-16 00:55:40,202 [INFO] 1522 |                         ExprType::eMINUS as libc::c_int as libc::c_uint,
2025-04-16 00:55:40,203 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-16 00:55:40,203 [INFO] |
2025-04-16 00:55:40,203 [INFO] note: function defined here
2025-04-16 00:55:40,203 [INFO] --> states/utils.rs:1190:22
2025-04-16 00:55:40,203 [INFO] |
2025-04-16 00:55:40,204 [INFO] 1190 | unsafe extern "C" fn calculate_binary(
2025-04-16 00:55:40,204 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-16 00:55:40,204 [INFO] 1191 |     mut l: *mut Node,
2025-04-16 00:55:40,204 [INFO] |     ----------------
2025-04-16 00:55:40,205 [INFO] 1192 |     mut r: *mut Node,
2025-04-16 00:55:40,205 [INFO] |     ----------------
2025-04-16 00:55:40,205 [INFO] 1193 |     mut type_0: ExprType,
2025-04-16 00:55:40,205 [INFO] |     --------------------
2025-04-16 00:55:40,206 [INFO] 1194 |     mut linenum_0: libc::c_uint,
2025-04-16 00:55:40,206 [INFO] |     ---------------------------
2025-04-16 00:55:40,206 [INFO] 
2025-04-16 00:55:40,216 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,216 [INFO] --> states/utils.rs:1530:25
2025-04-16 00:55:40,216 [INFO] |
2025-04-16 00:55:40,217 [INFO] 1527 |                     n2 = calculate_binary(
2025-04-16 00:55:40,217 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-16 00:55:40,217 [INFO] ...
2025-04-16 00:55:40,217 [INFO] 1530 |                         ExprType::eMULT as libc::c_int as libc::c_uint,
2025-04-16 00:55:40,217 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-16 00:55:40,217 [INFO] |
2025-04-16 00:55:40,218 [INFO] note: function defined here
2025-04-16 00:55:40,218 [INFO] --> states/utils.rs:1190:22
2025-04-16 00:55:40,218 [INFO] |
2025-04-16 00:55:40,218 [INFO] 1190 | unsafe extern "C" fn calculate_binary(
2025-04-16 00:55:40,218 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-16 00:55:40,219 [INFO] 1191 |     mut l: *mut Node,
2025-04-16 00:55:40,219 [INFO] |     ----------------
2025-04-16 00:55:40,219 [INFO] 1192 |     mut r: *mut Node,
2025-04-16 00:55:40,220 [INFO] |     ----------------
2025-04-16 00:55:40,220 [INFO] 1193 |     mut type_0: ExprType,
2025-04-16 00:55:40,220 [INFO] |     --------------------
2025-04-16 00:55:40,220 [INFO] 1194 |     mut linenum_0: libc::c_uint,
2025-04-16 00:55:40,221 [INFO] |     ---------------------------
2025-04-16 00:55:40,221 [INFO] 
2025-04-16 00:55:40,231 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,231 [INFO] --> states/utils.rs:1538:25
2025-04-16 00:55:40,231 [INFO] |
2025-04-16 00:55:40,231 [INFO] 1535 |                     n2 = calculate_binary(
2025-04-16 00:55:40,232 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-16 00:55:40,232 [INFO] ...
2025-04-16 00:55:40,232 [INFO] 1538 |                         ExprType::eDIV as libc::c_int as libc::c_uint,
2025-04-16 00:55:40,232 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-16 00:55:40,232 [INFO] |
2025-04-16 00:55:40,232 [INFO] note: function defined here
2025-04-16 00:55:40,233 [INFO] --> states/utils.rs:1190:22
2025-04-16 00:55:40,233 [INFO] |
2025-04-16 00:55:40,233 [INFO] 1190 | unsafe extern "C" fn calculate_binary(
2025-04-16 00:55:40,233 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-16 00:55:40,233 [INFO] 1191 |     mut l: *mut Node,
2025-04-16 00:55:40,234 [INFO] |     ----------------
2025-04-16 00:55:40,234 [INFO] 1192 |     mut r: *mut Node,
2025-04-16 00:55:40,234 [INFO] |     ----------------
2025-04-16 00:55:40,234 [INFO] 1193 |     mut type_0: ExprType,
2025-04-16 00:55:40,234 [INFO] |     --------------------
2025-04-16 00:55:40,234 [INFO] 1194 |     mut linenum_0: libc::c_uint,
2025-04-16 00:55:40,235 [INFO] |     ---------------------------
2025-04-16 00:55:40,235 [INFO] 
2025-04-16 00:55:40,245 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,245 [INFO] --> states/utils.rs:1559:17
2025-04-16 00:55:40,245 [INFO] |
2025-04-16 00:55:40,245 [INFO] 1556 |               n = calculate_binary(
2025-04-16 00:55:40,245 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-16 00:55:40,245 [INFO] ...
2025-04-16 00:55:40,246 [INFO] 1559 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-16 00:55:40,246 [INFO] 1560 | |                     == ExprType::ePOSTFIXADD as libc::c_int as libc::c_uint
2025-04-16 00:55:40,246 [INFO] 1561 | |                 {
2025-04-16 00:55:40,246 [INFO] 1562 | |                     ExprType::ePLUS as libc::c_int
2025-04-16 00:55:40,247 [INFO] 1563 | |                 } else {
2025-04-16 00:55:40,247 [INFO] 1564 | |                     ExprType::eMINUS as libc::c_int
2025-04-16 00:55:40,247 [INFO] 1565 | |                 }) as libc::c_uint,
2025-04-16 00:55:40,248 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-16 00:55:40,248 [INFO] |
2025-04-16 00:55:40,248 [INFO] note: function defined here
2025-04-16 00:55:40,248 [INFO] --> states/utils.rs:1190:22
2025-04-16 00:55:40,248 [INFO] |
2025-04-16 00:55:40,249 [INFO] 1190 | unsafe extern "C" fn calculate_binary(
2025-04-16 00:55:40,249 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-16 00:55:40,249 [INFO] 1191 |     mut l: *mut Node,
2025-04-16 00:55:40,249 [INFO] |     ----------------
2025-04-16 00:55:40,250 [INFO] 1192 |     mut r: *mut Node,
2025-04-16 00:55:40,250 [INFO] |     ----------------
2025-04-16 00:55:40,250 [INFO] 1193 |     mut type_0: ExprType,
2025-04-16 00:55:40,250 [INFO] |     --------------------
2025-04-16 00:55:40,251 [INFO] 1194 |     mut linenum_0: libc::c_uint,
2025-04-16 00:55:40,251 [INFO] |     ---------------------------
2025-04-16 00:55:40,251 [INFO] 
2025-04-16 00:55:40,260 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,260 [INFO] --> states/utils.rs:1578:17
2025-04-16 00:55:40,260 [INFO] |
2025-04-16 00:55:40,260 [INFO] 1575 |               n = calculate_binary(
2025-04-16 00:55:40,260 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-16 00:55:40,261 [INFO] ...
2025-04-16 00:55:40,261 [INFO] 1578 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-16 00:55:40,261 [INFO] 1579 | |                     == ExprType::ePREFIXADD as libc::c_int as libc::c_uint
2025-04-16 00:55:40,261 [INFO] 1580 | |                 {
2025-04-16 00:55:40,261 [INFO] 1581 | |                     ExprType::ePLUS as libc::c_int
2025-04-16 00:55:40,262 [INFO] 1582 | |                 } else {
2025-04-16 00:55:40,262 [INFO] 1583 | |                     ExprType::eMINUS as libc::c_int
2025-04-16 00:55:40,262 [INFO] 1584 | |                 }) as libc::c_uint,
2025-04-16 00:55:40,262 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-16 00:55:40,262 [INFO] |
2025-04-16 00:55:40,262 [INFO] note: function defined here
2025-04-16 00:55:40,263 [INFO] --> states/utils.rs:1190:22
2025-04-16 00:55:40,263 [INFO] |
2025-04-16 00:55:40,263 [INFO] 1190 | unsafe extern "C" fn calculate_binary(
2025-04-16 00:55:40,264 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-16 00:55:40,264 [INFO] 1191 |     mut l: *mut Node,
2025-04-16 00:55:40,264 [INFO] |     ----------------
2025-04-16 00:55:40,265 [INFO] 1192 |     mut r: *mut Node,
2025-04-16 00:55:40,266 [INFO] |     ----------------
2025-04-16 00:55:40,266 [INFO] 1193 |     mut type_0: ExprType,
2025-04-16 00:55:40,266 [INFO] |     --------------------
2025-04-16 00:55:40,266 [INFO] 1194 |     mut linenum_0: libc::c_uint,
2025-04-16 00:55:40,267 [INFO] |     ---------------------------
2025-04-16 00:55:40,267 [INFO] 
2025-04-16 00:55:40,276 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,276 [INFO] --> states/utils.rs:1775:32
2025-04-16 00:55:40,276 [INFO] |
2025-04-16 00:55:40,276 [INFO] 1775 |                 l = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-16 00:55:40,277 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-16 00:55:40,277 [INFO] |                     |
2025-04-16 00:55:40,277 [INFO] |                     arguments to this function are incorrect
2025-04-16 00:55:40,277 [INFO] |
2025-04-16 00:55:40,277 [INFO] note: function defined here
2025-04-16 00:55:40,278 [INFO] --> states/utils.rs:620:26
2025-04-16 00:55:40,278 [INFO] |
2025-04-16 00:55:40,278 [INFO] 620  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-16 00:55:40,278 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-16 00:55:40,278 [INFO] 
2025-04-16 00:55:40,288 [INFO] error[E0308]: mismatched types
2025-04-16 00:55:40,288 [INFO] --> states/utils.rs:1820:40
2025-04-16 00:55:40,288 [INFO] |
2025-04-16 00:55:40,289 [INFO] 1820 |             n = calculate_binary(l, r, (*expr).type_0 as libc::c_uint, (*expr).linenum);
2025-04-16 00:55:40,289 [INFO] |                 ----------------       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-16 00:55:40,289 [INFO] |                 |
2025-04-16 00:55:40,289 [INFO] |                 arguments to this function are incorrect
2025-04-16 00:55:40,289 [INFO] |
2025-04-16 00:55:40,289 [INFO] note: function defined here
2025-04-16 00:55:40,289 [INFO] --> states/utils.rs:1190:22
2025-04-16 00:55:40,289 [INFO] |
2025-04-16 00:55:40,290 [INFO] 1190 | unsafe extern "C" fn calculate_binary(
2025-04-16 00:55:40,290 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-16 00:55:40,290 [INFO] 1191 |     mut l: *mut Node,
2025-04-16 00:55:40,291 [INFO] |     ----------------
2025-04-16 00:55:40,291 [INFO] 1192 |     mut r: *mut Node,
2025-04-16 00:55:40,291 [INFO] |     ----------------
2025-04-16 00:55:40,291 [INFO] 1193 |     mut type_0: ExprType,
2025-04-16 00:55:40,291 [INFO] |     --------------------
2025-04-16 00:55:40,292 [INFO] 1194 |     mut linenum_0: libc::c_uint,
2025-04-16 00:55:40,292 [INFO] |     ---------------------------
2025-04-16 00:55:40,292 [INFO] 
2025-04-16 00:55:40,298 [INFO] Some errors have detailed explanations: E0308, E0412, E0433, E0605, E0614.
2025-04-16 00:55:40,298 [INFO] For more information about an error, try `rustc --explain E0308`.
2025-04-16 00:55:40,305 [INFO] warning: `c2rust_out` (lib) generated 35 warnings
2025-04-16 00:55:40,306 [INFO] error: could not compile `c2rust_out` due to 198 previous errors; 35 warnings emitted
2025-04-16 00:55:40,306 [ERROR] cargo build failed with code 101
2025-04-18 01:22:07,223 [INFO] Running: c2rust transpile -e compile_commands.json
2025-04-18 01:22:12,904 [INFO] c2rust transpile succeeded
2025-04-18 01:22:12,905 [INFO] Running: cargo build
2025-04-18 01:22:13,723 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-18 01:22:15,703 [INFO] warning: unused label
2025-04-18 01:22:15,703 [INFO] --> afmlib/afmparse.rs:1309:9
2025-04-18 01:22:15,703 [INFO] |
2025-04-18 01:22:15,703 [INFO] 1309 |         'c_3699: {
2025-04-18 01:22:15,703 [INFO] |         ^^^^^^^
2025-04-18 01:22:15,703 [INFO] |
2025-04-18 01:22:15,704 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-18 01:22:15,704 [INFO] 
2025-04-18 01:22:15,707 [INFO] warning: unused import: `::libc`
2025-04-18 01:22:15,707 [INFO] --> compat/getopt.rs:1:5
2025-04-18 01:22:15,707 [INFO] |
2025-04-18 01:22:15,707 [INFO] 1 | use ::libc;
2025-04-18 01:22:15,707 [INFO] |     ^^^^^^
2025-04-18 01:22:15,707 [INFO] |
2025-04-18 01:22:15,708 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-18 01:22:15,708 [INFO] 
2025-04-18 01:22:15,708 [INFO] warning: unused import: `::libc`
2025-04-18 01:22:15,708 [INFO] --> compat/getopt1.rs:1:5
2025-04-18 01:22:15,708 [INFO] |
2025-04-18 01:22:15,708 [INFO] 1 | use ::libc;
2025-04-18 01:22:15,708 [INFO] |     ^^^^^^
2025-04-18 01:22:15,709 [INFO] 
2025-04-18 01:22:15,715 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,715 [INFO] --> compat/regex.rs:15502:33
2025-04-18 01:22:15,715 [INFO] |
2025-04-18 01:22:15,715 [INFO] 15502 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,715 [INFO] |                       ^
2025-04-18 01:22:15,716 [INFO] ...
2025-04-18 01:22:15,716 [INFO] 15507 | ...                   })
2025-04-18 01:22:15,716 [INFO] |                        ^
2025-04-18 01:22:15,716 [INFO] |
2025-04-18 01:22:15,716 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-18 01:22:15,716 [INFO] help: remove these parentheses
2025-04-18 01:22:15,716 [INFO] |
2025-04-18 01:22:15,716 [INFO] 15502 ~                                 if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,717 [INFO] 15503 |                                     0 as libc::c_int
2025-04-18 01:22:15,717 [INFO] ...
2025-04-18 01:22:15,717 [INFO] 15506 |                                     1 as libc::c_int
2025-04-18 01:22:15,717 [INFO] 15507 ~                                 }
2025-04-18 01:22:15,717 [INFO] |
2025-04-18 01:22:15,717 [INFO] 
2025-04-18 01:22:15,718 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,718 [INFO] --> compat/regex.rs:16491:37
2025-04-18 01:22:15,718 [INFO] |
2025-04-18 01:22:15,718 [INFO] 16491 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,719 [INFO] |                       ^
2025-04-18 01:22:15,719 [INFO] ...
2025-04-18 01:22:15,719 [INFO] 16496 | ...                   })
2025-04-18 01:22:15,719 [INFO] |                        ^
2025-04-18 01:22:15,719 [INFO] |
2025-04-18 01:22:15,719 [INFO] help: remove these parentheses
2025-04-18 01:22:15,719 [INFO] |
2025-04-18 01:22:15,719 [INFO] 16491 ~                                     if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,720 [INFO] 16492 |                                         0 as libc::c_int
2025-04-18 01:22:15,720 [INFO] ...
2025-04-18 01:22:15,720 [INFO] 16495 |                                         1 as libc::c_int
2025-04-18 01:22:15,720 [INFO] 16496 ~                                     }
2025-04-18 01:22:15,720 [INFO] |
2025-04-18 01:22:15,720 [INFO] 
2025-04-18 01:22:15,721 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,721 [INFO] --> compat/regex.rs:16753:29
2025-04-18 01:22:15,722 [INFO] |
2025-04-18 01:22:15,722 [INFO] 16753 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,722 [INFO] |                       ^
2025-04-18 01:22:15,722 [INFO] ...
2025-04-18 01:22:15,723 [INFO] 16758 | ...                   })
2025-04-18 01:22:15,723 [INFO] |                        ^
2025-04-18 01:22:15,724 [INFO] |
2025-04-18 01:22:15,724 [INFO] help: remove these parentheses
2025-04-18 01:22:15,724 [INFO] |
2025-04-18 01:22:15,725 [INFO] 16753 ~                             if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,725 [INFO] 16754 |                                 0 as libc::c_int
2025-04-18 01:22:15,725 [INFO] ...
2025-04-18 01:22:15,725 [INFO] 16757 |                                 1 as libc::c_int
2025-04-18 01:22:15,725 [INFO] 16758 ~                             }
2025-04-18 01:22:15,726 [INFO] |
2025-04-18 01:22:15,726 [INFO] 
2025-04-18 01:22:15,727 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,727 [INFO] --> compat/regex.rs:17041:29
2025-04-18 01:22:15,727 [INFO] |
2025-04-18 01:22:15,727 [INFO] 17041 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,727 [INFO] |                       ^
2025-04-18 01:22:15,728 [INFO] ...
2025-04-18 01:22:15,728 [INFO] 17046 | ...                   })
2025-04-18 01:22:15,729 [INFO] |                        ^
2025-04-18 01:22:15,729 [INFO] |
2025-04-18 01:22:15,729 [INFO] help: remove these parentheses
2025-04-18 01:22:15,729 [INFO] |
2025-04-18 01:22:15,729 [INFO] 17041 ~                             if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,729 [INFO] 17042 |                                 0 as libc::c_int
2025-04-18 01:22:15,730 [INFO] ...
2025-04-18 01:22:15,730 [INFO] 17045 |                                 1 as libc::c_int
2025-04-18 01:22:15,730 [INFO] 17046 ~                             }
2025-04-18 01:22:15,730 [INFO] |
2025-04-18 01:22:15,730 [INFO] 
2025-04-18 01:22:15,730 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,730 [INFO] --> compat/regex.rs:17138:29
2025-04-18 01:22:15,731 [INFO] |
2025-04-18 01:22:15,731 [INFO] 17138 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,731 [INFO] |                       ^
2025-04-18 01:22:15,731 [INFO] ...
2025-04-18 01:22:15,731 [INFO] 17143 | ...                   })
2025-04-18 01:22:15,731 [INFO] |                        ^
2025-04-18 01:22:15,732 [INFO] |
2025-04-18 01:22:15,732 [INFO] help: remove these parentheses
2025-04-18 01:22:15,732 [INFO] |
2025-04-18 01:22:15,732 [INFO] 17138 ~                             if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,732 [INFO] 17139 |                                 0 as libc::c_int
2025-04-18 01:22:15,732 [INFO] ...
2025-04-18 01:22:15,732 [INFO] 17142 |                                 1 as libc::c_int
2025-04-18 01:22:15,732 [INFO] 17143 ~                             }
2025-04-18 01:22:15,733 [INFO] |
2025-04-18 01:22:15,733 [INFO] 
2025-04-18 01:22:15,733 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,733 [INFO] --> compat/regex.rs:17294:29
2025-04-18 01:22:15,733 [INFO] |
2025-04-18 01:22:15,734 [INFO] 17294 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,734 [INFO] |                       ^
2025-04-18 01:22:15,734 [INFO] ...
2025-04-18 01:22:15,734 [INFO] 17300 | ...                   })
2025-04-18 01:22:15,734 [INFO] |                        ^
2025-04-18 01:22:15,734 [INFO] |
2025-04-18 01:22:15,734 [INFO] help: remove these parentheses
2025-04-18 01:22:15,735 [INFO] |
2025-04-18 01:22:15,735 [INFO] 17294 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,735 [INFO] 17295 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,735 [INFO] ...
2025-04-18 01:22:15,735 [INFO] 17299 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,735 [INFO] 17300 ~                             }
2025-04-18 01:22:15,736 [INFO] |
2025-04-18 01:22:15,736 [INFO] 
2025-04-18 01:22:15,736 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,736 [INFO] --> compat/regex.rs:17306:29
2025-04-18 01:22:15,736 [INFO] |
2025-04-18 01:22:15,737 [INFO] 17306 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,737 [INFO] |                       ^
2025-04-18 01:22:15,737 [INFO] ...
2025-04-18 01:22:15,737 [INFO] 17310 | ...                   })
2025-04-18 01:22:15,737 [INFO] |                        ^
2025-04-18 01:22:15,737 [INFO] |
2025-04-18 01:22:15,738 [INFO] help: remove these parentheses
2025-04-18 01:22:15,738 [INFO] |
2025-04-18 01:22:15,738 [INFO] 17306 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,738 [INFO] 17307 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,739 [INFO] 17308 |                             } else {
2025-04-18 01:22:15,739 [INFO] 17309 |                                 *d as libc::c_int
2025-04-18 01:22:15,739 [INFO] 17310 ~                             }
2025-04-18 01:22:15,739 [INFO] |
2025-04-18 01:22:15,739 [INFO] 
2025-04-18 01:22:15,740 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,740 [INFO] --> compat/regex.rs:17333:29
2025-04-18 01:22:15,740 [INFO] |
2025-04-18 01:22:15,740 [INFO] 17333 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,741 [INFO] |                       ^
2025-04-18 01:22:15,741 [INFO] ...
2025-04-18 01:22:15,742 [INFO] 17339 | ...                   })
2025-04-18 01:22:15,742 [INFO] |                        ^
2025-04-18 01:22:15,742 [INFO] |
2025-04-18 01:22:15,743 [INFO] help: remove these parentheses
2025-04-18 01:22:15,743 [INFO] |
2025-04-18 01:22:15,743 [INFO] 17333 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,744 [INFO] 17334 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,744 [INFO] ...
2025-04-18 01:22:15,744 [INFO] 17338 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,744 [INFO] 17339 ~                             }
2025-04-18 01:22:15,744 [INFO] |
2025-04-18 01:22:15,744 [INFO] 
2025-04-18 01:22:15,744 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,745 [INFO] --> compat/regex.rs:17345:29
2025-04-18 01:22:15,745 [INFO] |
2025-04-18 01:22:15,745 [INFO] 17345 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,745 [INFO] |                       ^
2025-04-18 01:22:15,745 [INFO] ...
2025-04-18 01:22:15,745 [INFO] 17349 | ...                   })
2025-04-18 01:22:15,745 [INFO] |                        ^
2025-04-18 01:22:15,745 [INFO] |
2025-04-18 01:22:15,746 [INFO] help: remove these parentheses
2025-04-18 01:22:15,746 [INFO] |
2025-04-18 01:22:15,746 [INFO] 17345 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,746 [INFO] 17346 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,746 [INFO] 17347 |                             } else {
2025-04-18 01:22:15,746 [INFO] 17348 |                                 *d as libc::c_int
2025-04-18 01:22:15,747 [INFO] 17349 ~                             }
2025-04-18 01:22:15,747 [INFO] |
2025-04-18 01:22:15,747 [INFO] 
2025-04-18 01:22:15,747 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,747 [INFO] --> compat/regex.rs:17363:25
2025-04-18 01:22:15,747 [INFO] |
2025-04-18 01:22:15,747 [INFO] 17363 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,748 [INFO] |                         ^
2025-04-18 01:22:15,748 [INFO] ...
2025-04-18 01:22:15,748 [INFO] 17367 |                         })
2025-04-18 01:22:15,748 [INFO] |                          ^
2025-04-18 01:22:15,748 [INFO] |
2025-04-18 01:22:15,748 [INFO] help: remove these parentheses
2025-04-18 01:22:15,748 [INFO] |
2025-04-18 01:22:15,748 [INFO] 17363 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,749 [INFO] 17364 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,749 [INFO] 17365 |                         } else {
2025-04-18 01:22:15,749 [INFO] 17366 |                             *d as libc::c_int
2025-04-18 01:22:15,749 [INFO] 17367 ~                         }
2025-04-18 01:22:15,749 [INFO] |
2025-04-18 01:22:15,750 [INFO] 
2025-04-18 01:22:15,750 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,750 [INFO] --> compat/regex.rs:17376:33
2025-04-18 01:22:15,750 [INFO] |
2025-04-18 01:22:15,750 [INFO] 17376 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,750 [INFO] |                       ^
2025-04-18 01:22:15,751 [INFO] ...
2025-04-18 01:22:15,751 [INFO] 17382 | ...                   })
2025-04-18 01:22:15,751 [INFO] |                        ^
2025-04-18 01:22:15,751 [INFO] |
2025-04-18 01:22:15,751 [INFO] help: remove these parentheses
2025-04-18 01:22:15,751 [INFO] |
2025-04-18 01:22:15,751 [INFO] 17376 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,751 [INFO] 17377 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,753 [INFO] ...
2025-04-18 01:22:15,753 [INFO] 17381 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,753 [INFO] 17382 ~                                 }
2025-04-18 01:22:15,753 [INFO] |
2025-04-18 01:22:15,753 [INFO] 
2025-04-18 01:22:15,753 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,753 [INFO] --> compat/regex.rs:17397:29
2025-04-18 01:22:15,754 [INFO] |
2025-04-18 01:22:15,754 [INFO] 17397 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,755 [INFO] |                       ^
2025-04-18 01:22:15,755 [INFO] ...
2025-04-18 01:22:15,755 [INFO] 17403 | ...                   })
2025-04-18 01:22:15,755 [INFO] |                        ^
2025-04-18 01:22:15,755 [INFO] |
2025-04-18 01:22:15,755 [INFO] help: remove these parentheses
2025-04-18 01:22:15,755 [INFO] |
2025-04-18 01:22:15,756 [INFO] 17397 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,758 [INFO] 17398 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:15,758 [INFO] ...
2025-04-18 01:22:15,758 [INFO] 17402 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,758 [INFO] 17403 ~                             }
2025-04-18 01:22:15,759 [INFO] |
2025-04-18 01:22:15,759 [INFO] 
2025-04-18 01:22:15,759 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,759 [INFO] --> compat/regex.rs:17408:29
2025-04-18 01:22:15,760 [INFO] |
2025-04-18 01:22:15,760 [INFO] 17408 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,761 [INFO] |                       ^
2025-04-18 01:22:15,761 [INFO] ...
2025-04-18 01:22:15,762 [INFO] 17412 | ...                   })
2025-04-18 01:22:15,762 [INFO] |                        ^
2025-04-18 01:22:15,762 [INFO] |
2025-04-18 01:22:15,762 [INFO] help: remove these parentheses
2025-04-18 01:22:15,763 [INFO] |
2025-04-18 01:22:15,763 [INFO] 17408 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,763 [INFO] 17409 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,763 [INFO] 17410 |                             } else {
2025-04-18 01:22:15,763 [INFO] 17411 |                                 *d as libc::c_int
2025-04-18 01:22:15,763 [INFO] 17412 ~                             }
2025-04-18 01:22:15,763 [INFO] |
2025-04-18 01:22:15,764 [INFO] 
2025-04-18 01:22:15,764 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,764 [INFO] --> compat/regex.rs:17439:33
2025-04-18 01:22:15,764 [INFO] |
2025-04-18 01:22:15,764 [INFO] 17439 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,764 [INFO] |                       ^
2025-04-18 01:22:15,764 [INFO] ...
2025-04-18 01:22:15,764 [INFO] 17443 | ...                   })
2025-04-18 01:22:15,765 [INFO] |                        ^
2025-04-18 01:22:15,765 [INFO] |
2025-04-18 01:22:15,765 [INFO] help: remove these parentheses
2025-04-18 01:22:15,765 [INFO] |
2025-04-18 01:22:15,765 [INFO] 17439 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,765 [INFO] 17440 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,766 [INFO] 17441 |                                 } else {
2025-04-18 01:22:15,766 [INFO] 17442 |                                     *d as libc::c_int
2025-04-18 01:22:15,766 [INFO] 17443 ~                                 }
2025-04-18 01:22:15,766 [INFO] |
2025-04-18 01:22:15,766 [INFO] 
2025-04-18 01:22:15,766 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,767 [INFO] --> compat/regex.rs:17495:33
2025-04-18 01:22:15,767 [INFO] |
2025-04-18 01:22:15,767 [INFO] 17495 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,767 [INFO] |                       ^
2025-04-18 01:22:15,767 [INFO] ...
2025-04-18 01:22:15,767 [INFO] 17499 | ...                   })
2025-04-18 01:22:15,768 [INFO] |                        ^
2025-04-18 01:22:15,768 [INFO] |
2025-04-18 01:22:15,768 [INFO] help: remove these parentheses
2025-04-18 01:22:15,768 [INFO] |
2025-04-18 01:22:15,768 [INFO] 17495 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:15,768 [INFO] 17496 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:15,768 [INFO] 17497 |                                 } else {
2025-04-18 01:22:15,768 [INFO] 17498 |                                     *d as libc::c_int
2025-04-18 01:22:15,768 [INFO] 17499 ~                                 }
2025-04-18 01:22:15,769 [INFO] |
2025-04-18 01:22:15,769 [INFO] 
2025-04-18 01:22:15,769 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:15,769 [INFO] --> compat/regex.rs:17661:37
2025-04-18 01:22:15,769 [INFO] |
2025-04-18 01:22:15,769 [INFO] 17661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,770 [INFO] |                       ^
2025-04-18 01:22:15,770 [INFO] ...
2025-04-18 01:22:15,770 [INFO] 17666 | ...                   })
2025-04-18 01:22:15,770 [INFO] |                        ^
2025-04-18 01:22:15,770 [INFO] |
2025-04-18 01:22:15,770 [INFO] help: remove these parentheses
2025-04-18 01:22:15,770 [INFO] |
2025-04-18 01:22:15,770 [INFO] 17661 ~                                     if (fail_stack.stack).is_null() {
2025-04-18 01:22:15,770 [INFO] 17662 |                                         0 as libc::c_int
2025-04-18 01:22:15,771 [INFO] ...
2025-04-18 01:22:15,771 [INFO] 17665 |                                         1 as libc::c_int
2025-04-18 01:22:15,771 [INFO] 17666 ~                                     }
2025-04-18 01:22:15,771 [INFO] |
2025-04-18 01:22:15,771 [INFO] 
2025-04-18 01:22:15,771 [INFO] warning: unnecessary parentheses around method argument
2025-04-18 01:22:15,772 [INFO] --> compat/regex.rs:18011:13
2025-04-18 01:22:15,772 [INFO] |
2025-04-18 01:22:15,772 [INFO] 18011 |             (if dend == end_match_1 {
2025-04-18 01:22:15,772 [INFO] |             ^
2025-04-18 01:22:15,772 [INFO] ...
2025-04-18 01:22:15,772 [INFO] 18015 |             }),
2025-04-18 01:22:15,772 [INFO] |              ^
2025-04-18 01:22:15,773 [INFO] |
2025-04-18 01:22:15,773 [INFO] help: remove these parentheses
2025-04-18 01:22:15,773 [INFO] |
2025-04-18 01:22:15,773 [INFO] 18011 ~             if dend == end_match_1 {
2025-04-18 01:22:15,773 [INFO] 18012 |                 string1
2025-04-18 01:22:15,773 [INFO] 18013 |             } else {
2025-04-18 01:22:15,773 [INFO] 18014 |                 string2.offset(-(size1 as isize))
2025-04-18 01:22:15,773 [INFO] 18015 ~             },
2025-04-18 01:22:15,774 [INFO] |
2025-04-18 01:22:15,774 [INFO] 
2025-04-18 01:22:15,774 [INFO] warning: unused label
2025-04-18 01:22:15,774 [INFO] --> src/psgen.rs:4554:5
2025-04-18 01:22:15,774 [INFO] |
2025-04-18 01:22:15,774 [INFO] 4554 |     'c_18653: {
2025-04-18 01:22:15,775 [INFO] |     ^^^^^^^^
2025-04-18 01:22:15,775 [INFO] 
2025-04-18 01:22:15,775 [INFO] warning: unused label
2025-04-18 01:22:15,775 [INFO] --> src/psgen.rs:4629:5
2025-04-18 01:22:15,775 [INFO] |
2025-04-18 01:22:15,775 [INFO] 4629 |     'c_8716: {
2025-04-18 01:22:15,776 [INFO] |     ^^^^^^^
2025-04-18 01:22:15,776 [INFO] 
2025-04-18 01:22:15,776 [INFO] warning: unnecessary parentheses around function argument
2025-04-18 01:22:15,776 [INFO] --> states/prims.rs:467:17
2025-04-18 01:22:15,776 [INFO] |
2025-04-18 01:22:15,776 [INFO] 467 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-18 01:22:15,777 [INFO] |                 ^
2025-04-18 01:22:15,777 [INFO] ...
2025-04-18 01:22:15,777 [INFO] 472 |                 }),
2025-04-18 01:22:15,777 [INFO] |                  ^
2025-04-18 01:22:15,778 [INFO] |
2025-04-18 01:22:15,778 [INFO] help: remove these parentheses
2025-04-18 01:22:15,779 [INFO] |
2025-04-18 01:22:15,780 [INFO] 467 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-18 01:22:15,780 [INFO] 468 |                     &mut (*n).u.re.compiled
2025-04-18 01:22:15,780 [INFO] ...
2025-04-18 01:22:15,780 [INFO] 471 |                     &mut (*n).u.re.compiled
2025-04-18 01:22:15,780 [INFO] 472 ~                 },
2025-04-18 01:22:15,780 [INFO] |
2025-04-18 01:22:15,780 [INFO] 
2025-04-18 01:22:15,781 [INFO] warning: unnecessary parentheses around function argument
2025-04-18 01:22:15,781 [INFO] --> states/prims.rs:523:17
2025-04-18 01:22:15,781 [INFO] |
2025-04-18 01:22:15,781 [INFO] 523 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-18 01:22:15,781 [INFO] |                 ^
2025-04-18 01:22:15,781 [INFO] ...
2025-04-18 01:22:15,781 [INFO] 528 |                 }),
2025-04-18 01:22:15,781 [INFO] |                  ^
2025-04-18 01:22:15,782 [INFO] |
2025-04-18 01:22:15,782 [INFO] help: remove these parentheses
2025-04-18 01:22:15,782 [INFO] |
2025-04-18 01:22:15,782 [INFO] 523 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-18 01:22:15,782 [INFO] 524 |                     &mut (*n).u.re.compiled
2025-04-18 01:22:15,782 [INFO] ...
2025-04-18 01:22:15,783 [INFO] 527 |                     &mut (*n).u.re.compiled
2025-04-18 01:22:15,783 [INFO] 528 ~                 },
2025-04-18 01:22:15,783 [INFO] |
2025-04-18 01:22:15,783 [INFO] 
2025-04-18 01:22:17,143 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:17,143 [INFO] --> compat/regex.rs:15755:9
2025-04-18 01:22:17,143 [INFO] |
2025-04-18 01:22:17,143 [INFO] 15753 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-18 01:22:17,144 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-18 01:22:17,144 [INFO] 15754 |         bufp,
2025-04-18 01:22:17,144 [INFO] 15755 |         0 as *mut libc::c_void,
2025-04-18 01:22:17,144 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-18 01:22:17,144 [INFO] |
2025-04-18 01:22:17,144 [INFO] = note: expected raw pointer `*const i8`
2025-04-18 01:22:17,144 [INFO] found raw pointer `*mut c_void`
2025-04-18 01:22:17,145 [INFO] note: function defined here
2025-04-18 01:22:17,145 [INFO] --> compat/regex.rs:15788:22
2025-04-18 01:22:17,145 [INFO] |
2025-04-18 01:22:17,145 [INFO] 15788 | unsafe extern "C" fn re_match_2_internal(
2025-04-18 01:22:17,145 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:17,145 [INFO] 15789 |     mut bufp: *mut re_pattern_buffer,
2025-04-18 01:22:17,145 [INFO] |     --------------------------------
2025-04-18 01:22:17,145 [INFO] 15790 |     mut string1: *const libc::c_char,
2025-04-18 01:22:17,146 [INFO] |     --------------------------------
2025-04-18 01:22:17,146 [INFO] 15791 |     mut size1: libc::c_int,
2025-04-18 01:22:17,146 [INFO] |     ----------------------
2025-04-18 01:22:17,146 [INFO] 15792 |     mut string2: *const libc::c_char,
2025-04-18 01:22:17,146 [INFO] |     --------------------------------
2025-04-18 01:22:17,146 [INFO] 15793 |     mut size2: libc::c_int,
2025-04-18 01:22:17,147 [INFO] |     ----------------------
2025-04-18 01:22:17,147 [INFO] 15794 |     mut pos: libc::c_int,
2025-04-18 01:22:17,147 [INFO] |     --------------------
2025-04-18 01:22:17,147 [INFO] 15795 |     mut regs: *mut re_registers,
2025-04-18 01:22:17,147 [INFO] |     ---------------------------
2025-04-18 01:22:17,147 [INFO] 15796 |     mut stop: libc::c_int,
2025-04-18 01:22:17,147 [INFO] |     ---------------------
2025-04-18 01:22:17,147 [INFO] 
2025-04-18 01:22:17,344 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-18 01:22:17,349 [INFO] warning: `c2rust_out` (lib) generated 24 warnings
2025-04-18 01:22:17,350 [INFO] error: could not compile `c2rust_out` due to previous error; 24 warnings emitted
2025-04-18 01:22:17,351 [ERROR] cargo build failed with code 101
2025-04-18 01:22:17,364 [INFO] Running: cargo build
2025-04-18 01:22:17,599 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-18 01:22:18,072 [INFO] warning: unused label
2025-04-18 01:22:18,072 [INFO] --> afmlib/afmparse.rs:1504:9
2025-04-18 01:22:18,072 [INFO] |
2025-04-18 01:22:18,072 [INFO] 1504 |         'c_3699: {
2025-04-18 01:22:18,073 [INFO] |         ^^^^^^^
2025-04-18 01:22:18,073 [INFO] |
2025-04-18 01:22:18,073 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-18 01:22:18,073 [INFO] 
2025-04-18 01:22:18,075 [INFO] warning: unused import: `::libc`
2025-04-18 01:22:18,075 [INFO] --> compat/getopt.rs:1:5
2025-04-18 01:22:18,075 [INFO] |
2025-04-18 01:22:18,075 [INFO] 1 | use ::libc;
2025-04-18 01:22:18,075 [INFO] |     ^^^^^^
2025-04-18 01:22:18,075 [INFO] |
2025-04-18 01:22:18,075 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-18 01:22:18,075 [INFO] 
2025-04-18 01:22:18,076 [INFO] warning: unused import: `::libc`
2025-04-18 01:22:18,076 [INFO] --> compat/getopt1.rs:1:5
2025-04-18 01:22:18,076 [INFO] |
2025-04-18 01:22:18,076 [INFO] 1 | use ::libc;
2025-04-18 01:22:18,076 [INFO] |     ^^^^^^
2025-04-18 01:22:18,076 [INFO] 
2025-04-18 01:22:18,081 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,081 [INFO] --> compat/regex.rs:15661:33
2025-04-18 01:22:18,081 [INFO] |
2025-04-18 01:22:18,082 [INFO] 15661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,082 [INFO] |                       ^
2025-04-18 01:22:18,083 [INFO] ...
2025-04-18 01:22:18,083 [INFO] 15666 | ...                   })
2025-04-18 01:22:18,083 [INFO] |                        ^
2025-04-18 01:22:18,084 [INFO] |
2025-04-18 01:22:18,084 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-18 01:22:18,084 [INFO] help: remove these parentheses
2025-04-18 01:22:18,085 [INFO] |
2025-04-18 01:22:18,085 [INFO] 15661 ~                                 if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,085 [INFO] 15662 |                                     0 as libc::c_int
2025-04-18 01:22:18,086 [INFO] ...
2025-04-18 01:22:18,086 [INFO] 15665 |                                     1 as libc::c_int
2025-04-18 01:22:18,086 [INFO] 15666 ~                                 }
2025-04-18 01:22:18,087 [INFO] |
2025-04-18 01:22:18,088 [INFO] 
2025-04-18 01:22:18,088 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,090 [INFO] --> compat/regex.rs:16650:37
2025-04-18 01:22:18,090 [INFO] |
2025-04-18 01:22:18,091 [INFO] 16650 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,092 [INFO] |                       ^
2025-04-18 01:22:18,092 [INFO] ...
2025-04-18 01:22:18,093 [INFO] 16655 | ...                   })
2025-04-18 01:22:18,093 [INFO] |                        ^
2025-04-18 01:22:18,093 [INFO] |
2025-04-18 01:22:18,094 [INFO] help: remove these parentheses
2025-04-18 01:22:18,094 [INFO] |
2025-04-18 01:22:18,094 [INFO] 16650 ~                                     if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,096 [INFO] 16651 |                                         0 as libc::c_int
2025-04-18 01:22:18,096 [INFO] ...
2025-04-18 01:22:18,096 [INFO] 16654 |                                         1 as libc::c_int
2025-04-18 01:22:18,097 [INFO] 16655 ~                                     }
2025-04-18 01:22:18,098 [INFO] |
2025-04-18 01:22:18,098 [INFO] 
2025-04-18 01:22:18,099 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,099 [INFO] --> compat/regex.rs:16912:29
2025-04-18 01:22:18,099 [INFO] |
2025-04-18 01:22:18,099 [INFO] 16912 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,100 [INFO] |                       ^
2025-04-18 01:22:18,100 [INFO] ...
2025-04-18 01:22:18,100 [INFO] 16917 | ...                   })
2025-04-18 01:22:18,101 [INFO] |                        ^
2025-04-18 01:22:18,101 [INFO] |
2025-04-18 01:22:18,101 [INFO] help: remove these parentheses
2025-04-18 01:22:18,102 [INFO] |
2025-04-18 01:22:18,102 [INFO] 16912 ~                             if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,102 [INFO] 16913 |                                 0 as libc::c_int
2025-04-18 01:22:18,103 [INFO] ...
2025-04-18 01:22:18,103 [INFO] 16916 |                                 1 as libc::c_int
2025-04-18 01:22:18,104 [INFO] 16917 ~                             }
2025-04-18 01:22:18,104 [INFO] |
2025-04-18 01:22:18,104 [INFO] 
2025-04-18 01:22:18,105 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,105 [INFO] --> compat/regex.rs:17200:29
2025-04-18 01:22:18,105 [INFO] |
2025-04-18 01:22:18,106 [INFO] 17200 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,106 [INFO] |                       ^
2025-04-18 01:22:18,106 [INFO] ...
2025-04-18 01:22:18,107 [INFO] 17205 | ...                   })
2025-04-18 01:22:18,107 [INFO] |                        ^
2025-04-18 01:22:18,108 [INFO] |
2025-04-18 01:22:18,108 [INFO] help: remove these parentheses
2025-04-18 01:22:18,109 [INFO] |
2025-04-18 01:22:18,109 [INFO] 17200 ~                             if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,109 [INFO] 17201 |                                 0 as libc::c_int
2025-04-18 01:22:18,110 [INFO] ...
2025-04-18 01:22:18,110 [INFO] 17204 |                                 1 as libc::c_int
2025-04-18 01:22:18,110 [INFO] 17205 ~                             }
2025-04-18 01:22:18,111 [INFO] |
2025-04-18 01:22:18,111 [INFO] 
2025-04-18 01:22:18,112 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,112 [INFO] --> compat/regex.rs:17297:29
2025-04-18 01:22:18,113 [INFO] |
2025-04-18 01:22:18,113 [INFO] 17297 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,114 [INFO] |                       ^
2025-04-18 01:22:18,114 [INFO] ...
2025-04-18 01:22:18,114 [INFO] 17302 | ...                   })
2025-04-18 01:22:18,115 [INFO] |                        ^
2025-04-18 01:22:18,115 [INFO] |
2025-04-18 01:22:18,115 [INFO] help: remove these parentheses
2025-04-18 01:22:18,116 [INFO] |
2025-04-18 01:22:18,116 [INFO] 17297 ~                             if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,116 [INFO] 17298 |                                 0 as libc::c_int
2025-04-18 01:22:18,117 [INFO] ...
2025-04-18 01:22:18,117 [INFO] 17301 |                                 1 as libc::c_int
2025-04-18 01:22:18,117 [INFO] 17302 ~                             }
2025-04-18 01:22:18,118 [INFO] |
2025-04-18 01:22:18,118 [INFO] 
2025-04-18 01:22:18,119 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,119 [INFO] --> compat/regex.rs:17453:29
2025-04-18 01:22:18,119 [INFO] |
2025-04-18 01:22:18,119 [INFO] 17453 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,120 [INFO] |                       ^
2025-04-18 01:22:18,121 [INFO] ...
2025-04-18 01:22:18,121 [INFO] 17459 | ...                   })
2025-04-18 01:22:18,123 [INFO] |                        ^
2025-04-18 01:22:18,123 [INFO] |
2025-04-18 01:22:18,123 [INFO] help: remove these parentheses
2025-04-18 01:22:18,124 [INFO] |
2025-04-18 01:22:18,124 [INFO] 17453 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,124 [INFO] 17454 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,125 [INFO] ...
2025-04-18 01:22:18,125 [INFO] 17458 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,125 [INFO] 17459 ~                             }
2025-04-18 01:22:18,125 [INFO] |
2025-04-18 01:22:18,126 [INFO] 
2025-04-18 01:22:18,127 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,127 [INFO] --> compat/regex.rs:17465:29
2025-04-18 01:22:18,127 [INFO] |
2025-04-18 01:22:18,127 [INFO] 17465 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,128 [INFO] |                       ^
2025-04-18 01:22:18,129 [INFO] ...
2025-04-18 01:22:18,129 [INFO] 17469 | ...                   })
2025-04-18 01:22:18,130 [INFO] |                        ^
2025-04-18 01:22:18,130 [INFO] |
2025-04-18 01:22:18,130 [INFO] help: remove these parentheses
2025-04-18 01:22:18,131 [INFO] |
2025-04-18 01:22:18,131 [INFO] 17465 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,131 [INFO] 17466 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,132 [INFO] 17467 |                             } else {
2025-04-18 01:22:18,132 [INFO] 17468 |                                 *d as libc::c_int
2025-04-18 01:22:18,132 [INFO] 17469 ~                             }
2025-04-18 01:22:18,133 [INFO] |
2025-04-18 01:22:18,133 [INFO] 
2025-04-18 01:22:18,133 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,133 [INFO] --> compat/regex.rs:17492:29
2025-04-18 01:22:18,134 [INFO] |
2025-04-18 01:22:18,135 [INFO] 17492 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,135 [INFO] |                       ^
2025-04-18 01:22:18,135 [INFO] ...
2025-04-18 01:22:18,135 [INFO] 17498 | ...                   })
2025-04-18 01:22:18,136 [INFO] |                        ^
2025-04-18 01:22:18,136 [INFO] |
2025-04-18 01:22:18,136 [INFO] help: remove these parentheses
2025-04-18 01:22:18,137 [INFO] |
2025-04-18 01:22:18,137 [INFO] 17492 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,138 [INFO] 17493 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,138 [INFO] ...
2025-04-18 01:22:18,138 [INFO] 17497 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,139 [INFO] 17498 ~                             }
2025-04-18 01:22:18,140 [INFO] |
2025-04-18 01:22:18,140 [INFO] 
2025-04-18 01:22:18,140 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,141 [INFO] --> compat/regex.rs:17504:29
2025-04-18 01:22:18,141 [INFO] |
2025-04-18 01:22:18,141 [INFO] 17504 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,142 [INFO] |                       ^
2025-04-18 01:22:18,142 [INFO] ...
2025-04-18 01:22:18,143 [INFO] 17508 | ...                   })
2025-04-18 01:22:18,143 [INFO] |                        ^
2025-04-18 01:22:18,144 [INFO] |
2025-04-18 01:22:18,144 [INFO] help: remove these parentheses
2025-04-18 01:22:18,145 [INFO] |
2025-04-18 01:22:18,145 [INFO] 17504 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,146 [INFO] 17505 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,146 [INFO] 17506 |                             } else {
2025-04-18 01:22:18,146 [INFO] 17507 |                                 *d as libc::c_int
2025-04-18 01:22:18,147 [INFO] 17508 ~                             }
2025-04-18 01:22:18,147 [INFO] |
2025-04-18 01:22:18,147 [INFO] 
2025-04-18 01:22:18,148 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,148 [INFO] --> compat/regex.rs:17522:25
2025-04-18 01:22:18,148 [INFO] |
2025-04-18 01:22:18,148 [INFO] 17522 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,149 [INFO] |                         ^
2025-04-18 01:22:18,149 [INFO] ...
2025-04-18 01:22:18,149 [INFO] 17526 |                         })
2025-04-18 01:22:18,149 [INFO] |                          ^
2025-04-18 01:22:18,150 [INFO] |
2025-04-18 01:22:18,150 [INFO] help: remove these parentheses
2025-04-18 01:22:18,150 [INFO] |
2025-04-18 01:22:18,150 [INFO] 17522 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,152 [INFO] 17523 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,152 [INFO] 17524 |                         } else {
2025-04-18 01:22:18,153 [INFO] 17525 |                             *d as libc::c_int
2025-04-18 01:22:18,153 [INFO] 17526 ~                         }
2025-04-18 01:22:18,153 [INFO] |
2025-04-18 01:22:18,154 [INFO] 
2025-04-18 01:22:18,154 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,154 [INFO] --> compat/regex.rs:17535:33
2025-04-18 01:22:18,154 [INFO] |
2025-04-18 01:22:18,155 [INFO] 17535 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,155 [INFO] |                       ^
2025-04-18 01:22:18,156 [INFO] ...
2025-04-18 01:22:18,156 [INFO] 17541 | ...                   })
2025-04-18 01:22:18,156 [INFO] |                        ^
2025-04-18 01:22:18,157 [INFO] |
2025-04-18 01:22:18,157 [INFO] help: remove these parentheses
2025-04-18 01:22:18,157 [INFO] |
2025-04-18 01:22:18,157 [INFO] 17535 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,157 [INFO] 17536 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,158 [INFO] ...
2025-04-18 01:22:18,158 [INFO] 17540 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,159 [INFO] 17541 ~                                 }
2025-04-18 01:22:18,159 [INFO] |
2025-04-18 01:22:18,159 [INFO] 
2025-04-18 01:22:18,160 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,160 [INFO] --> compat/regex.rs:17556:29
2025-04-18 01:22:18,160 [INFO] |
2025-04-18 01:22:18,161 [INFO] 17556 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,161 [INFO] |                       ^
2025-04-18 01:22:18,161 [INFO] ...
2025-04-18 01:22:18,161 [INFO] 17562 | ...                   })
2025-04-18 01:22:18,161 [INFO] |                        ^
2025-04-18 01:22:18,161 [INFO] |
2025-04-18 01:22:18,162 [INFO] help: remove these parentheses
2025-04-18 01:22:18,162 [INFO] |
2025-04-18 01:22:18,163 [INFO] 17556 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,163 [INFO] 17557 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,163 [INFO] ...
2025-04-18 01:22:18,163 [INFO] 17561 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,165 [INFO] 17562 ~                             }
2025-04-18 01:22:18,165 [INFO] |
2025-04-18 01:22:18,165 [INFO] 
2025-04-18 01:22:18,166 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,166 [INFO] --> compat/regex.rs:17567:29
2025-04-18 01:22:18,166 [INFO] |
2025-04-18 01:22:18,167 [INFO] 17567 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,167 [INFO] |                       ^
2025-04-18 01:22:18,167 [INFO] ...
2025-04-18 01:22:18,168 [INFO] 17571 | ...                   })
2025-04-18 01:22:18,168 [INFO] |                        ^
2025-04-18 01:22:18,168 [INFO] |
2025-04-18 01:22:18,169 [INFO] help: remove these parentheses
2025-04-18 01:22:18,169 [INFO] |
2025-04-18 01:22:18,169 [INFO] 17567 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,169 [INFO] 17568 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,169 [INFO] 17569 |                             } else {
2025-04-18 01:22:18,170 [INFO] 17570 |                                 *d as libc::c_int
2025-04-18 01:22:18,170 [INFO] 17571 ~                             }
2025-04-18 01:22:18,171 [INFO] |
2025-04-18 01:22:18,171 [INFO] 
2025-04-18 01:22:18,171 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,172 [INFO] --> compat/regex.rs:17598:33
2025-04-18 01:22:18,172 [INFO] |
2025-04-18 01:22:18,173 [INFO] 17598 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,173 [INFO] |                       ^
2025-04-18 01:22:18,173 [INFO] ...
2025-04-18 01:22:18,173 [INFO] 17602 | ...                   })
2025-04-18 01:22:18,174 [INFO] |                        ^
2025-04-18 01:22:18,174 [INFO] |
2025-04-18 01:22:18,175 [INFO] help: remove these parentheses
2025-04-18 01:22:18,175 [INFO] |
2025-04-18 01:22:18,175 [INFO] 17598 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,175 [INFO] 17599 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,175 [INFO] 17600 |                                 } else {
2025-04-18 01:22:18,176 [INFO] 17601 |                                     *d as libc::c_int
2025-04-18 01:22:18,177 [INFO] 17602 ~                                 }
2025-04-18 01:22:18,177 [INFO] |
2025-04-18 01:22:18,177 [INFO] 
2025-04-18 01:22:18,177 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,177 [INFO] --> compat/regex.rs:17654:33
2025-04-18 01:22:18,178 [INFO] |
2025-04-18 01:22:18,179 [INFO] 17654 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,179 [INFO] |                       ^
2025-04-18 01:22:18,179 [INFO] ...
2025-04-18 01:22:18,180 [INFO] 17658 | ...                   })
2025-04-18 01:22:18,180 [INFO] |                        ^
2025-04-18 01:22:18,180 [INFO] |
2025-04-18 01:22:18,180 [INFO] help: remove these parentheses
2025-04-18 01:22:18,181 [INFO] |
2025-04-18 01:22:18,181 [INFO] 17654 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-18 01:22:18,181 [INFO] 17655 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-18 01:22:18,181 [INFO] 17656 |                                 } else {
2025-04-18 01:22:18,181 [INFO] 17657 |                                     *d as libc::c_int
2025-04-18 01:22:18,182 [INFO] 17658 ~                                 }
2025-04-18 01:22:18,182 [INFO] |
2025-04-18 01:22:18,183 [INFO] 
2025-04-18 01:22:18,184 [INFO] warning: unnecessary parentheses around block return value
2025-04-18 01:22:18,184 [INFO] --> compat/regex.rs:17820:37
2025-04-18 01:22:18,184 [INFO] |
2025-04-18 01:22:18,184 [INFO] 17820 | ...                   (if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,186 [INFO] |                       ^
2025-04-18 01:22:18,186 [INFO] ...
2025-04-18 01:22:18,186 [INFO] 17825 | ...                   })
2025-04-18 01:22:18,187 [INFO] |                        ^
2025-04-18 01:22:18,187 [INFO] |
2025-04-18 01:22:18,188 [INFO] help: remove these parentheses
2025-04-18 01:22:18,188 [INFO] |
2025-04-18 01:22:18,188 [INFO] 17820 ~                                     if (fail_stack.stack).is_null() {
2025-04-18 01:22:18,188 [INFO] 17821 |                                         0 as libc::c_int
2025-04-18 01:22:18,189 [INFO] ...
2025-04-18 01:22:18,189 [INFO] 17824 |                                         1 as libc::c_int
2025-04-18 01:22:18,190 [INFO] 17825 ~                                     }
2025-04-18 01:22:18,190 [INFO] |
2025-04-18 01:22:18,191 [INFO] 
2025-04-18 01:22:18,191 [INFO] warning: unnecessary parentheses around method argument
2025-04-18 01:22:18,191 [INFO] --> compat/regex.rs:18170:13
2025-04-18 01:22:18,191 [INFO] |
2025-04-18 01:22:18,192 [INFO] 18170 |             (if dend == end_match_1 {
2025-04-18 01:22:18,192 [INFO] |             ^
2025-04-18 01:22:18,192 [INFO] ...
2025-04-18 01:22:18,193 [INFO] 18174 |             }),
2025-04-18 01:22:18,193 [INFO] |              ^
2025-04-18 01:22:18,193 [INFO] |
2025-04-18 01:22:18,193 [INFO] help: remove these parentheses
2025-04-18 01:22:18,194 [INFO] |
2025-04-18 01:22:18,194 [INFO] 18170 ~             if dend == end_match_1 {
2025-04-18 01:22:18,195 [INFO] 18171 |                 string1
2025-04-18 01:22:18,195 [INFO] 18172 |             } else {
2025-04-18 01:22:18,195 [INFO] 18173 |                 string2.offset(-(size1 as isize))
2025-04-18 01:22:18,195 [INFO] 18174 ~             },
2025-04-18 01:22:18,197 [INFO] |
2025-04-18 01:22:18,197 [INFO] 
2025-04-18 01:22:18,197 [INFO] warning: unused label
2025-04-18 01:22:18,197 [INFO] --> src/psgen.rs:4793:5
2025-04-18 01:22:18,197 [INFO] |
2025-04-18 01:22:18,202 [INFO] 4793 |     'c_18653: {
2025-04-18 01:22:18,202 [INFO] |     ^^^^^^^^
2025-04-18 01:22:18,203 [INFO] 
2025-04-18 01:22:18,203 [INFO] warning: unused label
2025-04-18 01:22:18,203 [INFO] --> src/psgen.rs:4868:5
2025-04-18 01:22:18,204 [INFO] |
2025-04-18 01:22:18,204 [INFO] 4868 |     'c_8716: {
2025-04-18 01:22:18,204 [INFO] |     ^^^^^^^
2025-04-18 01:22:18,204 [INFO] 
2025-04-18 01:22:18,204 [INFO] warning: unnecessary parentheses around function argument
2025-04-18 01:22:18,205 [INFO] --> states/prims.rs:571:17
2025-04-18 01:22:18,205 [INFO] |
2025-04-18 01:22:18,206 [INFO] 571 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-18 01:22:18,206 [INFO] |                 ^
2025-04-18 01:22:18,207 [INFO] ...
2025-04-18 01:22:18,207 [INFO] 576 |                 }),
2025-04-18 01:22:18,208 [INFO] |                  ^
2025-04-18 01:22:18,208 [INFO] |
2025-04-18 01:22:18,208 [INFO] help: remove these parentheses
2025-04-18 01:22:18,209 [INFO] |
2025-04-18 01:22:18,209 [INFO] 571 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-18 01:22:18,212 [INFO] 572 |                     &mut (*n).u.re.compiled
2025-04-18 01:22:18,213 [INFO] ...
2025-04-18 01:22:18,213 [INFO] 575 |                     &mut (*n).u.re.compiled
2025-04-18 01:22:18,214 [INFO] 576 ~                 },
2025-04-18 01:22:18,220 [INFO] |
2025-04-18 01:22:18,220 [INFO] 
2025-04-18 01:22:18,220 [INFO] warning: unnecessary parentheses around function argument
2025-04-18 01:22:18,222 [INFO] --> states/prims.rs:627:17
2025-04-18 01:22:18,222 [INFO] |
2025-04-18 01:22:18,222 [INFO] 627 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-18 01:22:18,223 [INFO] |                 ^
2025-04-18 01:22:18,223 [INFO] ...
2025-04-18 01:22:18,223 [INFO] 632 |                 }),
2025-04-18 01:22:18,224 [INFO] |                  ^
2025-04-18 01:22:18,224 [INFO] |
2025-04-18 01:22:18,224 [INFO] help: remove these parentheses
2025-04-18 01:22:18,225 [INFO] |
2025-04-18 01:22:18,225 [INFO] 627 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-18 01:22:18,225 [INFO] 628 |                     &mut (*n).u.re.compiled
2025-04-18 01:22:18,225 [INFO] ...
2025-04-18 01:22:18,226 [INFO] 631 |                     &mut (*n).u.re.compiled
2025-04-18 01:22:18,226 [INFO] 632 ~                 },
2025-04-18 01:22:18,227 [INFO] |
2025-04-18 01:22:18,227 [INFO] 
2025-04-18 01:22:18,307 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,308 [INFO] --> afmlib/afm.rs:2:1
2025-04-18 01:22:18,309 [INFO] |
2025-04-18 01:22:18,309 [INFO] 2 | #![feature(extern_types)]
2025-04-18 01:22:18,310 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,310 [INFO] |
2025-04-18 01:22:18,311 [INFO] = note: `#[warn(unused_attributes)]` on by default
2025-04-18 01:22:18,311 [INFO] 
2025-04-18 01:22:18,311 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,312 [INFO] --> afmlib/afmparse.rs:2:1
2025-04-18 01:22:18,312 [INFO] |
2025-04-18 01:22:18,312 [INFO] 2 | #![feature(extern_types, label_break_value)]
2025-04-18 01:22:18,313 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,313 [INFO] 
2025-04-18 01:22:18,314 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,314 [INFO] --> afmlib/deffont.rs:2:1
2025-04-18 01:22:18,315 [INFO] |
2025-04-18 01:22:18,315 [INFO] 2 | #![feature(extern_types)]
2025-04-18 01:22:18,315 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,316 [INFO] 
2025-04-18 01:22:18,330 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,330 [INFO] --> src/main.rs:2:1
2025-04-18 01:22:18,330 [INFO] |
2025-04-18 01:22:18,330 [INFO] 2 | #![feature(extern_types)]
2025-04-18 01:22:18,330 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,330 [INFO] 
2025-04-18 01:22:18,330 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,330 [INFO] --> src/psgen.rs:2:1
2025-04-18 01:22:18,331 [INFO] |
2025-04-18 01:22:18,331 [INFO] 2 | #![feature(extern_types, label_break_value)]
2025-04-18 01:22:18,331 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,331 [INFO] 
2025-04-18 01:22:18,334 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,334 [INFO] --> src/util.rs:2:1
2025-04-18 01:22:18,334 [INFO] |
2025-04-18 01:22:18,334 [INFO] 2 | #![feature(extern_types)]
2025-04-18 01:22:18,334 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,334 [INFO] 
2025-04-18 01:22:18,337 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,337 [INFO] --> states/prims.rs:2:1
2025-04-18 01:22:18,338 [INFO] |
2025-04-18 01:22:18,338 [INFO] 2 | #![feature(extern_types)]
2025-04-18 01:22:18,342 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,343 [INFO] 
2025-04-18 01:22:18,343 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,343 [INFO] --> states/process.rs:2:1
2025-04-18 01:22:18,343 [INFO] |
2025-04-18 01:22:18,343 [INFO] 2 | #![feature(extern_types)]
2025-04-18 01:22:18,343 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,343 [INFO] 
2025-04-18 01:22:18,343 [INFO] warning: crate-level attribute should be in the root module
2025-04-18 01:22:18,344 [INFO] --> states/utils.rs:2:1
2025-04-18 01:22:18,346 [INFO] |
2025-04-18 01:22:18,346 [INFO] 2 | #![feature(extern_types)]
2025-04-18 01:22:18,347 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,347 [INFO] 
2025-04-18 01:22:18,593 [INFO] error[E0605]: non-primitive cast: `i32` as `AFMKey`
2025-04-18 01:22:18,593 [INFO] --> afmlib/afmparse.rs:1699:27
2025-04-18 01:22:18,593 [INFO] |
2025-04-18 01:22:18,593 [INFO] 1699 |             *key_return = key as AFMKey;
2025-04-18 01:22:18,593 [INFO] |                           ^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,593 [INFO] 
2025-04-18 01:22:18,736 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,736 [INFO] --> compat/regex.rs:496:20
2025-04-18 01:22:18,736 [INFO] |
2025-04-18 01:22:18,737 [INFO] 496 |             return reg_errcode_t::REG_ESPACE as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,737 [INFO] |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,737 [INFO] 
2025-04-18 01:22:18,737 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,737 [INFO] --> compat/regex.rs:743:28
2025-04-18 01:22:18,737 [INFO] |
2025-04-18 01:22:18,738 [INFO] 743 |                     return reg_errcode_t::REG_EBRACK as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,738 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,738 [INFO] 
2025-04-18 01:22:18,738 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,738 [INFO] --> compat/regex.rs:939:20
2025-04-18 01:22:18,738 [INFO] |
2025-04-18 01:22:18,739 [INFO] 939 |                 if *b.offset(-(2 as libc::c_int) as isize) as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,739 [INFO] |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,739 [INFO] 
2025-04-18 01:22:18,739 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,739 [INFO] --> compat/regex.rs:961:32
2025-04-18 01:22:18,739 [INFO] |
2025-04-18 01:22:18,740 [INFO] 961 |                         return reg_errcode_t::REG_EBRACK as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,740 [INFO] |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,740 [INFO] 
2025-04-18 01:22:18,740 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,740 [INFO] --> compat/regex.rs:977:36
2025-04-18 01:22:18,740 [INFO] |
2025-04-18 01:22:18,740 [INFO] 977 | ...                   return reg_errcode_t::REG_EESCAPE as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,741 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,741 [INFO] 
2025-04-18 01:22:18,741 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,741 [INFO] --> compat/regex.rs:1004:36
2025-04-18 01:22:18,741 [INFO] |
2025-04-18 01:22:18,741 [INFO] 1004 | ...                   return reg_errcode_t::REG_ERANGE as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,741 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,741 [INFO] 
2025-04-18 01:22:18,742 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,742 [INFO] --> compat/regex.rs:1069:40
2025-04-18 01:22:18,742 [INFO] |
2025-04-18 01:22:18,742 [INFO] 1069 | ...                   return reg_errcode_t::REG_EBRACK as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,742 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,742 [INFO] 
2025-04-18 01:22:18,743 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,743 [INFO] --> compat/regex.rs:1194:44
2025-04-18 01:22:18,743 [INFO] |
2025-04-18 01:22:18,743 [INFO] 1194 | ...                   return reg_errcode_t::REG_ECTYPE as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,743 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,743 [INFO] 
2025-04-18 01:22:18,744 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,744 [INFO] --> compat/regex.rs:1207:44
2025-04-18 01:22:18,744 [INFO] |
2025-04-18 01:22:18,744 [INFO] 1207 | ...                   return reg_errcode_t::REG_EBRACK as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,745 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,746 [INFO] 
2025-04-18 01:22:18,746 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,746 [INFO] --> compat/regex.rs:1469:28
2025-04-18 01:22:18,746 [INFO] |
2025-04-18 01:22:18,746 [INFO] 1469 |                     return reg_errcode_t::REG_EESCAPE as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,747 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,747 [INFO] 
2025-04-18 01:22:18,747 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,748 [INFO] --> compat/regex.rs:1742:48
2025-04-18 01:22:18,750 [INFO] |
2025-04-18 01:22:18,750 [INFO] 1742 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,750 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,750 [INFO] 
2025-04-18 01:22:18,755 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,756 [INFO] --> compat/regex.rs:2190:48
2025-04-18 01:22:18,756 [INFO] |
2025-04-18 01:22:18,756 [INFO] 2190 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,757 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,757 [INFO] 
2025-04-18 01:22:18,757 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,758 [INFO] --> compat/regex.rs:2616:48
2025-04-18 01:22:18,758 [INFO] |
2025-04-18 01:22:18,758 [INFO] 2616 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,758 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,759 [INFO] 
2025-04-18 01:22:18,759 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,759 [INFO] --> compat/regex.rs:3064:48
2025-04-18 01:22:18,760 [INFO] |
2025-04-18 01:22:18,760 [INFO] 3064 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,760 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,760 [INFO] 
2025-04-18 01:22:18,761 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,761 [INFO] --> compat/regex.rs:3490:48
2025-04-18 01:22:18,762 [INFO] |
2025-04-18 01:22:18,762 [INFO] 3490 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,765 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,765 [INFO] 
2025-04-18 01:22:18,766 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,766 [INFO] --> compat/regex.rs:3938:48
2025-04-18 01:22:18,766 [INFO] |
2025-04-18 01:22:18,766 [INFO] 3938 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,766 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,767 [INFO] 
2025-04-18 01:22:18,768 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,769 [INFO] --> compat/regex.rs:4364:48
2025-04-18 01:22:18,770 [INFO] |
2025-04-18 01:22:18,770 [INFO] 4364 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,770 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,770 [INFO] 
2025-04-18 01:22:18,772 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,772 [INFO] --> compat/regex.rs:4812:48
2025-04-18 01:22:18,772 [INFO] |
2025-04-18 01:22:18,773 [INFO] 4812 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,773 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,773 [INFO] 
2025-04-18 01:22:18,774 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,774 [INFO] --> compat/regex.rs:5238:48
2025-04-18 01:22:18,774 [INFO] |
2025-04-18 01:22:18,775 [INFO] 5238 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,775 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,775 [INFO] 
2025-04-18 01:22:18,775 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,775 [INFO] --> compat/regex.rs:5686:48
2025-04-18 01:22:18,776 [INFO] |
2025-04-18 01:22:18,776 [INFO] 5686 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,776 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,776 [INFO] 
2025-04-18 01:22:18,776 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,776 [INFO] --> compat/regex.rs:6112:48
2025-04-18 01:22:18,776 [INFO] |
2025-04-18 01:22:18,776 [INFO] 6112 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,776 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,776 [INFO] 
2025-04-18 01:22:18,777 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,777 [INFO] --> compat/regex.rs:6560:48
2025-04-18 01:22:18,778 [INFO] |
2025-04-18 01:22:18,778 [INFO] 6560 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,778 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,779 [INFO] 
2025-04-18 01:22:18,779 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,779 [INFO] --> compat/regex.rs:6986:48
2025-04-18 01:22:18,779 [INFO] |
2025-04-18 01:22:18,780 [INFO] 6986 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,780 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,780 [INFO] 
2025-04-18 01:22:18,780 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,780 [INFO] --> compat/regex.rs:7434:48
2025-04-18 01:22:18,781 [INFO] |
2025-04-18 01:22:18,781 [INFO] 7434 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,781 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,781 [INFO] 
2025-04-18 01:22:18,781 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,782 [INFO] --> compat/regex.rs:7860:48
2025-04-18 01:22:18,782 [INFO] |
2025-04-18 01:22:18,782 [INFO] 7860 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,782 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,782 [INFO] 
2025-04-18 01:22:18,783 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,783 [INFO] --> compat/regex.rs:8308:48
2025-04-18 01:22:18,783 [INFO] |
2025-04-18 01:22:18,783 [INFO] 8308 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,783 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,784 [INFO] 
2025-04-18 01:22:18,784 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,785 [INFO] --> compat/regex.rs:8734:48
2025-04-18 01:22:18,785 [INFO] |
2025-04-18 01:22:18,785 [INFO] 8734 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,785 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,785 [INFO] 
2025-04-18 01:22:18,786 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,786 [INFO] --> compat/regex.rs:9182:48
2025-04-18 01:22:18,786 [INFO] |
2025-04-18 01:22:18,786 [INFO] 9182 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,787 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,787 [INFO] 
2025-04-18 01:22:18,787 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,787 [INFO] --> compat/regex.rs:9608:48
2025-04-18 01:22:18,787 [INFO] |
2025-04-18 01:22:18,787 [INFO] 9608 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,787 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,787 [INFO] 
2025-04-18 01:22:18,787 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,788 [INFO] --> compat/regex.rs:10056:48
2025-04-18 01:22:18,788 [INFO] |
2025-04-18 01:22:18,788 [INFO] 10056 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,788 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,789 [INFO] 
2025-04-18 01:22:18,789 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,789 [INFO] --> compat/regex.rs:10482:48
2025-04-18 01:22:18,789 [INFO] |
2025-04-18 01:22:18,790 [INFO] 10482 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,790 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,790 [INFO] 
2025-04-18 01:22:18,791 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,791 [INFO] --> compat/regex.rs:10930:48
2025-04-18 01:22:18,791 [INFO] |
2025-04-18 01:22:18,791 [INFO] 10930 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,791 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,792 [INFO] 
2025-04-18 01:22:18,792 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,792 [INFO] --> compat/regex.rs:11356:48
2025-04-18 01:22:18,792 [INFO] |
2025-04-18 01:22:18,793 [INFO] 11356 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,793 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,794 [INFO] 
2025-04-18 01:22:18,794 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,794 [INFO] --> compat/regex.rs:11804:48
2025-04-18 01:22:18,794 [INFO] |
2025-04-18 01:22:18,794 [INFO] 11804 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,795 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,795 [INFO] 
2025-04-18 01:22:18,795 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,796 [INFO] --> compat/regex.rs:12230:48
2025-04-18 01:22:18,796 [INFO] |
2025-04-18 01:22:18,796 [INFO] 12230 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,796 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,797 [INFO] 
2025-04-18 01:22:18,797 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,797 [INFO] --> compat/regex.rs:12678:48
2025-04-18 01:22:18,797 [INFO] |
2025-04-18 01:22:18,797 [INFO] 12678 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,798 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,798 [INFO] 
2025-04-18 01:22:18,798 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,799 [INFO] --> compat/regex.rs:13104:48
2025-04-18 01:22:18,799 [INFO] |
2025-04-18 01:22:18,800 [INFO] 13104 | ...                   return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,800 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,800 [INFO] 
2025-04-18 01:22:18,800 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,800 [INFO] --> compat/regex.rs:13552:48
2025-04-18 01:22:18,801 [INFO] |
2025-04-18 01:22:18,801 [INFO] 13552 | ...                   return reg_errcode_t::REG_ESUBREG as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,801 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,802 [INFO] 
2025-04-18 01:22:18,803 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,803 [INFO] --> compat/regex.rs:13739:32
2025-04-18 01:22:18,803 [INFO] |
2025-04-18 01:22:18,804 [INFO] 13739 |                         return reg_errcode_t::REG_EBRACE as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,804 [INFO] |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,804 [INFO] 
2025-04-18 01:22:18,805 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,805 [INFO] --> compat/regex.rs:13833:36
2025-04-18 01:22:18,805 [INFO] |
2025-04-18 01:22:18,805 [INFO] 13833 | ...                   return reg_errcode_t::REG_BADBR as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,806 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,806 [INFO] 
2025-04-18 01:22:18,806 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,807 [INFO] --> compat/regex.rs:13847:40
2025-04-18 01:22:18,807 [INFO] |
2025-04-18 01:22:18,807 [INFO] 13847 | ...                   return reg_errcode_t::REG_EBRACE as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,808 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,808 [INFO] 
2025-04-18 01:22:18,808 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,808 [INFO] --> compat/regex.rs:13870:40
2025-04-18 01:22:18,809 [INFO] |
2025-04-18 01:22:18,809 [INFO] 13870 | ...                   return reg_errcode_t::REG_BADBR as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,809 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,810 [INFO] 
2025-04-18 01:22:18,810 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,810 [INFO] --> compat/regex.rs:13881:44
2025-04-18 01:22:18,810 [INFO] |
2025-04-18 01:22:18,810 [INFO] 13881 | ...                   return reg_errcode_t::REG_BADRPT as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,811 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,811 [INFO] 
2025-04-18 01:22:18,811 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,811 [INFO] --> compat/regex.rs:14352:32
2025-04-18 01:22:18,812 [INFO] |
2025-04-18 01:22:18,812 [INFO] 14352 |                         return reg_errcode_t::REG_ERPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,813 [INFO] |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,813 [INFO] 
2025-04-18 01:22:18,813 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,813 [INFO] --> compat/regex.rs:14591:32
2025-04-18 01:22:18,814 [INFO] |
2025-04-18 01:22:18,814 [INFO] 14591 |                         return reg_errcode_t::REG_BADRPT as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,814 [INFO] |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,815 [INFO] 
2025-04-18 01:22:18,816 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,816 [INFO] --> compat/regex.rs:14646:44
2025-04-18 01:22:18,816 [INFO] |
2025-04-18 01:22:18,816 [INFO] 14646 | ...                   return reg_errcode_t::REG_EESCAPE as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,817 [INFO] |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,817 [INFO] 
2025-04-18 01:22:18,817 [INFO] error[E0605]: non-primitive cast: `i32` as `re_opcode_t`
2025-04-18 01:22:18,818 [INFO] --> compat/regex.rs:14849:29
2025-04-18 01:22:18,818 [INFO] |
2025-04-18 01:22:18,818 [INFO] 14849 | / ...                   (if keep_string_p as libc::c_int != 0 {
2025-04-18 01:22:18,818 [INFO] 14850 | | ...                       re_opcode_t::on_failure_keep_string_jump as libc::c_int
2025-04-18 01:22:18,819 [INFO] 14851 | | ...                   } else {
2025-04-18 01:22:18,819 [INFO] 14852 | | ...                       re_opcode_t::on_failure_jump as libc::c_int
2025-04-18 01:22:18,820 [INFO] 14853 | | ...                   }) as re_opcode_t,
2025-04-18 01:22:18,820 [INFO] | |_______________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,820 [INFO] 
2025-04-18 01:22:18,820 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,821 [INFO] --> compat/regex.rs:15115:16
2025-04-18 01:22:18,821 [INFO] |
2025-04-18 01:22:18,822 [INFO] 15115 |         return reg_errcode_t::REG_EPAREN as libc::c_int as reg_errcode_t;
2025-04-18 01:22:18,822 [INFO] |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,822 [INFO] 
2025-04-18 01:22:18,891 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:18,891 [INFO] --> compat/regex.rs:15236:15
2025-04-18 01:22:18,891 [INFO] |
2025-04-18 01:22:18,892 [INFO] 15236 |     store_op1(op as libc::c_uint, loc, arg);
2025-04-18 01:22:18,892 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-18 01:22:18,892 [INFO] |     |
2025-04-18 01:22:18,892 [INFO] |     arguments to this function are incorrect
2025-04-18 01:22:18,892 [INFO] |
2025-04-18 01:22:18,893 [INFO] note: function defined here
2025-04-18 01:22:18,893 [INFO] --> compat/regex.rs:15184:22
2025-04-18 01:22:18,893 [INFO] |
2025-04-18 01:22:18,893 [INFO] 15184 | unsafe extern "C" fn store_op1(
2025-04-18 01:22:18,893 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:18,894 [INFO] 15185 |     mut op: re_opcode_t,
2025-04-18 01:22:18,894 [INFO] |     -------------------
2025-04-18 01:22:18,894 [INFO] 15186 |     mut loc: *mut libc::c_uchar,
2025-04-18 01:22:18,894 [INFO] |     ---------------------------
2025-04-18 01:22:18,895 [INFO] 15187 |     mut arg: libc::c_int,
2025-04-18 01:22:18,895 [INFO] |     --------------------
2025-04-18 01:22:18,895 [INFO] 
2025-04-18 01:22:18,908 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:18,909 [INFO] --> compat/regex.rs:15252:15
2025-04-18 01:22:18,909 [INFO] |
2025-04-18 01:22:18,909 [INFO] 15252 |     store_op2(op as libc::c_uint, loc, arg1, arg2);
2025-04-18 01:22:18,910 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-18 01:22:18,910 [INFO] |     |
2025-04-18 01:22:18,910 [INFO] |     arguments to this function are incorrect
2025-04-18 01:22:18,910 [INFO] |
2025-04-18 01:22:18,911 [INFO] note: function defined here
2025-04-18 01:22:18,911 [INFO] --> compat/regex.rs:15199:22
2025-04-18 01:22:18,911 [INFO] |
2025-04-18 01:22:18,911 [INFO] 15199 | unsafe extern "C" fn store_op2(
2025-04-18 01:22:18,911 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:18,912 [INFO] 15200 |     mut op: re_opcode_t,
2025-04-18 01:22:18,912 [INFO] |     -------------------
2025-04-18 01:22:18,912 [INFO] 15201 |     mut loc: *mut libc::c_uchar,
2025-04-18 01:22:18,913 [INFO] |     ---------------------------
2025-04-18 01:22:18,913 [INFO] 15202 |     mut arg1: libc::c_int,
2025-04-18 01:22:18,913 [INFO] |     ---------------------
2025-04-18 01:22:18,913 [INFO] 15203 |     mut arg2: libc::c_int,
2025-04-18 01:22:18,914 [INFO] |     ---------------------
2025-04-18 01:22:18,914 [INFO] 
2025-04-18 01:22:18,914 [INFO] error[E0605]: non-primitive cast: `i32` as `reg_errcode_t`
2025-04-18 01:22:18,915 [INFO] --> compat/regex.rs:15359:16
2025-04-18 01:22:18,915 [INFO] |
2025-04-18 01:22:18,916 [INFO] 15359 |           return (if syntax
2025-04-18 01:22:18,916 [INFO] |  ________________^
2025-04-18 01:22:18,917 [INFO] 15360 | |             & ((((((((((((((((1 as libc::c_int as libc::c_ulong) << 1 as libc::c_int)
2025-04-18 01:22:18,917 [INFO] 15361 | |                 << 1 as libc::c_int) << 1 as libc::c_int) << 1 as libc::c_int)
2025-04-18 01:22:18,917 [INFO] 15362 | |                 << 1 as libc::c_int) << 1 as libc::c_int) << 1 as libc::c_int)
2025-04-18 01:22:18,917 [INFO] ...     |
2025-04-18 01:22:18,918 [INFO] 15369 | |             reg_errcode_t::REG_NOERROR as libc::c_int
2025-04-18 01:22:18,918 [INFO] 15370 | |         }) as reg_errcode_t;
2025-04-18 01:22:18,918 [INFO] | |___________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,918 [INFO] 
2025-04-18 01:22:18,921 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,921 [INFO] --> compat/regex.rs:15452:19
2025-04-18 01:22:18,921 [INFO] |
2025-04-18 01:22:18,922 [INFO] 15452 |             match *fresh56 as re_opcode_t as libc::c_uint {
2025-04-18 01:22:18,922 [INFO] |                   ^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,923 [INFO] 
2025-04-18 01:22:18,923 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,923 [INFO] --> compat/regex.rs:15567:24
2025-04-18 01:22:18,923 [INFO] |
2025-04-18 01:22:18,923 [INFO] 15567 |                     if *p as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,924 [INFO] |                        ^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,924 [INFO] 
2025-04-18 01:22:18,925 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,925 [INFO] --> compat/regex.rs:15569:28
2025-04-18 01:22:18,925 [INFO] |
2025-04-18 01:22:18,925 [INFO] 15569 |                         && *p as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,925 [INFO] |                            ^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,926 [INFO] 
2025-04-18 01:22:18,927 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,927 [INFO] --> compat/regex.rs:15776:12
2025-04-18 01:22:18,927 [INFO] |
2025-04-18 01:22:18,927 [INFO] 15776 |         && *((*bufp).buffer).offset(0 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,927 [INFO] |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,927 [INFO] 
2025-04-18 01:22:18,943 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:18,943 [INFO] --> compat/regex.rs:15914:9
2025-04-18 01:22:18,944 [INFO] |
2025-04-18 01:22:18,944 [INFO] 15912 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-18 01:22:18,944 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-18 01:22:18,944 [INFO] 15913 |         bufp,
2025-04-18 01:22:18,944 [INFO] 15914 |         0 as *mut libc::c_void,
2025-04-18 01:22:18,944 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-18 01:22:18,944 [INFO] |
2025-04-18 01:22:18,944 [INFO] = note: expected raw pointer `*const i8`
2025-04-18 01:22:18,945 [INFO] found raw pointer `*mut c_void`
2025-04-18 01:22:18,945 [INFO] note: function defined here
2025-04-18 01:22:18,945 [INFO] --> compat/regex.rs:15947:22
2025-04-18 01:22:18,945 [INFO] |
2025-04-18 01:22:18,945 [INFO] 15947 | unsafe extern "C" fn re_match_2_internal(
2025-04-18 01:22:18,945 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-18 01:22:18,945 [INFO] 15948 |     mut bufp: *mut re_pattern_buffer,
2025-04-18 01:22:18,945 [INFO] |     --------------------------------
2025-04-18 01:22:18,946 [INFO] 15949 |     mut string1: *const libc::c_char,
2025-04-18 01:22:18,946 [INFO] |     --------------------------------
2025-04-18 01:22:18,946 [INFO] 15950 |     mut size1: libc::c_int,
2025-04-18 01:22:18,946 [INFO] |     ----------------------
2025-04-18 01:22:18,946 [INFO] 15951 |     mut string2: *const libc::c_char,
2025-04-18 01:22:18,946 [INFO] |     --------------------------------
2025-04-18 01:22:18,947 [INFO] 15952 |     mut size2: libc::c_int,
2025-04-18 01:22:18,947 [INFO] |     ----------------------
2025-04-18 01:22:18,947 [INFO] 15953 |     mut pos: libc::c_int,
2025-04-18 01:22:18,947 [INFO] |     --------------------
2025-04-18 01:22:18,947 [INFO] 15954 |     mut regs: *mut re_registers,
2025-04-18 01:22:18,947 [INFO] |     ---------------------------
2025-04-18 01:22:18,947 [INFO] 15955 |     mut stop: libc::c_int,
2025-04-18 01:22:18,947 [INFO] |     ---------------------
2025-04-18 01:22:18,947 [INFO] 
2025-04-18 01:22:18,972 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,973 [INFO] --> compat/regex.rs:16219:19
2025-04-18 01:22:18,973 [INFO] |
2025-04-18 01:22:18,974 [INFO] 16219 |             match *fresh88 as re_opcode_t as libc::c_uint {
2025-04-18 01:22:18,974 [INFO] |                   ^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,974 [INFO] 
2025-04-18 01:22:18,975 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,975 [INFO] --> compat/regex.rs:16378:45
2025-04-18 01:22:18,975 [INFO] |
2025-04-18 01:22:18,976 [INFO] 16378 |                       let mut not: boolean = (*p.offset(-(1 as libc::c_int as isize))
2025-04-18 01:22:18,976 [INFO] |  _____________________________________________^
2025-04-18 01:22:18,976 [INFO] 16379 | |                         as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,976 [INFO] | |______________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,976 [INFO] 
2025-04-18 01:22:18,976 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,977 [INFO] --> compat/regex.rs:16541:31
2025-04-18 01:22:18,977 [INFO] |
2025-04-18 01:22:18,977 [INFO] 16541 |                         match *fresh108 as re_opcode_t as libc::c_uint {
2025-04-18 01:22:18,978 [INFO] |                               ^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,978 [INFO] 
2025-04-18 01:22:18,978 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,978 [INFO] --> compat/regex.rs:16568:32
2025-04-18 01:22:18,979 [INFO] |
2025-04-18 01:22:18,979 [INFO] 16568 | ...                   && *p1 as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,980 [INFO] |                          ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,980 [INFO] 
2025-04-18 01:22:18,980 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,980 [INFO] --> compat/regex.rs:16570:32
2025-04-18 01:22:18,981 [INFO] |
2025-04-18 01:22:18,981 [INFO] 16570 | ...                   && *p1.offset(3 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,981 [INFO] |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,981 [INFO] 
2025-04-18 01:22:18,981 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,982 [INFO] --> compat/regex.rs:16982:33
2025-04-18 01:22:18,982 [INFO] |
2025-04-18 01:22:18,982 [INFO] 16982 | ...                   && (*p2 as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,982 [INFO] |                           ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,983 [INFO] 
2025-04-18 01:22:18,983 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,983 [INFO] --> compat/regex.rs:16984:36
2025-04-18 01:22:18,983 [INFO] |
2025-04-18 01:22:18,984 [INFO] 16984 | ...                   || *p2 as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,984 [INFO] |                          ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,984 [INFO] 
2025-04-18 01:22:18,985 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,985 [INFO] --> compat/regex.rs:16990:36
2025-04-18 01:22:18,985 [INFO] |
2025-04-18 01:22:18,985 [INFO] 16990 | ...                   && *p2 as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,985 [INFO] |                          ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,986 [INFO] 
2025-04-18 01:22:18,986 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,986 [INFO] --> compat/regex.rs:17004:31
2025-04-18 01:22:18,986 [INFO] |
2025-04-18 01:22:18,986 [INFO] 17004 |                     } else if *p2 as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,987 [INFO] |                               ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,987 [INFO] 
2025-04-18 01:22:18,987 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,987 [INFO] --> compat/regex.rs:17007:32
2025-04-18 01:22:18,987 [INFO] |
2025-04-18 01:22:18,987 [INFO] 17007 | ...                   && *p2 as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,987 [INFO] |                          ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,988 [INFO] 
2025-04-18 01:22:18,988 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,988 [INFO] --> compat/regex.rs:17017:28
2025-04-18 01:22:18,988 [INFO] |
2025-04-18 01:22:18,988 [INFO] 17017 |                         if *p1.offset(3 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,989 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,989 [INFO] 
2025-04-18 01:22:18,989 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,990 [INFO] --> compat/regex.rs:17026:35
2025-04-18 01:22:18,990 [INFO] |
2025-04-18 01:22:18,991 [INFO] 17026 |                         } else if *p1.offset(3 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,991 [INFO] |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,991 [INFO] 
2025-04-18 01:22:18,991 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,991 [INFO] --> compat/regex.rs:17028:32
2025-04-18 01:22:18,991 [INFO] |
2025-04-18 01:22:18,992 [INFO] 17028 | ...                   || *p1.offset(3 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,992 [INFO] |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,992 [INFO] 
2025-04-18 01:22:18,992 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,993 [INFO] --> compat/regex.rs:17032:59
2025-04-18 01:22:18,993 [INFO] |
2025-04-18 01:22:18,993 [INFO] 17032 |   ...                   let mut not_0: libc::c_int = (*p1
2025-04-18 01:22:18,993 [INFO] |  _____________________________________________________^
2025-04-18 01:22:18,993 [INFO] 17033 | | ...                       .offset(3 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,993 [INFO] | |___________________________________________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,994 [INFO] 
2025-04-18 01:22:18,994 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,994 [INFO] --> compat/regex.rs:17057:31
2025-04-18 01:22:18,994 [INFO] |
2025-04-18 01:22:18,994 [INFO] 17057 |                     } else if *p2 as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,994 [INFO] |                               ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,994 [INFO] 
2025-04-18 01:22:18,995 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,995 [INFO] --> compat/regex.rs:17060:28
2025-04-18 01:22:18,995 [INFO] |
2025-04-18 01:22:18,995 [INFO] 17060 |                         if *p1.offset(3 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,995 [INFO] |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,996 [INFO] 
2025-04-18 01:22:18,996 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,996 [INFO] --> compat/regex.rs:17079:35
2025-04-18 01:22:18,996 [INFO] |
2025-04-18 01:22:18,996 [INFO] 17079 |                         } else if *p1.offset(3 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,996 [INFO] |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,996 [INFO] 
2025-04-18 01:22:18,997 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,997 [INFO] --> compat/regex.rs:17109:35
2025-04-18 01:22:18,997 [INFO] |
2025-04-18 01:22:18,997 [INFO] 17109 |                         } else if *p1.offset(3 as libc::c_int as isize) as re_opcode_t
2025-04-18 01:22:18,997 [INFO] |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,998 [INFO] 
2025-04-18 01:22:18,998 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,998 [INFO] --> compat/regex.rs:17142:24
2025-04-18 01:22:18,998 [INFO] |
2025-04-18 01:22:18,998 [INFO] 17142 |                     if *p.offset(-(1 as libc::c_int) as isize) as re_opcode_t
2025-04-18 01:22:18,998 [INFO] |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:18,998 [INFO] 
2025-04-18 01:22:18,999 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:18,999 [INFO] --> compat/regex.rs:17759:36
2025-04-18 01:22:18,999 [INFO] |
2025-04-18 01:22:18,999 [INFO] 17759 | ...                   && *p1 as re_opcode_t as libc::c_uint
2025-04-18 01:22:18,999 [INFO] |                          ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,000 [INFO] 
2025-04-18 01:22:19,001 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,006 [INFO] --> compat/regex.rs:17766:36
2025-04-18 01:22:19,007 [INFO] |
2025-04-18 01:22:19,007 [INFO] 17766 | ...                   && *p1 as re_opcode_t as libc::c_uint
2025-04-18 01:22:19,008 [INFO] |                          ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,008 [INFO] 
2025-04-18 01:22:19,008 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,009 [INFO] --> compat/regex.rs:17939:23
2025-04-18 01:22:19,009 [INFO] |
2025-04-18 01:22:19,009 [INFO] 17939 |                 match *p as re_opcode_t as libc::c_uint {
2025-04-18 01:22:19,009 [INFO] |                       ^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,010 [INFO] 
2025-04-18 01:22:19,010 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,010 [INFO] --> compat/regex.rs:17956:24
2025-04-18 01:22:19,010 [INFO] |
2025-04-18 01:22:19,011 [INFO] 17956 |                     && *p1 as re_opcode_t as libc::c_uint
2025-04-18 01:22:19,011 [INFO] |                        ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,011 [INFO] 
2025-04-18 01:22:19,011 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,012 [INFO] --> compat/regex.rs:17959:28
2025-04-18 01:22:19,013 [INFO] |
2025-04-18 01:22:19,013 [INFO] 17959 |                         && *p1 as re_opcode_t as libc::c_uint
2025-04-18 01:22:19,013 [INFO] |                            ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,013 [INFO] 
2025-04-18 01:22:19,014 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,014 [INFO] --> compat/regex.rs:18204:15
2025-04-18 01:22:19,014 [INFO] |
2025-04-18 01:22:19,015 [INFO] 18204 |         match *p1 as re_opcode_t as libc::c_uint {
2025-04-18 01:22:19,015 [INFO] |               ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,015 [INFO] 
2025-04-18 01:22:19,015 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,016 [INFO] --> compat/regex.rs:18214:27
2025-04-18 01:22:19,016 [INFO] |
2025-04-18 01:22:19,016 [INFO] 18214 |                     while *p1.offset((mcnt - 3 as libc::c_int) as isize) as re_opcode_t
2025-04-18 01:22:19,016 [INFO] |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,017 [INFO] 
2025-04-18 01:22:19,017 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,017 [INFO] --> compat/regex.rs:18228:28
2025-04-18 01:22:19,018 [INFO] |
2025-04-18 01:22:19,018 [INFO] 18228 |                         if *p1 as re_opcode_t as libc::c_uint
2025-04-18 01:22:19,018 [INFO] |                            ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,019 [INFO] 
2025-04-18 01:22:19,019 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,019 [INFO] --> compat/regex.rs:18240:30
2025-04-18 01:22:19,019 [INFO] |
2025-04-18 01:22:19,021 [INFO] 18240 |                           if !(*p1.offset((mcnt - 3 as libc::c_int) as isize)
2025-04-18 01:22:19,021 [INFO] |  ______________________________^
2025-04-18 01:22:19,021 [INFO] 18241 | |                             as re_opcode_t as libc::c_uint
2025-04-18 01:22:19,021 [INFO] | |__________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,021 [INFO] 
2025-04-18 01:22:19,021 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,021 [INFO] --> compat/regex.rs:18285:15
2025-04-18 01:22:19,022 [INFO] |
2025-04-18 01:22:19,022 [INFO] 18285 |         match *p1 as re_opcode_t as libc::c_uint {
2025-04-18 01:22:19,023 [INFO] |               ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,024 [INFO] 
2025-04-18 01:22:19,024 [INFO] error[E0605]: non-primitive cast: `u8` as `re_opcode_t`
2025-04-18 01:22:19,024 [INFO] --> compat/regex.rs:18317:11
2025-04-18 01:22:19,025 [INFO] |
2025-04-18 01:22:19,025 [INFO] 18317 |     match *fresh187 as re_opcode_t as libc::c_uint {
2025-04-18 01:22:19,025 [INFO] |           ^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,026 [INFO] 
2025-04-18 01:22:19,079 [INFO] error[E0605]: non-primitive cast: `i32` as `TokenType`
2025-04-18 01:22:19,079 [INFO] --> src/psgen.rs:2841:27
2025-04-18 01:22:19,079 [INFO] |
2025-04-18 01:22:19,079 [INFO] 2841 |         (*token).type_0 = pending_token as TokenType;
2025-04-18 01:22:19,079 [INFO] |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object
2025-04-18 01:22:19,079 [INFO] 
2025-04-18 01:22:19,209 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,210 [INFO] --> states/prims.rs:727:9
2025-04-18 01:22:19,210 [INFO] |
2025-04-18 01:22:19,210 [INFO] 725 |     n = match_arg(
2025-04-18 01:22:19,210 [INFO] |         --------- arguments to this function are incorrect
2025-04-18 01:22:19,210 [INFO] 726 |         prim_name,
2025-04-18 01:22:19,210 [INFO] 727 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,211 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,211 [INFO] |
2025-04-18 01:22:19,211 [INFO] note: function defined here
2025-04-18 01:22:19,211 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,211 [INFO] |
2025-04-18 01:22:19,211 [INFO] 454 | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,211 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,211 [INFO] 455 |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,212 [INFO] |     --------------------------------
2025-04-18 01:22:19,212 [INFO] 456 |     mut type_0: NodeType,
2025-04-18 01:22:19,212 [INFO] |     --------------------
2025-04-18 01:22:19,212 [INFO] 457 |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,212 [INFO] |     ----------------------------
2025-04-18 01:22:19,212 [INFO] 458 |     mut env: *mut Environment,
2025-04-18 01:22:19,213 [INFO] |     -------------------------
2025-04-18 01:22:19,213 [INFO] 459 |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,213 [INFO] |     -------------------------
2025-04-18 01:22:19,213 [INFO] 
2025-04-18 01:22:19,226 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,226 [INFO] --> states/prims.rs:794:9
2025-04-18 01:22:19,227 [INFO] |
2025-04-18 01:22:19,227 [INFO] 792 |     var = match_arg(
2025-04-18 01:22:19,228 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,228 [INFO] 793 |         prim_name,
2025-04-18 01:22:19,228 [INFO] 794 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,228 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,228 [INFO] |
2025-04-18 01:22:19,229 [INFO] note: function defined here
2025-04-18 01:22:19,229 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,229 [INFO] |
2025-04-18 01:22:19,229 [INFO] 454 | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,230 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,230 [INFO] 455 |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,230 [INFO] |     --------------------------------
2025-04-18 01:22:19,230 [INFO] 456 |     mut type_0: NodeType,
2025-04-18 01:22:19,230 [INFO] |     --------------------
2025-04-18 01:22:19,231 [INFO] 457 |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,231 [INFO] |     ----------------------------
2025-04-18 01:22:19,231 [INFO] 458 |     mut env: *mut Environment,
2025-04-18 01:22:19,231 [INFO] |     -------------------------
2025-04-18 01:22:19,232 [INFO] 459 |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,232 [INFO] |     -------------------------
2025-04-18 01:22:19,232 [INFO] 
2025-04-18 01:22:19,242 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,243 [INFO] --> states/prims.rs:847:9
2025-04-18 01:22:19,243 [INFO] |
2025-04-18 01:22:19,243 [INFO] 845 |     n = match_arg(
2025-04-18 01:22:19,243 [INFO] |         --------- arguments to this function are incorrect
2025-04-18 01:22:19,244 [INFO] 846 |         prim_name,
2025-04-18 01:22:19,244 [INFO] 847 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,244 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,244 [INFO] |
2025-04-18 01:22:19,244 [INFO] note: function defined here
2025-04-18 01:22:19,245 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,245 [INFO] |
2025-04-18 01:22:19,245 [INFO] 454 | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,245 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,246 [INFO] 455 |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,246 [INFO] |     --------------------------------
2025-04-18 01:22:19,246 [INFO] 456 |     mut type_0: NodeType,
2025-04-18 01:22:19,247 [INFO] |     --------------------
2025-04-18 01:22:19,247 [INFO] 457 |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,247 [INFO] |     ----------------------------
2025-04-18 01:22:19,247 [INFO] 458 |     mut env: *mut Environment,
2025-04-18 01:22:19,247 [INFO] |     -------------------------
2025-04-18 01:22:19,247 [INFO] 459 |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,247 [INFO] |     -------------------------
2025-04-18 01:22:19,247 [INFO] 
2025-04-18 01:22:19,260 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,260 [INFO] --> states/prims.rs:1028:9
2025-04-18 01:22:19,261 [INFO] |
2025-04-18 01:22:19,261 [INFO] 1026 |     s = match_arg(
2025-04-18 01:22:19,261 [INFO] |         --------- arguments to this function are incorrect
2025-04-18 01:22:19,261 [INFO] 1027 |         prim_name,
2025-04-18 01:22:19,262 [INFO] 1028 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,262 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,263 [INFO] |
2025-04-18 01:22:19,263 [INFO] note: function defined here
2025-04-18 01:22:19,264 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,264 [INFO] |
2025-04-18 01:22:19,264 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,264 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,264 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,264 [INFO] |     --------------------------------
2025-04-18 01:22:19,264 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,264 [INFO] |     --------------------
2025-04-18 01:22:19,270 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,270 [INFO] |     ----------------------------
2025-04-18 01:22:19,270 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,270 [INFO] |     -------------------------
2025-04-18 01:22:19,271 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,271 [INFO] |     -------------------------
2025-04-18 01:22:19,271 [INFO] 
2025-04-18 01:22:19,276 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,277 [INFO] --> states/prims.rs:1215:9
2025-04-18 01:22:19,277 [INFO] |
2025-04-18 01:22:19,277 [INFO] 1213 |     start = match_arg(
2025-04-18 01:22:19,277 [INFO] |             --------- arguments to this function are incorrect
2025-04-18 01:22:19,278 [INFO] 1214 |         prim_name,
2025-04-18 01:22:19,279 [INFO] 1215 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,279 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,279 [INFO] |
2025-04-18 01:22:19,280 [INFO] note: function defined here
2025-04-18 01:22:19,280 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,280 [INFO] |
2025-04-18 01:22:19,281 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,281 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,281 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,281 [INFO] |     --------------------------------
2025-04-18 01:22:19,281 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,282 [INFO] |     --------------------
2025-04-18 01:22:19,283 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,283 [INFO] |     ----------------------------
2025-04-18 01:22:19,283 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,284 [INFO] |     -------------------------
2025-04-18 01:22:19,284 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,284 [INFO] |     -------------------------
2025-04-18 01:22:19,284 [INFO] 
2025-04-18 01:22:19,292 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,292 [INFO] --> states/prims.rs:1222:9
2025-04-18 01:22:19,293 [INFO] |
2025-04-18 01:22:19,293 [INFO] 1220 |     end = match_arg(
2025-04-18 01:22:19,293 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,293 [INFO] 1221 |         prim_name,
2025-04-18 01:22:19,294 [INFO] 1222 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,294 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,294 [INFO] |
2025-04-18 01:22:19,294 [INFO] note: function defined here
2025-04-18 01:22:19,294 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,295 [INFO] |
2025-04-18 01:22:19,295 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,295 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,295 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,296 [INFO] |     --------------------------------
2025-04-18 01:22:19,296 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,296 [INFO] |     --------------------
2025-04-18 01:22:19,296 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,297 [INFO] |     ----------------------------
2025-04-18 01:22:19,297 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,297 [INFO] |     -------------------------
2025-04-18 01:22:19,298 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,298 [INFO] |     -------------------------
2025-04-18 01:22:19,298 [INFO] 
2025-04-18 01:22:19,310 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,310 [INFO] --> states/prims.rs:1355:9
2025-04-18 01:22:19,310 [INFO] |
2025-04-18 01:22:19,310 [INFO] 1353 |     str = match_arg(
2025-04-18 01:22:19,311 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,311 [INFO] 1354 |         prim_name,
2025-04-18 01:22:19,311 [INFO] 1355 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,311 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,312 [INFO] |
2025-04-18 01:22:19,312 [INFO] note: function defined here
2025-04-18 01:22:19,312 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,313 [INFO] |
2025-04-18 01:22:19,313 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,313 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,313 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,313 [INFO] |     --------------------------------
2025-04-18 01:22:19,314 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,314 [INFO] |     --------------------
2025-04-18 01:22:19,314 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,315 [INFO] |     ----------------------------
2025-04-18 01:22:19,315 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,315 [INFO] |     -------------------------
2025-04-18 01:22:19,316 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,316 [INFO] |     -------------------------
2025-04-18 01:22:19,316 [INFO] 
2025-04-18 01:22:19,326 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,327 [INFO] --> states/prims.rs:1402:9
2025-04-18 01:22:19,327 [INFO] |
2025-04-18 01:22:19,327 [INFO] 1400 |     ch = match_arg(
2025-04-18 01:22:19,327 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,327 [INFO] 1401 |         prim_name,
2025-04-18 01:22:19,328 [INFO] 1402 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,328 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,328 [INFO] |
2025-04-18 01:22:19,328 [INFO] note: function defined here
2025-04-18 01:22:19,329 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,329 [INFO] |
2025-04-18 01:22:19,329 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,329 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,330 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,330 [INFO] |     --------------------------------
2025-04-18 01:22:19,330 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,331 [INFO] |     --------------------
2025-04-18 01:22:19,331 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,331 [INFO] |     ----------------------------
2025-04-18 01:22:19,331 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,331 [INFO] |     -------------------------
2025-04-18 01:22:19,332 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,332 [INFO] |     -------------------------
2025-04-18 01:22:19,332 [INFO] 
2025-04-18 01:22:19,340 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,341 [INFO] --> states/prims.rs:1409:9
2025-04-18 01:22:19,341 [INFO] |
2025-04-18 01:22:19,341 [INFO] 1407 |     st = match_arg(
2025-04-18 01:22:19,341 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,342 [INFO] 1408 |         prim_name,
2025-04-18 01:22:19,342 [INFO] 1409 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,342 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,343 [INFO] |
2025-04-18 01:22:19,343 [INFO] note: function defined here
2025-04-18 01:22:19,343 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,343 [INFO] |
2025-04-18 01:22:19,343 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,344 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,344 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,344 [INFO] |     --------------------------------
2025-04-18 01:22:19,344 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,344 [INFO] |     --------------------
2025-04-18 01:22:19,345 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,345 [INFO] |     ----------------------------
2025-04-18 01:22:19,345 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,350 [INFO] |     -------------------------
2025-04-18 01:22:19,350 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,351 [INFO] |     -------------------------
2025-04-18 01:22:19,351 [INFO] 
2025-04-18 01:22:19,355 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,355 [INFO] --> states/prims.rs:1470:9
2025-04-18 01:22:19,356 [INFO] |
2025-04-18 01:22:19,356 [INFO] 1468 |     str = match_arg(
2025-04-18 01:22:19,356 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,356 [INFO] 1469 |         prim_name,
2025-04-18 01:22:19,357 [INFO] 1470 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,358 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,358 [INFO] |
2025-04-18 01:22:19,358 [INFO] note: function defined here
2025-04-18 01:22:19,358 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,359 [INFO] |
2025-04-18 01:22:19,359 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,360 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,360 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,360 [INFO] |     --------------------------------
2025-04-18 01:22:19,360 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,361 [INFO] |     --------------------
2025-04-18 01:22:19,361 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,361 [INFO] |     ----------------------------
2025-04-18 01:22:19,361 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,362 [INFO] |     -------------------------
2025-04-18 01:22:19,362 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,362 [INFO] |     -------------------------
2025-04-18 01:22:19,362 [INFO] 
2025-04-18 01:22:19,371 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,371 [INFO] --> states/prims.rs:1477:9
2025-04-18 01:22:19,372 [INFO] |
2025-04-18 01:22:19,372 [INFO] 1475 |     re = match_arg(
2025-04-18 01:22:19,372 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,373 [INFO] 1476 |         prim_name,
2025-04-18 01:22:19,373 [INFO] 1477 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,373 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,374 [INFO] |
2025-04-18 01:22:19,374 [INFO] note: function defined here
2025-04-18 01:22:19,374 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,374 [INFO] |
2025-04-18 01:22:19,375 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,375 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,375 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,376 [INFO] |     --------------------------------
2025-04-18 01:22:19,376 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,376 [INFO] |     --------------------
2025-04-18 01:22:19,376 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,377 [INFO] |     ----------------------------
2025-04-18 01:22:19,377 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,377 [INFO] |     -------------------------
2025-04-18 01:22:19,378 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,378 [INFO] |     -------------------------
2025-04-18 01:22:19,378 [INFO] 
2025-04-18 01:22:19,391 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,392 [INFO] --> states/prims.rs:1809:9
2025-04-18 01:22:19,392 [INFO] |
2025-04-18 01:22:19,392 [INFO] 1807 |     str = match_arg(
2025-04-18 01:22:19,392 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,393 [INFO] 1808 |         prim_name,
2025-04-18 01:22:19,394 [INFO] 1809 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,394 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,395 [INFO] |
2025-04-18 01:22:19,395 [INFO] note: function defined here
2025-04-18 01:22:19,395 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,395 [INFO] |
2025-04-18 01:22:19,395 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,395 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,396 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,396 [INFO] |     --------------------------------
2025-04-18 01:22:19,396 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,396 [INFO] |     --------------------
2025-04-18 01:22:19,396 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,396 [INFO] |     ----------------------------
2025-04-18 01:22:19,396 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,397 [INFO] |     -------------------------
2025-04-18 01:22:19,397 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,397 [INFO] |     -------------------------
2025-04-18 01:22:19,397 [INFO] 
2025-04-18 01:22:19,404 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,404 [INFO] --> states/prims.rs:1816:9
2025-04-18 01:22:19,405 [INFO] |
2025-04-18 01:22:19,405 [INFO] 1814 |     re = match_arg(
2025-04-18 01:22:19,405 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,406 [INFO] 1815 |         prim_name,
2025-04-18 01:22:19,406 [INFO] 1816 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,406 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,407 [INFO] |
2025-04-18 01:22:19,407 [INFO] note: function defined here
2025-04-18 01:22:19,407 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,407 [INFO] |
2025-04-18 01:22:19,407 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,408 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,408 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,408 [INFO] |     --------------------------------
2025-04-18 01:22:19,409 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,409 [INFO] |     --------------------
2025-04-18 01:22:19,409 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,409 [INFO] |     ----------------------------
2025-04-18 01:22:19,409 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,410 [INFO] |     -------------------------
2025-04-18 01:22:19,410 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,410 [INFO] |     -------------------------
2025-04-18 01:22:19,410 [INFO] 
2025-04-18 01:22:19,418 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,418 [INFO] --> states/prims.rs:1823:9
2025-04-18 01:22:19,418 [INFO] |
2025-04-18 01:22:19,419 [INFO] 1821 |     subst = match_arg(
2025-04-18 01:22:19,419 [INFO] |             --------- arguments to this function are incorrect
2025-04-18 01:22:19,419 [INFO] 1822 |         prim_name,
2025-04-18 01:22:19,419 [INFO] 1823 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,420 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,421 [INFO] |
2025-04-18 01:22:19,421 [INFO] note: function defined here
2025-04-18 01:22:19,421 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,421 [INFO] |
2025-04-18 01:22:19,422 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,423 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,423 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,423 [INFO] |     --------------------------------
2025-04-18 01:22:19,424 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,424 [INFO] |     --------------------
2025-04-18 01:22:19,424 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,425 [INFO] |     ----------------------------
2025-04-18 01:22:19,425 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,425 [INFO] |     -------------------------
2025-04-18 01:22:19,425 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,426 [INFO] |     -------------------------
2025-04-18 01:22:19,426 [INFO] 
2025-04-18 01:22:19,432 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,432 [INFO] --> states/prims.rs:1856:9
2025-04-18 01:22:19,432 [INFO] |
2025-04-18 01:22:19,433 [INFO] 1854 |     str = match_arg(
2025-04-18 01:22:19,433 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,433 [INFO] 1855 |         prim_name,
2025-04-18 01:22:19,433 [INFO] 1856 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,433 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,434 [INFO] |
2025-04-18 01:22:19,434 [INFO] note: function defined here
2025-04-18 01:22:19,434 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,434 [INFO] |
2025-04-18 01:22:19,435 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,435 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,435 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,435 [INFO] |     --------------------------------
2025-04-18 01:22:19,435 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,436 [INFO] |     --------------------
2025-04-18 01:22:19,436 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,436 [INFO] |     ----------------------------
2025-04-18 01:22:19,436 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,436 [INFO] |     -------------------------
2025-04-18 01:22:19,436 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,437 [INFO] |     -------------------------
2025-04-18 01:22:19,437 [INFO] 
2025-04-18 01:22:19,447 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,447 [INFO] --> states/prims.rs:1863:9
2025-04-18 01:22:19,447 [INFO] |
2025-04-18 01:22:19,447 [INFO] 1861 |     re = match_arg(
2025-04-18 01:22:19,447 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,448 [INFO] 1862 |         prim_name,
2025-04-18 01:22:19,448 [INFO] 1863 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,448 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,449 [INFO] |
2025-04-18 01:22:19,449 [INFO] note: function defined here
2025-04-18 01:22:19,449 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,449 [INFO] |
2025-04-18 01:22:19,449 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,450 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,450 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,450 [INFO] |     --------------------------------
2025-04-18 01:22:19,450 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,450 [INFO] |     --------------------
2025-04-18 01:22:19,451 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,451 [INFO] |     ----------------------------
2025-04-18 01:22:19,451 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,451 [INFO] |     -------------------------
2025-04-18 01:22:19,451 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,452 [INFO] |     -------------------------
2025-04-18 01:22:19,452 [INFO] 
2025-04-18 01:22:19,460 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,460 [INFO] --> states/prims.rs:1870:9
2025-04-18 01:22:19,460 [INFO] |
2025-04-18 01:22:19,461 [INFO] 1868 |     subst = match_arg(
2025-04-18 01:22:19,461 [INFO] |             --------- arguments to this function are incorrect
2025-04-18 01:22:19,461 [INFO] 1869 |         prim_name,
2025-04-18 01:22:19,462 [INFO] 1870 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,462 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,462 [INFO] |
2025-04-18 01:22:19,462 [INFO] note: function defined here
2025-04-18 01:22:19,462 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,463 [INFO] |
2025-04-18 01:22:19,463 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,463 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,464 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,464 [INFO] |     --------------------------------
2025-04-18 01:22:19,464 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,464 [INFO] |     --------------------
2025-04-18 01:22:19,465 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,465 [INFO] |     ----------------------------
2025-04-18 01:22:19,465 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,465 [INFO] |     -------------------------
2025-04-18 01:22:19,465 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,466 [INFO] |     -------------------------
2025-04-18 01:22:19,466 [INFO] 
2025-04-18 01:22:19,492 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,493 [INFO] --> states/prims.rs:1906:9
2025-04-18 01:22:19,493 [INFO] |
2025-04-18 01:22:19,493 [INFO] 1904 |     re = match_arg(
2025-04-18 01:22:19,493 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,493 [INFO] 1905 |         prim_name,
2025-04-18 01:22:19,493 [INFO] 1906 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,494 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,494 [INFO] |
2025-04-18 01:22:19,494 [INFO] note: function defined here
2025-04-18 01:22:19,494 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,495 [INFO] |
2025-04-18 01:22:19,495 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,495 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,495 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,495 [INFO] |     --------------------------------
2025-04-18 01:22:19,496 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,496 [INFO] |     --------------------
2025-04-18 01:22:19,496 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,496 [INFO] |     ----------------------------
2025-04-18 01:22:19,496 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,497 [INFO] |     -------------------------
2025-04-18 01:22:19,497 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,497 [INFO] |     -------------------------
2025-04-18 01:22:19,497 [INFO] 
2025-04-18 01:22:19,508 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,509 [INFO] --> states/prims.rs:1913:9
2025-04-18 01:22:19,509 [INFO] |
2025-04-18 01:22:19,509 [INFO] 1911 |     str = match_arg(
2025-04-18 01:22:19,509 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,510 [INFO] 1912 |         prim_name,
2025-04-18 01:22:19,511 [INFO] 1913 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,511 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,511 [INFO] |
2025-04-18 01:22:19,511 [INFO] note: function defined here
2025-04-18 01:22:19,511 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,512 [INFO] |
2025-04-18 01:22:19,512 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,512 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,513 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,513 [INFO] |     --------------------------------
2025-04-18 01:22:19,513 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,513 [INFO] |     --------------------
2025-04-18 01:22:19,513 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,513 [INFO] |     ----------------------------
2025-04-18 01:22:19,513 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,513 [INFO] |     -------------------------
2025-04-18 01:22:19,514 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,514 [INFO] |     -------------------------
2025-04-18 01:22:19,514 [INFO] 
2025-04-18 01:22:19,527 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,527 [INFO] --> states/prims.rs:2036:9
2025-04-18 01:22:19,528 [INFO] |
2025-04-18 01:22:19,528 [INFO] 2034 |     fmt = match_arg(
2025-04-18 01:22:19,528 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,528 [INFO] 2035 |         prim_name,
2025-04-18 01:22:19,528 [INFO] 2036 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,528 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,528 [INFO] |
2025-04-18 01:22:19,529 [INFO] note: function defined here
2025-04-18 01:22:19,529 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,529 [INFO] |
2025-04-18 01:22:19,529 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,529 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,530 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,530 [INFO] |     --------------------------------
2025-04-18 01:22:19,530 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,530 [INFO] |     --------------------
2025-04-18 01:22:19,531 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,531 [INFO] |     ----------------------------
2025-04-18 01:22:19,531 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,531 [INFO] |     -------------------------
2025-04-18 01:22:19,531 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,531 [INFO] |     -------------------------
2025-04-18 01:22:19,532 [INFO] 
2025-04-18 01:22:19,550 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,550 [INFO] --> states/prims.rs:2328:9
2025-04-18 01:22:19,551 [INFO] |
2025-04-18 01:22:19,551 [INFO] 2326 |     s1 = match_arg(
2025-04-18 01:22:19,551 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,551 [INFO] 2327 |         prim_name,
2025-04-18 01:22:19,552 [INFO] 2328 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,552 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,552 [INFO] |
2025-04-18 01:22:19,552 [INFO] note: function defined here
2025-04-18 01:22:19,553 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,553 [INFO] |
2025-04-18 01:22:19,553 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,553 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,554 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,554 [INFO] |     --------------------------------
2025-04-18 01:22:19,554 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,554 [INFO] |     --------------------
2025-04-18 01:22:19,555 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,555 [INFO] |     ----------------------------
2025-04-18 01:22:19,555 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,555 [INFO] |     -------------------------
2025-04-18 01:22:19,556 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,556 [INFO] |     -------------------------
2025-04-18 01:22:19,556 [INFO] 
2025-04-18 01:22:19,567 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,567 [INFO] --> states/prims.rs:2335:9
2025-04-18 01:22:19,567 [INFO] |
2025-04-18 01:22:19,568 [INFO] 2333 |     s2 = match_arg(
2025-04-18 01:22:19,568 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,568 [INFO] 2334 |         prim_name,
2025-04-18 01:22:19,568 [INFO] 2335 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,569 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,569 [INFO] |
2025-04-18 01:22:19,569 [INFO] note: function defined here
2025-04-18 01:22:19,569 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,570 [INFO] |
2025-04-18 01:22:19,570 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,570 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,570 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,571 [INFO] |     --------------------------------
2025-04-18 01:22:19,571 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,571 [INFO] |     --------------------
2025-04-18 01:22:19,572 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,572 [INFO] |     ----------------------------
2025-04-18 01:22:19,572 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,572 [INFO] |     -------------------------
2025-04-18 01:22:19,572 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,573 [INFO] |     -------------------------
2025-04-18 01:22:19,573 [INFO] 
2025-04-18 01:22:19,587 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,587 [INFO] --> states/prims.rs:2411:9
2025-04-18 01:22:19,588 [INFO] |
2025-04-18 01:22:19,589 [INFO] 2409 |     n = match_arg(
2025-04-18 01:22:19,589 [INFO] |         --------- arguments to this function are incorrect
2025-04-18 01:22:19,589 [INFO] 2410 |         prim_name,
2025-04-18 01:22:19,589 [INFO] 2411 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,589 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,590 [INFO] |
2025-04-18 01:22:19,590 [INFO] note: function defined here
2025-04-18 01:22:19,590 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,590 [INFO] |
2025-04-18 01:22:19,590 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,591 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,591 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,591 [INFO] |     --------------------------------
2025-04-18 01:22:19,591 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,591 [INFO] |     --------------------
2025-04-18 01:22:19,591 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,592 [INFO] |     ----------------------------
2025-04-18 01:22:19,592 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,592 [INFO] |     -------------------------
2025-04-18 01:22:19,592 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,592 [INFO] |     -------------------------
2025-04-18 01:22:19,592 [INFO] 
2025-04-18 01:22:19,608 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,608 [INFO] --> states/prims.rs:2509:9
2025-04-18 01:22:19,608 [INFO] |
2025-04-18 01:22:19,608 [INFO] 2507 |     s1 = match_arg(
2025-04-18 01:22:19,608 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,608 [INFO] 2508 |         prim_name,
2025-04-18 01:22:19,608 [INFO] 2509 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,609 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,609 [INFO] |
2025-04-18 01:22:19,609 [INFO] note: function defined here
2025-04-18 01:22:19,609 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,609 [INFO] |
2025-04-18 01:22:19,609 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,609 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,609 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,610 [INFO] |     --------------------------------
2025-04-18 01:22:19,610 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,610 [INFO] |     --------------------
2025-04-18 01:22:19,610 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,610 [INFO] |     ----------------------------
2025-04-18 01:22:19,610 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,610 [INFO] |     -------------------------
2025-04-18 01:22:19,611 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,611 [INFO] |     -------------------------
2025-04-18 01:22:19,611 [INFO] 
2025-04-18 01:22:19,626 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,626 [INFO] --> states/prims.rs:2516:9
2025-04-18 01:22:19,626 [INFO] |
2025-04-18 01:22:19,627 [INFO] 2514 |     s2 = match_arg(
2025-04-18 01:22:19,627 [INFO] |          --------- arguments to this function are incorrect
2025-04-18 01:22:19,627 [INFO] 2515 |         prim_name,
2025-04-18 01:22:19,627 [INFO] 2516 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,627 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,628 [INFO] |
2025-04-18 01:22:19,628 [INFO] note: function defined here
2025-04-18 01:22:19,628 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,628 [INFO] |
2025-04-18 01:22:19,628 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,629 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,629 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,629 [INFO] |     --------------------------------
2025-04-18 01:22:19,629 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,629 [INFO] |     --------------------
2025-04-18 01:22:19,630 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,630 [INFO] |     ----------------------------
2025-04-18 01:22:19,630 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,630 [INFO] |     -------------------------
2025-04-18 01:22:19,631 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,631 [INFO] |     -------------------------
2025-04-18 01:22:19,631 [INFO] 
2025-04-18 01:22:19,640 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,640 [INFO] --> states/prims.rs:2523:9
2025-04-18 01:22:19,640 [INFO] |
2025-04-18 01:22:19,640 [INFO] 2521 |     len = match_arg(
2025-04-18 01:22:19,641 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,641 [INFO] 2522 |         prim_name,
2025-04-18 01:22:19,642 [INFO] 2523 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,642 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,642 [INFO] |
2025-04-18 01:22:19,642 [INFO] note: function defined here
2025-04-18 01:22:19,643 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,643 [INFO] |
2025-04-18 01:22:19,643 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,643 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,643 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,644 [INFO] |     --------------------------------
2025-04-18 01:22:19,644 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,644 [INFO] |     --------------------
2025-04-18 01:22:19,644 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,645 [INFO] |     ----------------------------
2025-04-18 01:22:19,645 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,645 [INFO] |     -------------------------
2025-04-18 01:22:19,645 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,646 [INFO] |     -------------------------
2025-04-18 01:22:19,646 [INFO] 
2025-04-18 01:22:19,657 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,657 [INFO] --> states/prims.rs:2603:9
2025-04-18 01:22:19,657 [INFO] |
2025-04-18 01:22:19,658 [INFO] 2601 |     str = match_arg(
2025-04-18 01:22:19,658 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,658 [INFO] 2602 |         prim_name,
2025-04-18 01:22:19,658 [INFO] 2603 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,658 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,659 [INFO] |
2025-04-18 01:22:19,659 [INFO] note: function defined here
2025-04-18 01:22:19,659 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,659 [INFO] |
2025-04-18 01:22:19,659 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,660 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,660 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,660 [INFO] |     --------------------------------
2025-04-18 01:22:19,660 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,661 [INFO] |     --------------------
2025-04-18 01:22:19,661 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,661 [INFO] |     ----------------------------
2025-04-18 01:22:19,661 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,662 [INFO] |     -------------------------
2025-04-18 01:22:19,662 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,662 [INFO] |     -------------------------
2025-04-18 01:22:19,662 [INFO] 
2025-04-18 01:22:19,671 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,672 [INFO] --> states/prims.rs:2610:9
2025-04-18 01:22:19,672 [INFO] |
2025-04-18 01:22:19,673 [INFO] 2608 |     start = match_arg(
2025-04-18 01:22:19,673 [INFO] |             --------- arguments to this function are incorrect
2025-04-18 01:22:19,673 [INFO] 2609 |         prim_name,
2025-04-18 01:22:19,674 [INFO] 2610 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,674 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,674 [INFO] |
2025-04-18 01:22:19,675 [INFO] note: function defined here
2025-04-18 01:22:19,675 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,675 [INFO] |
2025-04-18 01:22:19,675 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,676 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,676 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,676 [INFO] |     --------------------------------
2025-04-18 01:22:19,676 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,677 [INFO] |     --------------------
2025-04-18 01:22:19,677 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,677 [INFO] |     ----------------------------
2025-04-18 01:22:19,677 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,677 [INFO] |     -------------------------
2025-04-18 01:22:19,678 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,678 [INFO] |     -------------------------
2025-04-18 01:22:19,678 [INFO] 
2025-04-18 01:22:19,691 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,692 [INFO] --> states/prims.rs:2617:9
2025-04-18 01:22:19,692 [INFO] |
2025-04-18 01:22:19,693 [INFO] 2615 |     end = match_arg(
2025-04-18 01:22:19,693 [INFO] |           --------- arguments to this function are incorrect
2025-04-18 01:22:19,693 [INFO] 2616 |         prim_name,
2025-04-18 01:22:19,693 [INFO] 2617 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,694 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-18 01:22:19,694 [INFO] |
2025-04-18 01:22:19,694 [INFO] note: function defined here
2025-04-18 01:22:19,695 [INFO] --> states/prims.rs:454:22
2025-04-18 01:22:19,695 [INFO] |
2025-04-18 01:22:19,695 [INFO] 454  | unsafe extern "C" fn match_arg(
2025-04-18 01:22:19,695 [INFO] |                      ^^^^^^^^^
2025-04-18 01:22:19,695 [INFO] 455  |     mut prim_name: *mut libc::c_char,
2025-04-18 01:22:19,696 [INFO] |     --------------------------------
2025-04-18 01:22:19,696 [INFO] 456  |     mut type_0: NodeType,
2025-04-18 01:22:19,696 [INFO] |     --------------------
2025-04-18 01:22:19,696 [INFO] 457  |     mut argp: *mut *mut ListItem,
2025-04-18 01:22:19,697 [INFO] |     ----------------------------
2025-04-18 01:22:19,697 [INFO] 458  |     mut env: *mut Environment,
2025-04-18 01:22:19,697 [INFO] |     -------------------------
2025-04-18 01:22:19,698 [INFO] 459  |     mut linenum: libc::c_uint,
2025-04-18 01:22:19,698 [INFO] |     -------------------------
2025-04-18 01:22:19,698 [INFO] 
2025-04-18 01:22:19,741 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,741 [INFO] --> states/utils.rs:646:21
2025-04-18 01:22:19,742 [INFO] |
2025-04-18 01:22:19,742 [INFO] 646 |     n2 = node_alloc((*n).type_0 as libc::c_uint);
2025-04-18 01:22:19,742 [INFO] |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,742 [INFO] |          |
2025-04-18 01:22:19,743 [INFO] |          arguments to this function are incorrect
2025-04-18 01:22:19,743 [INFO] |
2025-04-18 01:22:19,743 [INFO] note: function defined here
2025-04-18 01:22:19,743 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,743 [INFO] |
2025-04-18 01:22:19,744 [INFO] 624 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,744 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,744 [INFO] 
2025-04-18 01:22:19,760 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,762 [INFO] --> states/utils.rs:747:20
2025-04-18 01:22:19,762 [INFO] |
2025-04-18 01:22:19,763 [INFO] 747 |     n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-18 01:22:19,763 [INFO] |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,763 [INFO] |         |
2025-04-18 01:22:19,763 [INFO] |         arguments to this function are incorrect
2025-04-18 01:22:19,764 [INFO] |
2025-04-18 01:22:19,764 [INFO] note: function defined here
2025-04-18 01:22:19,764 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,764 [INFO] |
2025-04-18 01:22:19,765 [INFO] 624 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,765 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,765 [INFO] 
2025-04-18 01:22:19,776 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,777 [INFO] --> states/utils.rs:1050:28
2025-04-18 01:22:19,777 [INFO] |
2025-04-18 01:22:19,777 [INFO] 1050 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-18 01:22:19,777 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,778 [INFO] |                 |
2025-04-18 01:22:19,778 [INFO] |                 arguments to this function are incorrect
2025-04-18 01:22:19,778 [INFO] |
2025-04-18 01:22:19,779 [INFO] note: function defined here
2025-04-18 01:22:19,779 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,779 [INFO] |
2025-04-18 01:22:19,780 [INFO] 624  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,780 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,780 [INFO] 
2025-04-18 01:22:19,789 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,790 [INFO] --> states/utils.rs:1083:28
2025-04-18 01:22:19,790 [INFO] |
2025-04-18 01:22:19,790 [INFO] 1083 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-18 01:22:19,790 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,790 [INFO] |                 |
2025-04-18 01:22:19,791 [INFO] |                 arguments to this function are incorrect
2025-04-18 01:22:19,791 [INFO] |
2025-04-18 01:22:19,791 [INFO] note: function defined here
2025-04-18 01:22:19,791 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,792 [INFO] |
2025-04-18 01:22:19,792 [INFO] 624  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,792 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,792 [INFO] 
2025-04-18 01:22:19,821 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,821 [INFO] --> states/utils.rs:1116:28
2025-04-18 01:22:19,822 [INFO] |
2025-04-18 01:22:19,822 [INFO] 1116 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-18 01:22:19,822 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,823 [INFO] |                 |
2025-04-18 01:22:19,823 [INFO] |                 arguments to this function are incorrect
2025-04-18 01:22:19,823 [INFO] |
2025-04-18 01:22:19,823 [INFO] note: function defined here
2025-04-18 01:22:19,823 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,823 [INFO] |
2025-04-18 01:22:19,823 [INFO] 624  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,824 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,824 [INFO] 
2025-04-18 01:22:19,834 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,834 [INFO] --> states/utils.rs:1206:32
2025-04-18 01:22:19,834 [INFO] |
2025-04-18 01:22:19,835 [INFO] 1206 |                 n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-18 01:22:19,835 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,835 [INFO] |                     |
2025-04-18 01:22:19,835 [INFO] |                     arguments to this function are incorrect
2025-04-18 01:22:19,836 [INFO] |
2025-04-18 01:22:19,836 [INFO] note: function defined here
2025-04-18 01:22:19,837 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,837 [INFO] |
2025-04-18 01:22:19,837 [INFO] 624  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,837 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,838 [INFO] 
2025-04-18 01:22:19,848 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,849 [INFO] --> states/utils.rs:1274:32
2025-04-18 01:22:19,849 [INFO] |
2025-04-18 01:22:19,849 [INFO] 1274 |                 n = node_alloc(NodeType::nREAL as libc::c_int as libc::c_uint);
2025-04-18 01:22:19,850 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,850 [INFO] |                     |
2025-04-18 01:22:19,850 [INFO] |                     arguments to this function are incorrect
2025-04-18 01:22:19,851 [INFO] |
2025-04-18 01:22:19,851 [INFO] note: function defined here
2025-04-18 01:22:19,851 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,851 [INFO] |
2025-04-18 01:22:19,851 [INFO] 624  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,852 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,852 [INFO] 
2025-04-18 01:22:19,863 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,864 [INFO] --> states/utils.rs:1379:28
2025-04-18 01:22:19,864 [INFO] |
2025-04-18 01:22:19,864 [INFO] 1379 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-18 01:22:19,865 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,865 [INFO] |                 |
2025-04-18 01:22:19,865 [INFO] |                 arguments to this function are incorrect
2025-04-18 01:22:19,865 [INFO] |
2025-04-18 01:22:19,865 [INFO] note: function defined here
2025-04-18 01:22:19,865 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,866 [INFO] |
2025-04-18 01:22:19,866 [INFO] 624  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,866 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,866 [INFO] 
2025-04-18 01:22:19,876 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,876 [INFO] --> states/utils.rs:1518:25
2025-04-18 01:22:19,876 [INFO] |
2025-04-18 01:22:19,877 [INFO] 1515 |                     n2 = calculate_binary(
2025-04-18 01:22:19,877 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-18 01:22:19,877 [INFO] ...
2025-04-18 01:22:19,877 [INFO] 1518 |                         ExprType::ePLUS as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,877 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-18 01:22:19,878 [INFO] |
2025-04-18 01:22:19,878 [INFO] note: function defined here
2025-04-18 01:22:19,879 [INFO] --> states/utils.rs:1194:22
2025-04-18 01:22:19,879 [INFO] |
2025-04-18 01:22:19,879 [INFO] 1194 | unsafe extern "C" fn calculate_binary(
2025-04-18 01:22:19,879 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-18 01:22:19,879 [INFO] 1195 |     mut l: *mut Node,
2025-04-18 01:22:19,880 [INFO] |     ----------------
2025-04-18 01:22:19,880 [INFO] 1196 |     mut r: *mut Node,
2025-04-18 01:22:19,880 [INFO] |     ----------------
2025-04-18 01:22:19,881 [INFO] 1197 |     mut type_0: ExprType,
2025-04-18 01:22:19,881 [INFO] |     --------------------
2025-04-18 01:22:19,881 [INFO] 1198 |     mut linenum_0: libc::c_uint,
2025-04-18 01:22:19,881 [INFO] |     ---------------------------
2025-04-18 01:22:19,882 [INFO] 
2025-04-18 01:22:19,891 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,892 [INFO] --> states/utils.rs:1526:25
2025-04-18 01:22:19,892 [INFO] |
2025-04-18 01:22:19,892 [INFO] 1523 |                     n2 = calculate_binary(
2025-04-18 01:22:19,892 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-18 01:22:19,892 [INFO] ...
2025-04-18 01:22:19,893 [INFO] 1526 |                         ExprType::eMINUS as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,893 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-18 01:22:19,893 [INFO] |
2025-04-18 01:22:19,893 [INFO] note: function defined here
2025-04-18 01:22:19,893 [INFO] --> states/utils.rs:1194:22
2025-04-18 01:22:19,894 [INFO] |
2025-04-18 01:22:19,894 [INFO] 1194 | unsafe extern "C" fn calculate_binary(
2025-04-18 01:22:19,894 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-18 01:22:19,894 [INFO] 1195 |     mut l: *mut Node,
2025-04-18 01:22:19,894 [INFO] |     ----------------
2025-04-18 01:22:19,895 [INFO] 1196 |     mut r: *mut Node,
2025-04-18 01:22:19,895 [INFO] |     ----------------
2025-04-18 01:22:19,895 [INFO] 1197 |     mut type_0: ExprType,
2025-04-18 01:22:19,896 [INFO] |     --------------------
2025-04-18 01:22:19,896 [INFO] 1198 |     mut linenum_0: libc::c_uint,
2025-04-18 01:22:19,896 [INFO] |     ---------------------------
2025-04-18 01:22:19,896 [INFO] 
2025-04-18 01:22:19,909 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,909 [INFO] --> states/utils.rs:1534:25
2025-04-18 01:22:19,909 [INFO] |
2025-04-18 01:22:19,909 [INFO] 1531 |                     n2 = calculate_binary(
2025-04-18 01:22:19,909 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-18 01:22:19,909 [INFO] ...
2025-04-18 01:22:19,910 [INFO] 1534 |                         ExprType::eMULT as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,910 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-18 01:22:19,910 [INFO] |
2025-04-18 01:22:19,910 [INFO] note: function defined here
2025-04-18 01:22:19,910 [INFO] --> states/utils.rs:1194:22
2025-04-18 01:22:19,911 [INFO] |
2025-04-18 01:22:19,911 [INFO] 1194 | unsafe extern "C" fn calculate_binary(
2025-04-18 01:22:19,911 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-18 01:22:19,911 [INFO] 1195 |     mut l: *mut Node,
2025-04-18 01:22:19,911 [INFO] |     ----------------
2025-04-18 01:22:19,912 [INFO] 1196 |     mut r: *mut Node,
2025-04-18 01:22:19,912 [INFO] |     ----------------
2025-04-18 01:22:19,912 [INFO] 1197 |     mut type_0: ExprType,
2025-04-18 01:22:19,912 [INFO] |     --------------------
2025-04-18 01:22:19,912 [INFO] 1198 |     mut linenum_0: libc::c_uint,
2025-04-18 01:22:19,913 [INFO] |     ---------------------------
2025-04-18 01:22:19,913 [INFO] 
2025-04-18 01:22:19,923 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,923 [INFO] --> states/utils.rs:1542:25
2025-04-18 01:22:19,923 [INFO] |
2025-04-18 01:22:19,923 [INFO] 1539 |                     n2 = calculate_binary(
2025-04-18 01:22:19,924 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-18 01:22:19,924 [INFO] ...
2025-04-18 01:22:19,924 [INFO] 1542 |                         ExprType::eDIV as libc::c_int as libc::c_uint,
2025-04-18 01:22:19,925 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-18 01:22:19,925 [INFO] |
2025-04-18 01:22:19,925 [INFO] note: function defined here
2025-04-18 01:22:19,926 [INFO] --> states/utils.rs:1194:22
2025-04-18 01:22:19,926 [INFO] |
2025-04-18 01:22:19,926 [INFO] 1194 | unsafe extern "C" fn calculate_binary(
2025-04-18 01:22:19,926 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-18 01:22:19,926 [INFO] 1195 |     mut l: *mut Node,
2025-04-18 01:22:19,927 [INFO] |     ----------------
2025-04-18 01:22:19,927 [INFO] 1196 |     mut r: *mut Node,
2025-04-18 01:22:19,927 [INFO] |     ----------------
2025-04-18 01:22:19,927 [INFO] 1197 |     mut type_0: ExprType,
2025-04-18 01:22:19,928 [INFO] |     --------------------
2025-04-18 01:22:19,928 [INFO] 1198 |     mut linenum_0: libc::c_uint,
2025-04-18 01:22:19,928 [INFO] |     ---------------------------
2025-04-18 01:22:19,928 [INFO] 
2025-04-18 01:22:19,941 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,941 [INFO] --> states/utils.rs:1563:17
2025-04-18 01:22:19,941 [INFO] |
2025-04-18 01:22:19,941 [INFO] 1560 |               n = calculate_binary(
2025-04-18 01:22:19,942 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-18 01:22:19,942 [INFO] ...
2025-04-18 01:22:19,942 [INFO] 1563 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-18 01:22:19,942 [INFO] 1564 | |                     == ExprType::ePOSTFIXADD as libc::c_int as libc::c_uint
2025-04-18 01:22:19,943 [INFO] 1565 | |                 {
2025-04-18 01:22:19,943 [INFO] 1566 | |                     ExprType::ePLUS as libc::c_int
2025-04-18 01:22:19,943 [INFO] 1567 | |                 } else {
2025-04-18 01:22:19,943 [INFO] 1568 | |                     ExprType::eMINUS as libc::c_int
2025-04-18 01:22:19,943 [INFO] 1569 | |                 }) as libc::c_uint,
2025-04-18 01:22:19,944 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-18 01:22:19,944 [INFO] |
2025-04-18 01:22:19,945 [INFO] note: function defined here
2025-04-18 01:22:19,945 [INFO] --> states/utils.rs:1194:22
2025-04-18 01:22:19,945 [INFO] |
2025-04-18 01:22:19,945 [INFO] 1194 | unsafe extern "C" fn calculate_binary(
2025-04-18 01:22:19,945 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-18 01:22:19,945 [INFO] 1195 |     mut l: *mut Node,
2025-04-18 01:22:19,945 [INFO] |     ----------------
2025-04-18 01:22:19,946 [INFO] 1196 |     mut r: *mut Node,
2025-04-18 01:22:19,946 [INFO] |     ----------------
2025-04-18 01:22:19,946 [INFO] 1197 |     mut type_0: ExprType,
2025-04-18 01:22:19,946 [INFO] |     --------------------
2025-04-18 01:22:19,946 [INFO] 1198 |     mut linenum_0: libc::c_uint,
2025-04-18 01:22:19,946 [INFO] |     ---------------------------
2025-04-18 01:22:19,947 [INFO] 
2025-04-18 01:22:19,960 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,960 [INFO] --> states/utils.rs:1582:17
2025-04-18 01:22:19,961 [INFO] |
2025-04-18 01:22:19,961 [INFO] 1579 |               n = calculate_binary(
2025-04-18 01:22:19,961 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-18 01:22:19,961 [INFO] ...
2025-04-18 01:22:19,962 [INFO] 1582 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-18 01:22:19,962 [INFO] 1583 | |                     == ExprType::ePREFIXADD as libc::c_int as libc::c_uint
2025-04-18 01:22:19,962 [INFO] 1584 | |                 {
2025-04-18 01:22:19,963 [INFO] 1585 | |                     ExprType::ePLUS as libc::c_int
2025-04-18 01:22:19,963 [INFO] 1586 | |                 } else {
2025-04-18 01:22:19,963 [INFO] 1587 | |                     ExprType::eMINUS as libc::c_int
2025-04-18 01:22:19,963 [INFO] 1588 | |                 }) as libc::c_uint,
2025-04-18 01:22:19,964 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-18 01:22:19,964 [INFO] |
2025-04-18 01:22:19,964 [INFO] note: function defined here
2025-04-18 01:22:19,964 [INFO] --> states/utils.rs:1194:22
2025-04-18 01:22:19,965 [INFO] |
2025-04-18 01:22:19,965 [INFO] 1194 | unsafe extern "C" fn calculate_binary(
2025-04-18 01:22:19,965 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-18 01:22:19,965 [INFO] 1195 |     mut l: *mut Node,
2025-04-18 01:22:19,965 [INFO] |     ----------------
2025-04-18 01:22:19,966 [INFO] 1196 |     mut r: *mut Node,
2025-04-18 01:22:19,966 [INFO] |     ----------------
2025-04-18 01:22:19,966 [INFO] 1197 |     mut type_0: ExprType,
2025-04-18 01:22:19,966 [INFO] |     --------------------
2025-04-18 01:22:19,967 [INFO] 1198 |     mut linenum_0: libc::c_uint,
2025-04-18 01:22:19,967 [INFO] |     ---------------------------
2025-04-18 01:22:19,967 [INFO] 
2025-04-18 01:22:19,977 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,977 [INFO] --> states/utils.rs:1779:32
2025-04-18 01:22:19,977 [INFO] |
2025-04-18 01:22:19,978 [INFO] 1779 |                 l = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-18 01:22:19,978 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-18 01:22:19,978 [INFO] |                     |
2025-04-18 01:22:19,978 [INFO] |                     arguments to this function are incorrect
2025-04-18 01:22:19,979 [INFO] |
2025-04-18 01:22:19,979 [INFO] note: function defined here
2025-04-18 01:22:19,979 [INFO] --> states/utils.rs:624:26
2025-04-18 01:22:19,979 [INFO] |
2025-04-18 01:22:19,979 [INFO] 624  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-18 01:22:19,980 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-18 01:22:19,980 [INFO] 
2025-04-18 01:22:19,993 [INFO] error[E0308]: mismatched types
2025-04-18 01:22:19,993 [INFO] --> states/utils.rs:1824:40
2025-04-18 01:22:19,993 [INFO] |
2025-04-18 01:22:19,993 [INFO] 1824 |             n = calculate_binary(l, r, (*expr).type_0 as libc::c_uint, (*expr).linenum);
2025-04-18 01:22:19,994 [INFO] |                 ----------------       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-18 01:22:19,994 [INFO] |                 |
2025-04-18 01:22:19,995 [INFO] |                 arguments to this function are incorrect
2025-04-18 01:22:19,995 [INFO] |
2025-04-18 01:22:19,996 [INFO] note: function defined here
2025-04-18 01:22:19,996 [INFO] --> states/utils.rs:1194:22
2025-04-18 01:22:19,996 [INFO] |
2025-04-18 01:22:19,997 [INFO] 1194 | unsafe extern "C" fn calculate_binary(
2025-04-18 01:22:19,997 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-18 01:22:19,997 [INFO] 1195 |     mut l: *mut Node,
2025-04-18 01:22:19,998 [INFO] |     ----------------
2025-04-18 01:22:19,998 [INFO] 1196 |     mut r: *mut Node,
2025-04-18 01:22:19,999 [INFO] |     ----------------
2025-04-18 01:22:19,999 [INFO] 1197 |     mut type_0: ExprType,
2025-04-18 01:22:19,999 [INFO] |     --------------------
2025-04-18 01:22:19,999 [INFO] 1198 |     mut linenum_0: libc::c_uint,
2025-04-18 01:22:20,000 [INFO] |     ---------------------------
2025-04-18 01:22:20,000 [INFO] 
2025-04-18 01:22:20,005 [INFO] Some errors have detailed explanations: E0308, E0605.
2025-04-18 01:22:20,006 [INFO] For more information about an error, try `rustc --explain E0308`.
2025-04-18 01:22:20,012 [INFO] warning: `c2rust_out` (lib) generated 33 warnings
2025-04-18 01:22:20,013 [INFO] error: could not compile `c2rust_out` due to 133 previous errors; 33 warnings emitted
2025-04-18 01:22:20,014 [ERROR] cargo build failed with code 101
2025-04-23 06:47:04,537 [INFO] Running: c2rust transpile -e compile_commands.json
2025-04-23 06:47:09,850 [INFO] c2rust transpile succeeded
2025-04-23 06:47:09,851 [INFO] Running: cargo build
2025-04-23 06:47:10,123 [INFO] Compiling proc-macro2 v1.0.94
2025-04-23 06:47:10,128 [INFO] Compiling unicode-ident v1.0.18
2025-04-23 06:47:10,405 [INFO] Compiling syn v1.0.109
2025-04-23 06:47:10,602 [INFO] Compiling libc v0.2.171
2025-04-23 06:47:10,889 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-23 06:47:12,460 [INFO] Compiling quote v1.0.40
2025-04-23 06:47:16,308 [INFO] Compiling c2rust-bitfields-derive v0.2.1
2025-04-23 06:47:17,139 [INFO] Compiling c2rust-bitfields v0.3.0
2025-04-23 06:47:17,945 [INFO] warning: unused label
2025-04-23 06:47:17,945 [INFO] --> afmlib/afmparse.rs:1309:9
2025-04-23 06:47:17,945 [INFO] |
2025-04-23 06:47:17,945 [INFO] 1309 |         'c_3699: {
2025-04-23 06:47:17,946 [INFO] |         ^^^^^^^
2025-04-23 06:47:17,946 [INFO] |
2025-04-23 06:47:17,946 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-23 06:47:17,946 [INFO] 
2025-04-23 06:47:17,950 [INFO] warning: unused import: `::libc`
2025-04-23 06:47:17,950 [INFO] --> compat/getopt.rs:1:5
2025-04-23 06:47:17,951 [INFO] |
2025-04-23 06:47:17,951 [INFO] 1 | use ::libc;
2025-04-23 06:47:17,951 [INFO] |     ^^^^^^
2025-04-23 06:47:17,951 [INFO] |
2025-04-23 06:47:17,951 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-23 06:47:17,951 [INFO] 
2025-04-23 06:47:17,952 [INFO] warning: unused import: `::libc`
2025-04-23 06:47:17,952 [INFO] --> compat/getopt1.rs:1:5
2025-04-23 06:47:17,952 [INFO] |
2025-04-23 06:47:17,952 [INFO] 1 | use ::libc;
2025-04-23 06:47:17,953 [INFO] |     ^^^^^^
2025-04-23 06:47:17,953 [INFO] 
2025-04-23 06:47:17,956 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,957 [INFO] --> compat/regex.rs:15502:33
2025-04-23 06:47:17,957 [INFO] |
2025-04-23 06:47:17,958 [INFO] 15502 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,958 [INFO] |                       ^
2025-04-23 06:47:17,958 [INFO] ...
2025-04-23 06:47:17,958 [INFO] 15507 | ...                   })
2025-04-23 06:47:17,959 [INFO] |                        ^
2025-04-23 06:47:17,959 [INFO] |
2025-04-23 06:47:17,959 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-23 06:47:17,960 [INFO] help: remove these parentheses
2025-04-23 06:47:17,961 [INFO] |
2025-04-23 06:47:17,961 [INFO] 15502 ~                                 if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,961 [INFO] 15503 |                                     0 as libc::c_int
2025-04-23 06:47:17,962 [INFO] ...
2025-04-23 06:47:17,962 [INFO] 15506 |                                     1 as libc::c_int
2025-04-23 06:47:17,962 [INFO] 15507 ~                                 }
2025-04-23 06:47:17,963 [INFO] |
2025-04-23 06:47:17,963 [INFO] 
2025-04-23 06:47:17,963 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,964 [INFO] --> compat/regex.rs:16491:37
2025-04-23 06:47:17,964 [INFO] |
2025-04-23 06:47:17,964 [INFO] 16491 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,965 [INFO] |                       ^
2025-04-23 06:47:17,965 [INFO] ...
2025-04-23 06:47:17,965 [INFO] 16496 | ...                   })
2025-04-23 06:47:17,966 [INFO] |                        ^
2025-04-23 06:47:17,966 [INFO] |
2025-04-23 06:47:17,966 [INFO] help: remove these parentheses
2025-04-23 06:47:17,966 [INFO] |
2025-04-23 06:47:17,966 [INFO] 16491 ~                                     if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,967 [INFO] 16492 |                                         0 as libc::c_int
2025-04-23 06:47:17,967 [INFO] ...
2025-04-23 06:47:17,967 [INFO] 16495 |                                         1 as libc::c_int
2025-04-23 06:47:17,968 [INFO] 16496 ~                                     }
2025-04-23 06:47:17,968 [INFO] |
2025-04-23 06:47:17,968 [INFO] 
2025-04-23 06:47:17,968 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,969 [INFO] --> compat/regex.rs:16753:29
2025-04-23 06:47:17,969 [INFO] |
2025-04-23 06:47:17,969 [INFO] 16753 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,969 [INFO] |                       ^
2025-04-23 06:47:17,970 [INFO] ...
2025-04-23 06:47:17,970 [INFO] 16758 | ...                   })
2025-04-23 06:47:17,970 [INFO] |                        ^
2025-04-23 06:47:17,971 [INFO] |
2025-04-23 06:47:17,971 [INFO] help: remove these parentheses
2025-04-23 06:47:17,971 [INFO] |
2025-04-23 06:47:17,972 [INFO] 16753 ~                             if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,973 [INFO] 16754 |                                 0 as libc::c_int
2025-04-23 06:47:17,973 [INFO] ...
2025-04-23 06:47:17,973 [INFO] 16757 |                                 1 as libc::c_int
2025-04-23 06:47:17,973 [INFO] 16758 ~                             }
2025-04-23 06:47:17,973 [INFO] |
2025-04-23 06:47:17,974 [INFO] 
2025-04-23 06:47:17,974 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,974 [INFO] --> compat/regex.rs:17041:29
2025-04-23 06:47:17,975 [INFO] |
2025-04-23 06:47:17,975 [INFO] 17041 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,975 [INFO] |                       ^
2025-04-23 06:47:17,976 [INFO] ...
2025-04-23 06:47:17,976 [INFO] 17046 | ...                   })
2025-04-23 06:47:17,976 [INFO] |                        ^
2025-04-23 06:47:17,976 [INFO] |
2025-04-23 06:47:17,976 [INFO] help: remove these parentheses
2025-04-23 06:47:17,976 [INFO] |
2025-04-23 06:47:17,977 [INFO] 17041 ~                             if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,978 [INFO] 17042 |                                 0 as libc::c_int
2025-04-23 06:47:17,978 [INFO] ...
2025-04-23 06:47:17,978 [INFO] 17045 |                                 1 as libc::c_int
2025-04-23 06:47:17,978 [INFO] 17046 ~                             }
2025-04-23 06:47:17,978 [INFO] |
2025-04-23 06:47:17,979 [INFO] 
2025-04-23 06:47:17,979 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,979 [INFO] --> compat/regex.rs:17138:29
2025-04-23 06:47:17,979 [INFO] |
2025-04-23 06:47:17,979 [INFO] 17138 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,980 [INFO] |                       ^
2025-04-23 06:47:17,980 [INFO] ...
2025-04-23 06:47:17,980 [INFO] 17143 | ...                   })
2025-04-23 06:47:17,980 [INFO] |                        ^
2025-04-23 06:47:17,980 [INFO] |
2025-04-23 06:47:17,980 [INFO] help: remove these parentheses
2025-04-23 06:47:17,980 [INFO] |
2025-04-23 06:47:17,981 [INFO] 17138 ~                             if (fail_stack.stack).is_null() {
2025-04-23 06:47:17,981 [INFO] 17139 |                                 0 as libc::c_int
2025-04-23 06:47:17,982 [INFO] ...
2025-04-23 06:47:17,982 [INFO] 17142 |                                 1 as libc::c_int
2025-04-23 06:47:17,982 [INFO] 17143 ~                             }
2025-04-23 06:47:17,983 [INFO] |
2025-04-23 06:47:17,983 [INFO] 
2025-04-23 06:47:17,983 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,983 [INFO] --> compat/regex.rs:17294:29
2025-04-23 06:47:17,983 [INFO] |
2025-04-23 06:47:17,984 [INFO] 17294 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:17,984 [INFO] |                       ^
2025-04-23 06:47:17,984 [INFO] ...
2025-04-23 06:47:17,984 [INFO] 17300 | ...                   })
2025-04-23 06:47:17,984 [INFO] |                        ^
2025-04-23 06:47:17,984 [INFO] |
2025-04-23 06:47:17,985 [INFO] help: remove these parentheses
2025-04-23 06:47:17,985 [INFO] |
2025-04-23 06:47:17,985 [INFO] 17294 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:17,985 [INFO] 17295 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:17,985 [INFO] ...
2025-04-23 06:47:17,986 [INFO] 17299 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:17,986 [INFO] 17300 ~                             }
2025-04-23 06:47:17,986 [INFO] |
2025-04-23 06:47:17,986 [INFO] 
2025-04-23 06:47:17,987 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,987 [INFO] --> compat/regex.rs:17306:29
2025-04-23 06:47:17,987 [INFO] |
2025-04-23 06:47:17,987 [INFO] 17306 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:17,988 [INFO] |                       ^
2025-04-23 06:47:17,988 [INFO] ...
2025-04-23 06:47:17,988 [INFO] 17310 | ...                   })
2025-04-23 06:47:17,989 [INFO] |                        ^
2025-04-23 06:47:17,989 [INFO] |
2025-04-23 06:47:17,989 [INFO] help: remove these parentheses
2025-04-23 06:47:17,989 [INFO] |
2025-04-23 06:47:17,989 [INFO] 17306 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:17,990 [INFO] 17307 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:17,990 [INFO] 17308 |                             } else {
2025-04-23 06:47:17,990 [INFO] 17309 |                                 *d as libc::c_int
2025-04-23 06:47:17,990 [INFO] 17310 ~                             }
2025-04-23 06:47:17,991 [INFO] |
2025-04-23 06:47:17,991 [INFO] 
2025-04-23 06:47:17,991 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,992 [INFO] --> compat/regex.rs:17333:29
2025-04-23 06:47:17,992 [INFO] |
2025-04-23 06:47:17,992 [INFO] 17333 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:17,992 [INFO] |                       ^
2025-04-23 06:47:17,993 [INFO] ...
2025-04-23 06:47:17,993 [INFO] 17339 | ...                   })
2025-04-23 06:47:17,993 [INFO] |                        ^
2025-04-23 06:47:17,994 [INFO] |
2025-04-23 06:47:17,994 [INFO] help: remove these parentheses
2025-04-23 06:47:17,994 [INFO] |
2025-04-23 06:47:17,994 [INFO] 17333 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:17,995 [INFO] 17334 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:17,995 [INFO] ...
2025-04-23 06:47:17,995 [INFO] 17338 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:17,995 [INFO] 17339 ~                             }
2025-04-23 06:47:17,995 [INFO] |
2025-04-23 06:47:17,996 [INFO] 
2025-04-23 06:47:17,997 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:17,997 [INFO] --> compat/regex.rs:17345:29
2025-04-23 06:47:17,997 [INFO] |
2025-04-23 06:47:17,997 [INFO] 17345 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:17,998 [INFO] |                       ^
2025-04-23 06:47:17,998 [INFO] ...
2025-04-23 06:47:17,998 [INFO] 17349 | ...                   })
2025-04-23 06:47:17,998 [INFO] |                        ^
2025-04-23 06:47:17,998 [INFO] |
2025-04-23 06:47:17,999 [INFO] help: remove these parentheses
2025-04-23 06:47:17,999 [INFO] |
2025-04-23 06:47:17,999 [INFO] 17345 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:17,999 [INFO] 17346 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:17,999 [INFO] 17347 |                             } else {
2025-04-23 06:47:17,999 [INFO] 17348 |                                 *d as libc::c_int
2025-04-23 06:47:17,999 [INFO] 17349 ~                             }
2025-04-23 06:47:18,000 [INFO] |
2025-04-23 06:47:18,000 [INFO] 
2025-04-23 06:47:18,000 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:18,000 [INFO] --> compat/regex.rs:17363:25
2025-04-23 06:47:18,000 [INFO] |
2025-04-23 06:47:18,000 [INFO] 17363 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:18,000 [INFO] |                         ^
2025-04-23 06:47:18,001 [INFO] ...
2025-04-23 06:47:18,001 [INFO] 17367 |                         })
2025-04-23 06:47:18,001 [INFO] |                          ^
2025-04-23 06:47:18,001 [INFO] |
2025-04-23 06:47:18,001 [INFO] help: remove these parentheses
2025-04-23 06:47:18,001 [INFO] |
2025-04-23 06:47:18,001 [INFO] 17363 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:18,002 [INFO] 17364 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:18,002 [INFO] 17365 |                         } else {
2025-04-23 06:47:18,002 [INFO] 17366 |                             *d as libc::c_int
2025-04-23 06:47:18,002 [INFO] 17367 ~                         }
2025-04-23 06:47:18,002 [INFO] |
2025-04-23 06:47:18,002 [INFO] 
2025-04-23 06:47:18,003 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:18,003 [INFO] --> compat/regex.rs:17376:33
2025-04-23 06:47:18,003 [INFO] |
2025-04-23 06:47:18,003 [INFO] 17376 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:18,003 [INFO] |                       ^
2025-04-23 06:47:18,004 [INFO] ...
2025-04-23 06:47:18,004 [INFO] 17382 | ...                   })
2025-04-23 06:47:18,004 [INFO] |                        ^
2025-04-23 06:47:18,004 [INFO] |
2025-04-23 06:47:18,004 [INFO] help: remove these parentheses
2025-04-23 06:47:18,004 [INFO] |
2025-04-23 06:47:18,005 [INFO] 17376 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:18,005 [INFO] 17377 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:18,005 [INFO] ...
2025-04-23 06:47:18,006 [INFO] 17381 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:18,006 [INFO] 17382 ~                                 }
2025-04-23 06:47:18,006 [INFO] |
2025-04-23 06:47:18,006 [INFO] 
2025-04-23 06:47:18,007 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:18,007 [INFO] --> compat/regex.rs:17397:29
2025-04-23 06:47:18,007 [INFO] |
2025-04-23 06:47:18,008 [INFO] 17397 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:18,008 [INFO] |                       ^
2025-04-23 06:47:18,008 [INFO] ...
2025-04-23 06:47:18,008 [INFO] 17403 | ...                   })
2025-04-23 06:47:18,009 [INFO] |                        ^
2025-04-23 06:47:18,009 [INFO] |
2025-04-23 06:47:18,009 [INFO] help: remove these parentheses
2025-04-23 06:47:18,009 [INFO] |
2025-04-23 06:47:18,010 [INFO] 17397 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:18,010 [INFO] 17398 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:18,010 [INFO] ...
2025-04-23 06:47:18,010 [INFO] 17402 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:18,011 [INFO] 17403 ~                             }
2025-04-23 06:47:18,011 [INFO] |
2025-04-23 06:47:18,011 [INFO] 
2025-04-23 06:47:18,011 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:18,011 [INFO] --> compat/regex.rs:17408:29
2025-04-23 06:47:18,012 [INFO] |
2025-04-23 06:47:18,012 [INFO] 17408 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:18,012 [INFO] |                       ^
2025-04-23 06:47:18,013 [INFO] ...
2025-04-23 06:47:18,013 [INFO] 17412 | ...                   })
2025-04-23 06:47:18,014 [INFO] |                        ^
2025-04-23 06:47:18,014 [INFO] |
2025-04-23 06:47:18,014 [INFO] help: remove these parentheses
2025-04-23 06:47:18,014 [INFO] |
2025-04-23 06:47:18,014 [INFO] 17408 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:18,015 [INFO] 17409 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:18,015 [INFO] 17410 |                             } else {
2025-04-23 06:47:18,016 [INFO] 17411 |                                 *d as libc::c_int
2025-04-23 06:47:18,016 [INFO] 17412 ~                             }
2025-04-23 06:47:18,016 [INFO] |
2025-04-23 06:47:18,016 [INFO] 
2025-04-23 06:47:18,016 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:18,016 [INFO] --> compat/regex.rs:17439:33
2025-04-23 06:47:18,017 [INFO] |
2025-04-23 06:47:18,017 [INFO] 17439 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:18,018 [INFO] |                       ^
2025-04-23 06:47:18,018 [INFO] ...
2025-04-23 06:47:18,019 [INFO] 17443 | ...                   })
2025-04-23 06:47:18,019 [INFO] |                        ^
2025-04-23 06:47:18,019 [INFO] |
2025-04-23 06:47:18,019 [INFO] help: remove these parentheses
2025-04-23 06:47:18,020 [INFO] |
2025-04-23 06:47:18,020 [INFO] 17439 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:18,020 [INFO] 17440 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:18,020 [INFO] 17441 |                                 } else {
2025-04-23 06:47:18,021 [INFO] 17442 |                                     *d as libc::c_int
2025-04-23 06:47:18,021 [INFO] 17443 ~                                 }
2025-04-23 06:47:18,021 [INFO] |
2025-04-23 06:47:18,021 [INFO] 
2025-04-23 06:47:18,022 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:18,022 [INFO] --> compat/regex.rs:17495:33
2025-04-23 06:47:18,022 [INFO] |
2025-04-23 06:47:18,022 [INFO] 17495 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:18,022 [INFO] |                       ^
2025-04-23 06:47:18,023 [INFO] ...
2025-04-23 06:47:18,023 [INFO] 17499 | ...                   })
2025-04-23 06:47:18,023 [INFO] |                        ^
2025-04-23 06:47:18,023 [INFO] |
2025-04-23 06:47:18,024 [INFO] help: remove these parentheses
2025-04-23 06:47:18,024 [INFO] |
2025-04-23 06:47:18,024 [INFO] 17495 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:18,024 [INFO] 17496 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:18,024 [INFO] 17497 |                                 } else {
2025-04-23 06:47:18,025 [INFO] 17498 |                                     *d as libc::c_int
2025-04-23 06:47:18,025 [INFO] 17499 ~                                 }
2025-04-23 06:47:18,025 [INFO] |
2025-04-23 06:47:18,026 [INFO] 
2025-04-23 06:47:18,026 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:18,026 [INFO] --> compat/regex.rs:17661:37
2025-04-23 06:47:18,026 [INFO] |
2025-04-23 06:47:18,026 [INFO] 17661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:18,027 [INFO] |                       ^
2025-04-23 06:47:18,027 [INFO] ...
2025-04-23 06:47:18,027 [INFO] 17666 | ...                   })
2025-04-23 06:47:18,027 [INFO] |                        ^
2025-04-23 06:47:18,028 [INFO] |
2025-04-23 06:47:18,028 [INFO] help: remove these parentheses
2025-04-23 06:47:18,028 [INFO] |
2025-04-23 06:47:18,028 [INFO] 17661 ~                                     if (fail_stack.stack).is_null() {
2025-04-23 06:47:18,029 [INFO] 17662 |                                         0 as libc::c_int
2025-04-23 06:47:18,029 [INFO] ...
2025-04-23 06:47:18,029 [INFO] 17665 |                                         1 as libc::c_int
2025-04-23 06:47:18,029 [INFO] 17666 ~                                     }
2025-04-23 06:47:18,029 [INFO] |
2025-04-23 06:47:18,029 [INFO] 
2025-04-23 06:47:18,030 [INFO] warning: unnecessary parentheses around method argument
2025-04-23 06:47:18,030 [INFO] --> compat/regex.rs:18011:13
2025-04-23 06:47:18,031 [INFO] |
2025-04-23 06:47:18,031 [INFO] 18011 |             (if dend == end_match_1 {
2025-04-23 06:47:18,031 [INFO] |             ^
2025-04-23 06:47:18,031 [INFO] ...
2025-04-23 06:47:18,031 [INFO] 18015 |             }),
2025-04-23 06:47:18,031 [INFO] |              ^
2025-04-23 06:47:18,032 [INFO] |
2025-04-23 06:47:18,032 [INFO] help: remove these parentheses
2025-04-23 06:47:18,032 [INFO] |
2025-04-23 06:47:18,033 [INFO] 18011 ~             if dend == end_match_1 {
2025-04-23 06:47:18,033 [INFO] 18012 |                 string1
2025-04-23 06:47:18,033 [INFO] 18013 |             } else {
2025-04-23 06:47:18,033 [INFO] 18014 |                 string2.offset(-(size1 as isize))
2025-04-23 06:47:18,034 [INFO] 18015 ~             },
2025-04-23 06:47:18,034 [INFO] |
2025-04-23 06:47:18,034 [INFO] 
2025-04-23 06:47:18,034 [INFO] warning: unused label
2025-04-23 06:47:18,034 [INFO] --> src/psgen.rs:4554:5
2025-04-23 06:47:18,035 [INFO] |
2025-04-23 06:47:18,036 [INFO] 4554 |     'c_18653: {
2025-04-23 06:47:18,036 [INFO] |     ^^^^^^^^
2025-04-23 06:47:18,036 [INFO] 
2025-04-23 06:47:18,036 [INFO] warning: unused label
2025-04-23 06:47:18,036 [INFO] --> src/psgen.rs:4629:5
2025-04-23 06:47:18,037 [INFO] |
2025-04-23 06:47:18,037 [INFO] 4629 |     'c_8716: {
2025-04-23 06:47:18,038 [INFO] |     ^^^^^^^
2025-04-23 06:47:18,038 [INFO] 
2025-04-23 06:47:18,038 [INFO] warning: unnecessary parentheses around function argument
2025-04-23 06:47:18,039 [INFO] --> states/prims.rs:467:17
2025-04-23 06:47:18,039 [INFO] |
2025-04-23 06:47:18,039 [INFO] 467 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-23 06:47:18,039 [INFO] |                 ^
2025-04-23 06:47:18,040 [INFO] ...
2025-04-23 06:47:18,040 [INFO] 472 |                 }),
2025-04-23 06:47:18,040 [INFO] |                  ^
2025-04-23 06:47:18,040 [INFO] |
2025-04-23 06:47:18,041 [INFO] help: remove these parentheses
2025-04-23 06:47:18,041 [INFO] |
2025-04-23 06:47:18,042 [INFO] 467 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-23 06:47:18,042 [INFO] 468 |                     &mut (*n).u.re.compiled
2025-04-23 06:47:18,044 [INFO] ...
2025-04-23 06:47:18,044 [INFO] 471 |                     &mut (*n).u.re.compiled
2025-04-23 06:47:18,044 [INFO] 472 ~                 },
2025-04-23 06:47:18,044 [INFO] |
2025-04-23 06:47:18,044 [INFO] 
2025-04-23 06:47:18,044 [INFO] warning: unnecessary parentheses around function argument
2025-04-23 06:47:18,044 [INFO] --> states/prims.rs:523:17
2025-04-23 06:47:18,045 [INFO] |
2025-04-23 06:47:18,045 [INFO] 523 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-23 06:47:18,045 [INFO] |                 ^
2025-04-23 06:47:18,045 [INFO] ...
2025-04-23 06:47:18,045 [INFO] 528 |                 }),
2025-04-23 06:47:18,045 [INFO] |                  ^
2025-04-23 06:47:18,045 [INFO] |
2025-04-23 06:47:18,045 [INFO] help: remove these parentheses
2025-04-23 06:47:18,045 [INFO] |
2025-04-23 06:47:18,045 [INFO] 523 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-23 06:47:18,046 [INFO] 524 |                     &mut (*n).u.re.compiled
2025-04-23 06:47:18,046 [INFO] ...
2025-04-23 06:47:18,047 [INFO] 527 |                     &mut (*n).u.re.compiled
2025-04-23 06:47:18,047 [INFO] 528 ~                 },
2025-04-23 06:47:18,047 [INFO] |
2025-04-23 06:47:18,047 [INFO] 
2025-04-23 06:47:18,647 [INFO] error[E0308]: mismatched types
2025-04-23 06:47:18,647 [INFO] --> compat/regex.rs:15755:9
2025-04-23 06:47:18,648 [INFO] |
2025-04-23 06:47:18,648 [INFO] 15753 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-23 06:47:18,648 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-23 06:47:18,648 [INFO] 15754 |         bufp,
2025-04-23 06:47:18,648 [INFO] 15755 |         0 as *mut libc::c_void,
2025-04-23 06:47:18,648 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-23 06:47:18,648 [INFO] |
2025-04-23 06:47:18,648 [INFO] = note: expected raw pointer `*const i8`
2025-04-23 06:47:18,648 [INFO] found raw pointer `*mut c_void`
2025-04-23 06:47:18,649 [INFO] note: function defined here
2025-04-23 06:47:18,649 [INFO] --> compat/regex.rs:15788:22
2025-04-23 06:47:18,649 [INFO] |
2025-04-23 06:47:18,649 [INFO] 15788 | unsafe extern "C" fn re_match_2_internal(
2025-04-23 06:47:18,649 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-23 06:47:18,650 [INFO] 15789 |     mut bufp: *mut re_pattern_buffer,
2025-04-23 06:47:18,650 [INFO] |     --------------------------------
2025-04-23 06:47:18,650 [INFO] 15790 |     mut string1: *const libc::c_char,
2025-04-23 06:47:18,650 [INFO] |     --------------------------------
2025-04-23 06:47:18,651 [INFO] 15791 |     mut size1: libc::c_int,
2025-04-23 06:47:18,651 [INFO] |     ----------------------
2025-04-23 06:47:18,651 [INFO] 15792 |     mut string2: *const libc::c_char,
2025-04-23 06:47:18,651 [INFO] |     --------------------------------
2025-04-23 06:47:18,652 [INFO] 15793 |     mut size2: libc::c_int,
2025-04-23 06:47:18,652 [INFO] |     ----------------------
2025-04-23 06:47:18,652 [INFO] 15794 |     mut pos: libc::c_int,
2025-04-23 06:47:18,652 [INFO] |     --------------------
2025-04-23 06:47:18,653 [INFO] 15795 |     mut regs: *mut re_registers,
2025-04-23 06:47:18,653 [INFO] |     ---------------------------
2025-04-23 06:47:18,653 [INFO] 15796 |     mut stop: libc::c_int,
2025-04-23 06:47:18,653 [INFO] |     ---------------------
2025-04-23 06:47:18,653 [INFO] 
2025-04-23 06:47:18,828 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-23 06:47:18,835 [INFO] warning: `c2rust_out` (lib) generated 24 warnings
2025-04-23 06:47:18,836 [INFO] error: could not compile `c2rust_out` due to previous error; 24 warnings emitted
2025-04-23 06:47:18,838 [ERROR] cargo build failed with code 101
2025-04-23 06:47:18,839 [INFO] Running: cargo build
2025-04-23 06:47:19,163 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-23 06:47:19,651 [INFO] warning: unused label
2025-04-23 06:47:19,652 [INFO] --> afmlib/afmparse.rs:1309:9
2025-04-23 06:47:19,652 [INFO] |
2025-04-23 06:47:19,652 [INFO] 1309 |         'c_3699: {
2025-04-23 06:47:19,652 [INFO] |         ^^^^^^^
2025-04-23 06:47:19,653 [INFO] |
2025-04-23 06:47:19,653 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-23 06:47:19,653 [INFO] 
2025-04-23 06:47:19,655 [INFO] warning: unused import: `::libc`
2025-04-23 06:47:19,656 [INFO] --> compat/getopt.rs:1:5
2025-04-23 06:47:19,656 [INFO] |
2025-04-23 06:47:19,656 [INFO] 1 | use ::libc;
2025-04-23 06:47:19,657 [INFO] |     ^^^^^^
2025-04-23 06:47:19,657 [INFO] |
2025-04-23 06:47:19,657 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-23 06:47:19,657 [INFO] 
2025-04-23 06:47:19,658 [INFO] warning: unused import: `::libc`
2025-04-23 06:47:19,658 [INFO] --> compat/getopt1.rs:1:5
2025-04-23 06:47:19,659 [INFO] |
2025-04-23 06:47:19,659 [INFO] 1 | use ::libc;
2025-04-23 06:47:19,659 [INFO] |     ^^^^^^
2025-04-23 06:47:19,660 [INFO] 
2025-04-23 06:47:19,661 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,662 [INFO] --> compat/regex.rs:15502:33
2025-04-23 06:47:19,662 [INFO] |
2025-04-23 06:47:19,663 [INFO] 15502 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,663 [INFO] |                       ^
2025-04-23 06:47:19,664 [INFO] ...
2025-04-23 06:47:19,665 [INFO] 15507 | ...                   })
2025-04-23 06:47:19,665 [INFO] |                        ^
2025-04-23 06:47:19,666 [INFO] |
2025-04-23 06:47:19,666 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-23 06:47:19,666 [INFO] help: remove these parentheses
2025-04-23 06:47:19,667 [INFO] |
2025-04-23 06:47:19,667 [INFO] 15502 ~                                 if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,667 [INFO] 15503 |                                     0 as libc::c_int
2025-04-23 06:47:19,668 [INFO] ...
2025-04-23 06:47:19,668 [INFO] 15506 |                                     1 as libc::c_int
2025-04-23 06:47:19,668 [INFO] 15507 ~                                 }
2025-04-23 06:47:19,669 [INFO] |
2025-04-23 06:47:19,669 [INFO] 
2025-04-23 06:47:19,669 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,670 [INFO] --> compat/regex.rs:16491:37
2025-04-23 06:47:19,670 [INFO] |
2025-04-23 06:47:19,670 [INFO] 16491 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,670 [INFO] |                       ^
2025-04-23 06:47:19,671 [INFO] ...
2025-04-23 06:47:19,671 [INFO] 16496 | ...                   })
2025-04-23 06:47:19,671 [INFO] |                        ^
2025-04-23 06:47:19,672 [INFO] |
2025-04-23 06:47:19,672 [INFO] help: remove these parentheses
2025-04-23 06:47:19,672 [INFO] |
2025-04-23 06:47:19,673 [INFO] 16491 ~                                     if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,673 [INFO] 16492 |                                         0 as libc::c_int
2025-04-23 06:47:19,673 [INFO] ...
2025-04-23 06:47:19,674 [INFO] 16495 |                                         1 as libc::c_int
2025-04-23 06:47:19,674 [INFO] 16496 ~                                     }
2025-04-23 06:47:19,674 [INFO] |
2025-04-23 06:47:19,675 [INFO] 
2025-04-23 06:47:19,675 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,675 [INFO] --> compat/regex.rs:16753:29
2025-04-23 06:47:19,676 [INFO] |
2025-04-23 06:47:19,676 [INFO] 16753 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,676 [INFO] |                       ^
2025-04-23 06:47:19,676 [INFO] ...
2025-04-23 06:47:19,677 [INFO] 16758 | ...                   })
2025-04-23 06:47:19,677 [INFO] |                        ^
2025-04-23 06:47:19,678 [INFO] |
2025-04-23 06:47:19,678 [INFO] help: remove these parentheses
2025-04-23 06:47:19,678 [INFO] |
2025-04-23 06:47:19,678 [INFO] 16753 ~                             if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,679 [INFO] 16754 |                                 0 as libc::c_int
2025-04-23 06:47:19,679 [INFO] ...
2025-04-23 06:47:19,679 [INFO] 16757 |                                 1 as libc::c_int
2025-04-23 06:47:19,680 [INFO] 16758 ~                             }
2025-04-23 06:47:19,681 [INFO] |
2025-04-23 06:47:19,682 [INFO] 
2025-04-23 06:47:19,682 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,683 [INFO] --> compat/regex.rs:17041:29
2025-04-23 06:47:19,683 [INFO] |
2025-04-23 06:47:19,683 [INFO] 17041 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,683 [INFO] |                       ^
2025-04-23 06:47:19,684 [INFO] ...
2025-04-23 06:47:19,684 [INFO] 17046 | ...                   })
2025-04-23 06:47:19,685 [INFO] |                        ^
2025-04-23 06:47:19,685 [INFO] |
2025-04-23 06:47:19,685 [INFO] help: remove these parentheses
2025-04-23 06:47:19,685 [INFO] |
2025-04-23 06:47:19,686 [INFO] 17041 ~                             if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,686 [INFO] 17042 |                                 0 as libc::c_int
2025-04-23 06:47:19,687 [INFO] ...
2025-04-23 06:47:19,687 [INFO] 17045 |                                 1 as libc::c_int
2025-04-23 06:47:19,687 [INFO] 17046 ~                             }
2025-04-23 06:47:19,688 [INFO] |
2025-04-23 06:47:19,688 [INFO] 
2025-04-23 06:47:19,688 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,688 [INFO] --> compat/regex.rs:17138:29
2025-04-23 06:47:19,689 [INFO] |
2025-04-23 06:47:19,689 [INFO] 17138 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,689 [INFO] |                       ^
2025-04-23 06:47:19,689 [INFO] ...
2025-04-23 06:47:19,690 [INFO] 17143 | ...                   })
2025-04-23 06:47:19,690 [INFO] |                        ^
2025-04-23 06:47:19,690 [INFO] |
2025-04-23 06:47:19,691 [INFO] help: remove these parentheses
2025-04-23 06:47:19,691 [INFO] |
2025-04-23 06:47:19,691 [INFO] 17138 ~                             if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,692 [INFO] 17139 |                                 0 as libc::c_int
2025-04-23 06:47:19,692 [INFO] ...
2025-04-23 06:47:19,692 [INFO] 17142 |                                 1 as libc::c_int
2025-04-23 06:47:19,692 [INFO] 17143 ~                             }
2025-04-23 06:47:19,693 [INFO] |
2025-04-23 06:47:19,693 [INFO] 
2025-04-23 06:47:19,694 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,694 [INFO] --> compat/regex.rs:17294:29
2025-04-23 06:47:19,694 [INFO] |
2025-04-23 06:47:19,695 [INFO] 17294 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,695 [INFO] |                       ^
2025-04-23 06:47:19,695 [INFO] ...
2025-04-23 06:47:19,696 [INFO] 17300 | ...                   })
2025-04-23 06:47:19,696 [INFO] |                        ^
2025-04-23 06:47:19,696 [INFO] |
2025-04-23 06:47:19,697 [INFO] help: remove these parentheses
2025-04-23 06:47:19,697 [INFO] |
2025-04-23 06:47:19,698 [INFO] 17294 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,698 [INFO] 17295 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,698 [INFO] ...
2025-04-23 06:47:19,698 [INFO] 17299 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,699 [INFO] 17300 ~                             }
2025-04-23 06:47:19,699 [INFO] |
2025-04-23 06:47:19,699 [INFO] 
2025-04-23 06:47:19,700 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,700 [INFO] --> compat/regex.rs:17306:29
2025-04-23 06:47:19,700 [INFO] |
2025-04-23 06:47:19,700 [INFO] 17306 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,701 [INFO] |                       ^
2025-04-23 06:47:19,701 [INFO] ...
2025-04-23 06:47:19,701 [INFO] 17310 | ...                   })
2025-04-23 06:47:19,702 [INFO] |                        ^
2025-04-23 06:47:19,702 [INFO] |
2025-04-23 06:47:19,702 [INFO] help: remove these parentheses
2025-04-23 06:47:19,703 [INFO] |
2025-04-23 06:47:19,703 [INFO] 17306 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,703 [INFO] 17307 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,704 [INFO] 17308 |                             } else {
2025-04-23 06:47:19,704 [INFO] 17309 |                                 *d as libc::c_int
2025-04-23 06:47:19,705 [INFO] 17310 ~                             }
2025-04-23 06:47:19,705 [INFO] |
2025-04-23 06:47:19,705 [INFO] 
2025-04-23 06:47:19,705 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,706 [INFO] --> compat/regex.rs:17333:29
2025-04-23 06:47:19,706 [INFO] |
2025-04-23 06:47:19,707 [INFO] 17333 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,707 [INFO] |                       ^
2025-04-23 06:47:19,707 [INFO] ...
2025-04-23 06:47:19,708 [INFO] 17339 | ...                   })
2025-04-23 06:47:19,708 [INFO] |                        ^
2025-04-23 06:47:19,708 [INFO] |
2025-04-23 06:47:19,708 [INFO] help: remove these parentheses
2025-04-23 06:47:19,708 [INFO] |
2025-04-23 06:47:19,709 [INFO] 17333 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,709 [INFO] 17334 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,709 [INFO] ...
2025-04-23 06:47:19,709 [INFO] 17338 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,710 [INFO] 17339 ~                             }
2025-04-23 06:47:19,710 [INFO] |
2025-04-23 06:47:19,710 [INFO] 
2025-04-23 06:47:19,711 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,711 [INFO] --> compat/regex.rs:17345:29
2025-04-23 06:47:19,711 [INFO] |
2025-04-23 06:47:19,711 [INFO] 17345 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,712 [INFO] |                       ^
2025-04-23 06:47:19,712 [INFO] ...
2025-04-23 06:47:19,712 [INFO] 17349 | ...                   })
2025-04-23 06:47:19,712 [INFO] |                        ^
2025-04-23 06:47:19,713 [INFO] |
2025-04-23 06:47:19,713 [INFO] help: remove these parentheses
2025-04-23 06:47:19,713 [INFO] |
2025-04-23 06:47:19,713 [INFO] 17345 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,714 [INFO] 17346 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,714 [INFO] 17347 |                             } else {
2025-04-23 06:47:19,714 [INFO] 17348 |                                 *d as libc::c_int
2025-04-23 06:47:19,715 [INFO] 17349 ~                             }
2025-04-23 06:47:19,715 [INFO] |
2025-04-23 06:47:19,715 [INFO] 
2025-04-23 06:47:19,715 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,716 [INFO] --> compat/regex.rs:17363:25
2025-04-23 06:47:19,717 [INFO] |
2025-04-23 06:47:19,718 [INFO] 17363 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,718 [INFO] |                         ^
2025-04-23 06:47:19,718 [INFO] ...
2025-04-23 06:47:19,718 [INFO] 17367 |                         })
2025-04-23 06:47:19,719 [INFO] |                          ^
2025-04-23 06:47:19,719 [INFO] |
2025-04-23 06:47:19,719 [INFO] help: remove these parentheses
2025-04-23 06:47:19,719 [INFO] |
2025-04-23 06:47:19,720 [INFO] 17363 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,720 [INFO] 17364 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,720 [INFO] 17365 |                         } else {
2025-04-23 06:47:19,720 [INFO] 17366 |                             *d as libc::c_int
2025-04-23 06:47:19,721 [INFO] 17367 ~                         }
2025-04-23 06:47:19,721 [INFO] |
2025-04-23 06:47:19,721 [INFO] 
2025-04-23 06:47:19,721 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,722 [INFO] --> compat/regex.rs:17376:33
2025-04-23 06:47:19,722 [INFO] |
2025-04-23 06:47:19,722 [INFO] 17376 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,722 [INFO] |                       ^
2025-04-23 06:47:19,723 [INFO] ...
2025-04-23 06:47:19,723 [INFO] 17382 | ...                   })
2025-04-23 06:47:19,723 [INFO] |                        ^
2025-04-23 06:47:19,723 [INFO] |
2025-04-23 06:47:19,723 [INFO] help: remove these parentheses
2025-04-23 06:47:19,724 [INFO] |
2025-04-23 06:47:19,724 [INFO] 17376 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,724 [INFO] 17377 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,724 [INFO] ...
2025-04-23 06:47:19,724 [INFO] 17381 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,725 [INFO] 17382 ~                                 }
2025-04-23 06:47:19,725 [INFO] |
2025-04-23 06:47:19,725 [INFO] 
2025-04-23 06:47:19,725 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,726 [INFO] --> compat/regex.rs:17397:29
2025-04-23 06:47:19,726 [INFO] |
2025-04-23 06:47:19,726 [INFO] 17397 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,726 [INFO] |                       ^
2025-04-23 06:47:19,727 [INFO] ...
2025-04-23 06:47:19,727 [INFO] 17403 | ...                   })
2025-04-23 06:47:19,727 [INFO] |                        ^
2025-04-23 06:47:19,727 [INFO] |
2025-04-23 06:47:19,728 [INFO] help: remove these parentheses
2025-04-23 06:47:19,728 [INFO] |
2025-04-23 06:47:19,728 [INFO] 17397 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,728 [INFO] 17398 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-23 06:47:19,728 [INFO] ...
2025-04-23 06:47:19,728 [INFO] 17402 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,729 [INFO] 17403 ~                             }
2025-04-23 06:47:19,729 [INFO] |
2025-04-23 06:47:19,729 [INFO] 
2025-04-23 06:47:19,729 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,730 [INFO] --> compat/regex.rs:17408:29
2025-04-23 06:47:19,730 [INFO] |
2025-04-23 06:47:19,731 [INFO] 17408 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,731 [INFO] |                       ^
2025-04-23 06:47:19,732 [INFO] ...
2025-04-23 06:47:19,732 [INFO] 17412 | ...                   })
2025-04-23 06:47:19,732 [INFO] |                        ^
2025-04-23 06:47:19,733 [INFO] |
2025-04-23 06:47:19,733 [INFO] help: remove these parentheses
2025-04-23 06:47:19,733 [INFO] |
2025-04-23 06:47:19,733 [INFO] 17408 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,733 [INFO] 17409 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,734 [INFO] 17410 |                             } else {
2025-04-23 06:47:19,734 [INFO] 17411 |                                 *d as libc::c_int
2025-04-23 06:47:19,734 [INFO] 17412 ~                             }
2025-04-23 06:47:19,734 [INFO] |
2025-04-23 06:47:19,735 [INFO] 
2025-04-23 06:47:19,735 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,735 [INFO] --> compat/regex.rs:17439:33
2025-04-23 06:47:19,735 [INFO] |
2025-04-23 06:47:19,735 [INFO] 17439 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,736 [INFO] |                       ^
2025-04-23 06:47:19,736 [INFO] ...
2025-04-23 06:47:19,736 [INFO] 17443 | ...                   })
2025-04-23 06:47:19,736 [INFO] |                        ^
2025-04-23 06:47:19,737 [INFO] |
2025-04-23 06:47:19,738 [INFO] help: remove these parentheses
2025-04-23 06:47:19,738 [INFO] |
2025-04-23 06:47:19,738 [INFO] 17439 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,738 [INFO] 17440 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,739 [INFO] 17441 |                                 } else {
2025-04-23 06:47:19,739 [INFO] 17442 |                                     *d as libc::c_int
2025-04-23 06:47:19,739 [INFO] 17443 ~                                 }
2025-04-23 06:47:19,739 [INFO] |
2025-04-23 06:47:19,740 [INFO] 
2025-04-23 06:47:19,740 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,740 [INFO] --> compat/regex.rs:17495:33
2025-04-23 06:47:19,741 [INFO] |
2025-04-23 06:47:19,741 [INFO] 17495 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,741 [INFO] |                       ^
2025-04-23 06:47:19,742 [INFO] ...
2025-04-23 06:47:19,742 [INFO] 17499 | ...                   })
2025-04-23 06:47:19,742 [INFO] |                        ^
2025-04-23 06:47:19,743 [INFO] |
2025-04-23 06:47:19,743 [INFO] help: remove these parentheses
2025-04-23 06:47:19,743 [INFO] |
2025-04-23 06:47:19,743 [INFO] 17495 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-23 06:47:19,744 [INFO] 17496 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-23 06:47:19,744 [INFO] 17497 |                                 } else {
2025-04-23 06:47:19,744 [INFO] 17498 |                                     *d as libc::c_int
2025-04-23 06:47:19,744 [INFO] 17499 ~                                 }
2025-04-23 06:47:19,745 [INFO] |
2025-04-23 06:47:19,745 [INFO] 
2025-04-23 06:47:19,745 [INFO] warning: unnecessary parentheses around block return value
2025-04-23 06:47:19,745 [INFO] --> compat/regex.rs:17661:37
2025-04-23 06:47:19,746 [INFO] |
2025-04-23 06:47:19,746 [INFO] 17661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,746 [INFO] |                       ^
2025-04-23 06:47:19,747 [INFO] ...
2025-04-23 06:47:19,747 [INFO] 17666 | ...                   })
2025-04-23 06:47:19,748 [INFO] |                        ^
2025-04-23 06:47:19,748 [INFO] |
2025-04-23 06:47:19,748 [INFO] help: remove these parentheses
2025-04-23 06:47:19,748 [INFO] |
2025-04-23 06:47:19,749 [INFO] 17661 ~                                     if (fail_stack.stack).is_null() {
2025-04-23 06:47:19,750 [INFO] 17662 |                                         0 as libc::c_int
2025-04-23 06:47:19,750 [INFO] ...
2025-04-23 06:47:19,750 [INFO] 17665 |                                         1 as libc::c_int
2025-04-23 06:47:19,750 [INFO] 17666 ~                                     }
2025-04-23 06:47:19,750 [INFO] |
2025-04-23 06:47:19,751 [INFO] 
2025-04-23 06:47:19,751 [INFO] warning: unnecessary parentheses around method argument
2025-04-23 06:47:19,752 [INFO] --> compat/regex.rs:18011:13
2025-04-23 06:47:19,752 [INFO] |
2025-04-23 06:47:19,753 [INFO] 18011 |             (if dend == end_match_1 {
2025-04-23 06:47:19,753 [INFO] |             ^
2025-04-23 06:47:19,753 [INFO] ...
2025-04-23 06:47:19,753 [INFO] 18015 |             }),
2025-04-23 06:47:19,754 [INFO] |              ^
2025-04-23 06:47:19,754 [INFO] |
2025-04-23 06:47:19,754 [INFO] help: remove these parentheses
2025-04-23 06:47:19,754 [INFO] |
2025-04-23 06:47:19,755 [INFO] 18011 ~             if dend == end_match_1 {
2025-04-23 06:47:19,755 [INFO] 18012 |                 string1
2025-04-23 06:47:19,756 [INFO] 18013 |             } else {
2025-04-23 06:47:19,756 [INFO] 18014 |                 string2.offset(-(size1 as isize))
2025-04-23 06:47:19,756 [INFO] 18015 ~             },
2025-04-23 06:47:19,756 [INFO] |
2025-04-23 06:47:19,756 [INFO] 
2025-04-23 06:47:19,757 [INFO] warning: unused label
2025-04-23 06:47:19,757 [INFO] --> src/psgen.rs:4554:5
2025-04-23 06:47:19,757 [INFO] |
2025-04-23 06:47:19,758 [INFO] 4554 |     'c_18653: {
2025-04-23 06:47:19,758 [INFO] |     ^^^^^^^^
2025-04-23 06:47:19,758 [INFO] 
2025-04-23 06:47:19,758 [INFO] warning: unused label
2025-04-23 06:47:19,759 [INFO] --> src/psgen.rs:4629:5
2025-04-23 06:47:19,759 [INFO] |
2025-04-23 06:47:19,759 [INFO] 4629 |     'c_8716: {
2025-04-23 06:47:19,759 [INFO] |     ^^^^^^^
2025-04-23 06:47:19,760 [INFO] 
2025-04-23 06:47:19,760 [INFO] warning: unnecessary parentheses around function argument
2025-04-23 06:47:19,760 [INFO] --> states/prims.rs:467:17
2025-04-23 06:47:19,760 [INFO] |
2025-04-23 06:47:19,761 [INFO] 467 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-23 06:47:19,761 [INFO] |                 ^
2025-04-23 06:47:19,761 [INFO] ...
2025-04-23 06:47:19,762 [INFO] 472 |                 }),
2025-04-23 06:47:19,762 [INFO] |                  ^
2025-04-23 06:47:19,763 [INFO] |
2025-04-23 06:47:19,763 [INFO] help: remove these parentheses
2025-04-23 06:47:19,763 [INFO] |
2025-04-23 06:47:19,763 [INFO] 467 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-23 06:47:19,764 [INFO] 468 |                     &mut (*n).u.re.compiled
2025-04-23 06:47:19,764 [INFO] ...
2025-04-23 06:47:19,764 [INFO] 471 |                     &mut (*n).u.re.compiled
2025-04-23 06:47:19,765 [INFO] 472 ~                 },
2025-04-23 06:47:19,765 [INFO] |
2025-04-23 06:47:19,765 [INFO] 
2025-04-23 06:47:19,765 [INFO] warning: unnecessary parentheses around function argument
2025-04-23 06:47:19,765 [INFO] --> states/prims.rs:523:17
2025-04-23 06:47:19,766 [INFO] |
2025-04-23 06:47:19,766 [INFO] 523 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-23 06:47:19,767 [INFO] |                 ^
2025-04-23 06:47:19,767 [INFO] ...
2025-04-23 06:47:19,767 [INFO] 528 |                 }),
2025-04-23 06:47:19,767 [INFO] |                  ^
2025-04-23 06:47:19,767 [INFO] |
2025-04-23 06:47:19,768 [INFO] help: remove these parentheses
2025-04-23 06:47:19,768 [INFO] |
2025-04-23 06:47:19,768 [INFO] 523 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-23 06:47:19,769 [INFO] 524 |                     &mut (*n).u.re.compiled
2025-04-23 06:47:19,769 [INFO] ...
2025-04-23 06:47:19,769 [INFO] 527 |                     &mut (*n).u.re.compiled
2025-04-23 06:47:19,769 [INFO] 528 ~                 },
2025-04-23 06:47:19,769 [INFO] |
2025-04-23 06:47:19,770 [INFO] 
2025-04-23 06:47:20,315 [INFO] error[E0308]: mismatched types
2025-04-23 06:47:20,316 [INFO] --> compat/regex.rs:15755:9
2025-04-23 06:47:20,316 [INFO] |
2025-04-23 06:47:20,316 [INFO] 15753 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-23 06:47:20,316 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-23 06:47:20,316 [INFO] 15754 |         bufp,
2025-04-23 06:47:20,316 [INFO] 15755 |         0 as *mut libc::c_void,
2025-04-23 06:47:20,316 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-23 06:47:20,316 [INFO] |
2025-04-23 06:47:20,317 [INFO] = note: expected raw pointer `*const i8`
2025-04-23 06:47:20,317 [INFO] found raw pointer `*mut c_void`
2025-04-23 06:47:20,317 [INFO] note: function defined here
2025-04-23 06:47:20,317 [INFO] --> compat/regex.rs:15788:22
2025-04-23 06:47:20,317 [INFO] |
2025-04-23 06:47:20,317 [INFO] 15788 | unsafe extern "C" fn re_match_2_internal(
2025-04-23 06:47:20,317 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-23 06:47:20,318 [INFO] 15789 |     mut bufp: *mut re_pattern_buffer,
2025-04-23 06:47:20,318 [INFO] |     --------------------------------
2025-04-23 06:47:20,318 [INFO] 15790 |     mut string1: *const libc::c_char,
2025-04-23 06:47:20,318 [INFO] |     --------------------------------
2025-04-23 06:47:20,318 [INFO] 15791 |     mut size1: libc::c_int,
2025-04-23 06:47:20,318 [INFO] |     ----------------------
2025-04-23 06:47:20,319 [INFO] 15792 |     mut string2: *const libc::c_char,
2025-04-23 06:47:20,319 [INFO] |     --------------------------------
2025-04-23 06:47:20,319 [INFO] 15793 |     mut size2: libc::c_int,
2025-04-23 06:47:20,319 [INFO] |     ----------------------
2025-04-23 06:47:20,319 [INFO] 15794 |     mut pos: libc::c_int,
2025-04-23 06:47:20,320 [INFO] |     --------------------
2025-04-23 06:47:20,320 [INFO] 15795 |     mut regs: *mut re_registers,
2025-04-23 06:47:20,320 [INFO] |     ---------------------------
2025-04-23 06:47:20,320 [INFO] 15796 |     mut stop: libc::c_int,
2025-04-23 06:47:20,320 [INFO] |     ---------------------
2025-04-23 06:47:20,321 [INFO] 
2025-04-23 06:47:20,469 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-23 06:47:20,476 [INFO] warning: `c2rust_out` (lib) generated 24 warnings
2025-04-23 06:47:20,476 [INFO] error: could not compile `c2rust_out` due to previous error; 24 warnings emitted
2025-04-23 06:47:20,478 [ERROR] cargo build failed with code 101
2025-04-24 04:47:09,630 [INFO] Running: c2rust transpile -e compile_commands.json
2025-04-24 04:47:14,523 [INFO] c2rust transpile succeeded
2025-04-24 04:47:14,525 [INFO] Running: cargo build
2025-04-24 04:47:14,807 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-24 04:47:15,613 [INFO] warning: unused label
2025-04-24 04:47:15,614 [INFO] --> afmlib/afmparse.rs:1309:9
2025-04-24 04:47:15,614 [INFO] |
2025-04-24 04:47:15,614 [INFO] 1309 |         'c_3699: {
2025-04-24 04:47:15,614 [INFO] |         ^^^^^^^
2025-04-24 04:47:15,614 [INFO] |
2025-04-24 04:47:15,614 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-24 04:47:15,614 [INFO] 
2025-04-24 04:47:15,617 [INFO] warning: unused import: `::libc`
2025-04-24 04:47:15,617 [INFO] --> compat/getopt.rs:1:5
2025-04-24 04:47:15,618 [INFO] |
2025-04-24 04:47:15,618 [INFO] 1 | use ::libc;
2025-04-24 04:47:15,618 [INFO] |     ^^^^^^
2025-04-24 04:47:15,618 [INFO] |
2025-04-24 04:47:15,618 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-24 04:47:15,618 [INFO] 
2025-04-24 04:47:15,618 [INFO] warning: unused import: `::libc`
2025-04-24 04:47:15,618 [INFO] --> compat/getopt1.rs:1:5
2025-04-24 04:47:15,619 [INFO] |
2025-04-24 04:47:15,619 [INFO] 1 | use ::libc;
2025-04-24 04:47:15,620 [INFO] |     ^^^^^^
2025-04-24 04:47:15,620 [INFO] 
2025-04-24 04:47:15,623 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,623 [INFO] --> compat/regex.rs:15502:33
2025-04-24 04:47:15,623 [INFO] |
2025-04-24 04:47:15,624 [INFO] 15502 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,624 [INFO] |                       ^
2025-04-24 04:47:15,624 [INFO] ...
2025-04-24 04:47:15,624 [INFO] 15507 | ...                   })
2025-04-24 04:47:15,624 [INFO] |                        ^
2025-04-24 04:47:15,624 [INFO] |
2025-04-24 04:47:15,624 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-24 04:47:15,625 [INFO] help: remove these parentheses
2025-04-24 04:47:15,625 [INFO] |
2025-04-24 04:47:15,625 [INFO] 15502 ~                                 if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,625 [INFO] 15503 |                                     0 as libc::c_int
2025-04-24 04:47:15,625 [INFO] ...
2025-04-24 04:47:15,625 [INFO] 15506 |                                     1 as libc::c_int
2025-04-24 04:47:15,625 [INFO] 15507 ~                                 }
2025-04-24 04:47:15,626 [INFO] |
2025-04-24 04:47:15,626 [INFO] 
2025-04-24 04:47:15,626 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,626 [INFO] --> compat/regex.rs:16491:37
2025-04-24 04:47:15,627 [INFO] |
2025-04-24 04:47:15,627 [INFO] 16491 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,627 [INFO] |                       ^
2025-04-24 04:47:15,627 [INFO] ...
2025-04-24 04:47:15,627 [INFO] 16496 | ...                   })
2025-04-24 04:47:15,627 [INFO] |                        ^
2025-04-24 04:47:15,627 [INFO] |
2025-04-24 04:47:15,629 [INFO] help: remove these parentheses
2025-04-24 04:47:15,629 [INFO] |
2025-04-24 04:47:15,629 [INFO] 16491 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,629 [INFO] 16492 |                                         0 as libc::c_int
2025-04-24 04:47:15,629 [INFO] ...
2025-04-24 04:47:15,629 [INFO] 16495 |                                         1 as libc::c_int
2025-04-24 04:47:15,629 [INFO] 16496 ~                                     }
2025-04-24 04:47:15,630 [INFO] |
2025-04-24 04:47:15,630 [INFO] 
2025-04-24 04:47:15,630 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,630 [INFO] --> compat/regex.rs:16753:29
2025-04-24 04:47:15,631 [INFO] |
2025-04-24 04:47:15,632 [INFO] 16753 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,632 [INFO] |                       ^
2025-04-24 04:47:15,632 [INFO] ...
2025-04-24 04:47:15,632 [INFO] 16758 | ...                   })
2025-04-24 04:47:15,632 [INFO] |                        ^
2025-04-24 04:47:15,632 [INFO] |
2025-04-24 04:47:15,633 [INFO] help: remove these parentheses
2025-04-24 04:47:15,633 [INFO] |
2025-04-24 04:47:15,633 [INFO] 16753 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,633 [INFO] 16754 |                                 0 as libc::c_int
2025-04-24 04:47:15,633 [INFO] ...
2025-04-24 04:47:15,633 [INFO] 16757 |                                 1 as libc::c_int
2025-04-24 04:47:15,633 [INFO] 16758 ~                             }
2025-04-24 04:47:15,634 [INFO] |
2025-04-24 04:47:15,634 [INFO] 
2025-04-24 04:47:15,634 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,634 [INFO] --> compat/regex.rs:17041:29
2025-04-24 04:47:15,634 [INFO] |
2025-04-24 04:47:15,635 [INFO] 17041 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,635 [INFO] |                       ^
2025-04-24 04:47:15,635 [INFO] ...
2025-04-24 04:47:15,635 [INFO] 17046 | ...                   })
2025-04-24 04:47:15,636 [INFO] |                        ^
2025-04-24 04:47:15,636 [INFO] |
2025-04-24 04:47:15,636 [INFO] help: remove these parentheses
2025-04-24 04:47:15,636 [INFO] |
2025-04-24 04:47:15,636 [INFO] 17041 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,636 [INFO] 17042 |                                 0 as libc::c_int
2025-04-24 04:47:15,637 [INFO] ...
2025-04-24 04:47:15,637 [INFO] 17045 |                                 1 as libc::c_int
2025-04-24 04:47:15,637 [INFO] 17046 ~                             }
2025-04-24 04:47:15,638 [INFO] |
2025-04-24 04:47:15,638 [INFO] 
2025-04-24 04:47:15,638 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,638 [INFO] --> compat/regex.rs:17138:29
2025-04-24 04:47:15,638 [INFO] |
2025-04-24 04:47:15,638 [INFO] 17138 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,638 [INFO] |                       ^
2025-04-24 04:47:15,639 [INFO] ...
2025-04-24 04:47:15,639 [INFO] 17143 | ...                   })
2025-04-24 04:47:15,640 [INFO] |                        ^
2025-04-24 04:47:15,640 [INFO] |
2025-04-24 04:47:15,640 [INFO] help: remove these parentheses
2025-04-24 04:47:15,640 [INFO] |
2025-04-24 04:47:15,640 [INFO] 17138 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,641 [INFO] 17139 |                                 0 as libc::c_int
2025-04-24 04:47:15,641 [INFO] ...
2025-04-24 04:47:15,641 [INFO] 17142 |                                 1 as libc::c_int
2025-04-24 04:47:15,641 [INFO] 17143 ~                             }
2025-04-24 04:47:15,641 [INFO] |
2025-04-24 04:47:15,641 [INFO] 
2025-04-24 04:47:15,641 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,641 [INFO] --> compat/regex.rs:17294:29
2025-04-24 04:47:15,642 [INFO] |
2025-04-24 04:47:15,642 [INFO] 17294 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,642 [INFO] |                       ^
2025-04-24 04:47:15,642 [INFO] ...
2025-04-24 04:47:15,642 [INFO] 17300 | ...                   })
2025-04-24 04:47:15,642 [INFO] |                        ^
2025-04-24 04:47:15,643 [INFO] |
2025-04-24 04:47:15,643 [INFO] help: remove these parentheses
2025-04-24 04:47:15,643 [INFO] |
2025-04-24 04:47:15,643 [INFO] 17294 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,643 [INFO] 17295 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,643 [INFO] ...
2025-04-24 04:47:15,643 [INFO] 17299 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,644 [INFO] 17300 ~                             }
2025-04-24 04:47:15,644 [INFO] |
2025-04-24 04:47:15,644 [INFO] 
2025-04-24 04:47:15,644 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,644 [INFO] --> compat/regex.rs:17306:29
2025-04-24 04:47:15,644 [INFO] |
2025-04-24 04:47:15,645 [INFO] 17306 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,645 [INFO] |                       ^
2025-04-24 04:47:15,645 [INFO] ...
2025-04-24 04:47:15,645 [INFO] 17310 | ...                   })
2025-04-24 04:47:15,645 [INFO] |                        ^
2025-04-24 04:47:15,646 [INFO] |
2025-04-24 04:47:15,646 [INFO] help: remove these parentheses
2025-04-24 04:47:15,646 [INFO] |
2025-04-24 04:47:15,646 [INFO] 17306 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,646 [INFO] 17307 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,646 [INFO] 17308 |                             } else {
2025-04-24 04:47:15,647 [INFO] 17309 |                                 *d as libc::c_int
2025-04-24 04:47:15,647 [INFO] 17310 ~                             }
2025-04-24 04:47:15,647 [INFO] |
2025-04-24 04:47:15,647 [INFO] 
2025-04-24 04:47:15,647 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,647 [INFO] --> compat/regex.rs:17333:29
2025-04-24 04:47:15,647 [INFO] |
2025-04-24 04:47:15,648 [INFO] 17333 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,648 [INFO] |                       ^
2025-04-24 04:47:15,648 [INFO] ...
2025-04-24 04:47:15,648 [INFO] 17339 | ...                   })
2025-04-24 04:47:15,648 [INFO] |                        ^
2025-04-24 04:47:15,648 [INFO] |
2025-04-24 04:47:15,649 [INFO] help: remove these parentheses
2025-04-24 04:47:15,649 [INFO] |
2025-04-24 04:47:15,649 [INFO] 17333 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,649 [INFO] 17334 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,649 [INFO] ...
2025-04-24 04:47:15,649 [INFO] 17338 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,650 [INFO] 17339 ~                             }
2025-04-24 04:47:15,650 [INFO] |
2025-04-24 04:47:15,650 [INFO] 
2025-04-24 04:47:15,650 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,650 [INFO] --> compat/regex.rs:17345:29
2025-04-24 04:47:15,650 [INFO] |
2025-04-24 04:47:15,651 [INFO] 17345 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,651 [INFO] |                       ^
2025-04-24 04:47:15,651 [INFO] ...
2025-04-24 04:47:15,651 [INFO] 17349 | ...                   })
2025-04-24 04:47:15,652 [INFO] |                        ^
2025-04-24 04:47:15,652 [INFO] |
2025-04-24 04:47:15,652 [INFO] help: remove these parentheses
2025-04-24 04:47:15,653 [INFO] |
2025-04-24 04:47:15,653 [INFO] 17345 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,653 [INFO] 17346 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,653 [INFO] 17347 |                             } else {
2025-04-24 04:47:15,653 [INFO] 17348 |                                 *d as libc::c_int
2025-04-24 04:47:15,653 [INFO] 17349 ~                             }
2025-04-24 04:47:15,654 [INFO] |
2025-04-24 04:47:15,654 [INFO] 
2025-04-24 04:47:15,654 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,654 [INFO] --> compat/regex.rs:17363:25
2025-04-24 04:47:15,655 [INFO] |
2025-04-24 04:47:15,655 [INFO] 17363 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,655 [INFO] |                         ^
2025-04-24 04:47:15,655 [INFO] ...
2025-04-24 04:47:15,655 [INFO] 17367 |                         })
2025-04-24 04:47:15,655 [INFO] |                          ^
2025-04-24 04:47:15,655 [INFO] |
2025-04-24 04:47:15,656 [INFO] help: remove these parentheses
2025-04-24 04:47:15,656 [INFO] |
2025-04-24 04:47:15,656 [INFO] 17363 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,656 [INFO] 17364 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,656 [INFO] 17365 |                         } else {
2025-04-24 04:47:15,657 [INFO] 17366 |                             *d as libc::c_int
2025-04-24 04:47:15,657 [INFO] 17367 ~                         }
2025-04-24 04:47:15,657 [INFO] |
2025-04-24 04:47:15,657 [INFO] 
2025-04-24 04:47:15,657 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,657 [INFO] --> compat/regex.rs:17376:33
2025-04-24 04:47:15,658 [INFO] |
2025-04-24 04:47:15,658 [INFO] 17376 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,658 [INFO] |                       ^
2025-04-24 04:47:15,658 [INFO] ...
2025-04-24 04:47:15,658 [INFO] 17382 | ...                   })
2025-04-24 04:47:15,658 [INFO] |                        ^
2025-04-24 04:47:15,658 [INFO] |
2025-04-24 04:47:15,658 [INFO] help: remove these parentheses
2025-04-24 04:47:15,658 [INFO] |
2025-04-24 04:47:15,659 [INFO] 17376 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,659 [INFO] 17377 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,659 [INFO] ...
2025-04-24 04:47:15,660 [INFO] 17381 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,660 [INFO] 17382 ~                                 }
2025-04-24 04:47:15,660 [INFO] |
2025-04-24 04:47:15,660 [INFO] 
2025-04-24 04:47:15,660 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,660 [INFO] --> compat/regex.rs:17397:29
2025-04-24 04:47:15,661 [INFO] |
2025-04-24 04:47:15,661 [INFO] 17397 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,661 [INFO] |                       ^
2025-04-24 04:47:15,661 [INFO] ...
2025-04-24 04:47:15,661 [INFO] 17403 | ...                   })
2025-04-24 04:47:15,661 [INFO] |                        ^
2025-04-24 04:47:15,662 [INFO] |
2025-04-24 04:47:15,662 [INFO] help: remove these parentheses
2025-04-24 04:47:15,662 [INFO] |
2025-04-24 04:47:15,662 [INFO] 17397 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,662 [INFO] 17398 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:15,662 [INFO] ...
2025-04-24 04:47:15,663 [INFO] 17402 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,663 [INFO] 17403 ~                             }
2025-04-24 04:47:15,663 [INFO] |
2025-04-24 04:47:15,663 [INFO] 
2025-04-24 04:47:15,663 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,663 [INFO] --> compat/regex.rs:17408:29
2025-04-24 04:47:15,664 [INFO] |
2025-04-24 04:47:15,664 [INFO] 17408 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,664 [INFO] |                       ^
2025-04-24 04:47:15,664 [INFO] ...
2025-04-24 04:47:15,665 [INFO] 17412 | ...                   })
2025-04-24 04:47:15,665 [INFO] |                        ^
2025-04-24 04:47:15,665 [INFO] |
2025-04-24 04:47:15,665 [INFO] help: remove these parentheses
2025-04-24 04:47:15,665 [INFO] |
2025-04-24 04:47:15,665 [INFO] 17408 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,665 [INFO] 17409 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,665 [INFO] 17410 |                             } else {
2025-04-24 04:47:15,666 [INFO] 17411 |                                 *d as libc::c_int
2025-04-24 04:47:15,666 [INFO] 17412 ~                             }
2025-04-24 04:47:15,666 [INFO] |
2025-04-24 04:47:15,666 [INFO] 
2025-04-24 04:47:15,666 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,667 [INFO] --> compat/regex.rs:17439:33
2025-04-24 04:47:15,667 [INFO] |
2025-04-24 04:47:15,667 [INFO] 17439 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,668 [INFO] |                       ^
2025-04-24 04:47:15,668 [INFO] ...
2025-04-24 04:47:15,668 [INFO] 17443 | ...                   })
2025-04-24 04:47:15,668 [INFO] |                        ^
2025-04-24 04:47:15,668 [INFO] |
2025-04-24 04:47:15,668 [INFO] help: remove these parentheses
2025-04-24 04:47:15,669 [INFO] |
2025-04-24 04:47:15,669 [INFO] 17439 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,669 [INFO] 17440 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,669 [INFO] 17441 |                                 } else {
2025-04-24 04:47:15,669 [INFO] 17442 |                                     *d as libc::c_int
2025-04-24 04:47:15,670 [INFO] 17443 ~                                 }
2025-04-24 04:47:15,670 [INFO] |
2025-04-24 04:47:15,670 [INFO] 
2025-04-24 04:47:15,670 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,671 [INFO] --> compat/regex.rs:17495:33
2025-04-24 04:47:15,671 [INFO] |
2025-04-24 04:47:15,671 [INFO] 17495 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,671 [INFO] |                       ^
2025-04-24 04:47:15,671 [INFO] ...
2025-04-24 04:47:15,671 [INFO] 17499 | ...                   })
2025-04-24 04:47:15,671 [INFO] |                        ^
2025-04-24 04:47:15,672 [INFO] |
2025-04-24 04:47:15,672 [INFO] help: remove these parentheses
2025-04-24 04:47:15,672 [INFO] |
2025-04-24 04:47:15,672 [INFO] 17495 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:15,672 [INFO] 17496 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:15,672 [INFO] 17497 |                                 } else {
2025-04-24 04:47:15,673 [INFO] 17498 |                                     *d as libc::c_int
2025-04-24 04:47:15,673 [INFO] 17499 ~                                 }
2025-04-24 04:47:15,673 [INFO] |
2025-04-24 04:47:15,673 [INFO] 
2025-04-24 04:47:15,673 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:15,673 [INFO] --> compat/regex.rs:17661:37
2025-04-24 04:47:15,673 [INFO] |
2025-04-24 04:47:15,673 [INFO] 17661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,674 [INFO] |                       ^
2025-04-24 04:47:15,674 [INFO] ...
2025-04-24 04:47:15,674 [INFO] 17666 | ...                   })
2025-04-24 04:47:15,674 [INFO] |                        ^
2025-04-24 04:47:15,674 [INFO] |
2025-04-24 04:47:15,674 [INFO] help: remove these parentheses
2025-04-24 04:47:15,675 [INFO] |
2025-04-24 04:47:15,675 [INFO] 17661 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:47:15,675 [INFO] 17662 |                                         0 as libc::c_int
2025-04-24 04:47:15,675 [INFO] ...
2025-04-24 04:47:15,676 [INFO] 17665 |                                         1 as libc::c_int
2025-04-24 04:47:15,676 [INFO] 17666 ~                                     }
2025-04-24 04:47:15,676 [INFO] |
2025-04-24 04:47:15,677 [INFO] 
2025-04-24 04:47:15,677 [INFO] warning: unnecessary parentheses around method argument
2025-04-24 04:47:15,677 [INFO] --> compat/regex.rs:18011:13
2025-04-24 04:47:15,677 [INFO] |
2025-04-24 04:47:15,677 [INFO] 18011 |             (if dend == end_match_1 {
2025-04-24 04:47:15,678 [INFO] |             ^
2025-04-24 04:47:15,678 [INFO] ...
2025-04-24 04:47:15,678 [INFO] 18015 |             }),
2025-04-24 04:47:15,678 [INFO] |              ^
2025-04-24 04:47:15,678 [INFO] |
2025-04-24 04:47:15,679 [INFO] help: remove these parentheses
2025-04-24 04:47:15,679 [INFO] |
2025-04-24 04:47:15,679 [INFO] 18011 ~             if dend == end_match_1 {
2025-04-24 04:47:15,680 [INFO] 18012 |                 string1
2025-04-24 04:47:15,680 [INFO] 18013 |             } else {
2025-04-24 04:47:15,680 [INFO] 18014 |                 string2.offset(-(size1 as isize))
2025-04-24 04:47:15,680 [INFO] 18015 ~             },
2025-04-24 04:47:15,680 [INFO] |
2025-04-24 04:47:15,680 [INFO] 
2025-04-24 04:47:15,681 [INFO] warning: unused label
2025-04-24 04:47:15,681 [INFO] --> src/psgen.rs:4554:5
2025-04-24 04:47:15,681 [INFO] |
2025-04-24 04:47:15,681 [INFO] 4554 |     'c_18653: {
2025-04-24 04:47:15,681 [INFO] |     ^^^^^^^^
2025-04-24 04:47:15,681 [INFO] 
2025-04-24 04:47:15,681 [INFO] warning: unused label
2025-04-24 04:47:15,682 [INFO] --> src/psgen.rs:4629:5
2025-04-24 04:47:15,682 [INFO] |
2025-04-24 04:47:15,682 [INFO] 4629 |     'c_8716: {
2025-04-24 04:47:15,682 [INFO] |     ^^^^^^^
2025-04-24 04:47:15,682 [INFO] 
2025-04-24 04:47:15,682 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:47:15,683 [INFO] --> states/prims.rs:467:17
2025-04-24 04:47:15,683 [INFO] |
2025-04-24 04:47:15,683 [INFO] 467 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:47:15,683 [INFO] |                 ^
2025-04-24 04:47:15,683 [INFO] ...
2025-04-24 04:47:15,683 [INFO] 472 |                 }),
2025-04-24 04:47:15,683 [INFO] |                  ^
2025-04-24 04:47:15,683 [INFO] |
2025-04-24 04:47:15,684 [INFO] help: remove these parentheses
2025-04-24 04:47:15,684 [INFO] |
2025-04-24 04:47:15,684 [INFO] 467 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:47:15,684 [INFO] 468 |                     &mut (*n).u.re.compiled
2025-04-24 04:47:15,685 [INFO] ...
2025-04-24 04:47:15,685 [INFO] 471 |                     &mut (*n).u.re.compiled
2025-04-24 04:47:15,685 [INFO] 472 ~                 },
2025-04-24 04:47:15,685 [INFO] |
2025-04-24 04:47:15,685 [INFO] 
2025-04-24 04:47:15,686 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:47:15,686 [INFO] --> states/prims.rs:523:17
2025-04-24 04:47:15,686 [INFO] |
2025-04-24 04:47:15,686 [INFO] 523 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:47:15,686 [INFO] |                 ^
2025-04-24 04:47:15,686 [INFO] ...
2025-04-24 04:47:15,686 [INFO] 528 |                 }),
2025-04-24 04:47:15,686 [INFO] |                  ^
2025-04-24 04:47:15,687 [INFO] |
2025-04-24 04:47:15,687 [INFO] help: remove these parentheses
2025-04-24 04:47:15,687 [INFO] |
2025-04-24 04:47:15,687 [INFO] 523 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:47:15,687 [INFO] 524 |                     &mut (*n).u.re.compiled
2025-04-24 04:47:15,687 [INFO] ...
2025-04-24 04:47:15,688 [INFO] 527 |                     &mut (*n).u.re.compiled
2025-04-24 04:47:15,688 [INFO] 528 ~                 },
2025-04-24 04:47:15,688 [INFO] |
2025-04-24 04:47:15,688 [INFO] 
2025-04-24 04:47:16,353 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:16,353 [INFO] --> compat/regex.rs:15755:9
2025-04-24 04:47:16,353 [INFO] |
2025-04-24 04:47:16,353 [INFO] 15753 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-24 04:47:16,353 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-24 04:47:16,353 [INFO] 15754 |         bufp,
2025-04-24 04:47:16,353 [INFO] 15755 |         0 as *mut libc::c_void,
2025-04-24 04:47:16,354 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-24 04:47:16,354 [INFO] |
2025-04-24 04:47:16,354 [INFO] = note: expected raw pointer `*const i8`
2025-04-24 04:47:16,354 [INFO] found raw pointer `*mut c_void`
2025-04-24 04:47:16,354 [INFO] note: function defined here
2025-04-24 04:47:16,354 [INFO] --> compat/regex.rs:15788:22
2025-04-24 04:47:16,354 [INFO] |
2025-04-24 04:47:16,355 [INFO] 15788 | unsafe extern "C" fn re_match_2_internal(
2025-04-24 04:47:16,355 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:16,355 [INFO] 15789 |     mut bufp: *mut re_pattern_buffer,
2025-04-24 04:47:16,355 [INFO] |     --------------------------------
2025-04-24 04:47:16,355 [INFO] 15790 |     mut string1: *const libc::c_char,
2025-04-24 04:47:16,355 [INFO] |     --------------------------------
2025-04-24 04:47:16,355 [INFO] 15791 |     mut size1: libc::c_int,
2025-04-24 04:47:16,356 [INFO] |     ----------------------
2025-04-24 04:47:16,356 [INFO] 15792 |     mut string2: *const libc::c_char,
2025-04-24 04:47:16,356 [INFO] |     --------------------------------
2025-04-24 04:47:16,356 [INFO] 15793 |     mut size2: libc::c_int,
2025-04-24 04:47:16,356 [INFO] |     ----------------------
2025-04-24 04:47:16,356 [INFO] 15794 |     mut pos: libc::c_int,
2025-04-24 04:47:16,356 [INFO] |     --------------------
2025-04-24 04:47:16,357 [INFO] 15795 |     mut regs: *mut re_registers,
2025-04-24 04:47:16,357 [INFO] |     ---------------------------
2025-04-24 04:47:16,357 [INFO] 15796 |     mut stop: libc::c_int,
2025-04-24 04:47:16,357 [INFO] |     ---------------------
2025-04-24 04:47:16,357 [INFO] 
2025-04-24 04:47:16,575 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-24 04:47:16,581 [INFO] warning: `c2rust_out` (lib) generated 24 warnings
2025-04-24 04:47:16,581 [INFO] error: could not compile `c2rust_out` due to previous error; 24 warnings emitted
2025-04-24 04:47:16,584 [ERROR] cargo build failed with code 101
2025-04-24 04:47:16,594 [INFO] Running: cargo build
2025-04-24 04:47:16,858 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-24 04:47:17,349 [INFO] warning: unused label
2025-04-24 04:47:17,349 [INFO] --> afmlib/afmparse.rs:1620:9
2025-04-24 04:47:17,349 [INFO] |
2025-04-24 04:47:17,350 [INFO] 1620 |         'c_3699: {
2025-04-24 04:47:17,350 [INFO] |         ^^^^^^^
2025-04-24 04:47:17,350 [INFO] |
2025-04-24 04:47:17,350 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-24 04:47:17,350 [INFO] 
2025-04-24 04:47:17,352 [INFO] warning: unused import: `::libc`
2025-04-24 04:47:17,353 [INFO] --> compat/getopt.rs:1:5
2025-04-24 04:47:17,353 [INFO] |
2025-04-24 04:47:17,353 [INFO] 1 | use ::libc;
2025-04-24 04:47:17,353 [INFO] |     ^^^^^^
2025-04-24 04:47:17,354 [INFO] |
2025-04-24 04:47:17,354 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-24 04:47:17,354 [INFO] 
2025-04-24 04:47:17,354 [INFO] warning: unused import: `::libc`
2025-04-24 04:47:17,355 [INFO] --> compat/getopt1.rs:1:5
2025-04-24 04:47:17,355 [INFO] |
2025-04-24 04:47:17,355 [INFO] 1 | use ::libc;
2025-04-24 04:47:17,356 [INFO] |     ^^^^^^
2025-04-24 04:47:17,356 [INFO] 
2025-04-24 04:47:17,357 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,358 [INFO] --> compat/regex.rs:15755:33
2025-04-24 04:47:17,358 [INFO] |
2025-04-24 04:47:17,358 [INFO] 15755 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,359 [INFO] |                       ^
2025-04-24 04:47:17,359 [INFO] ...
2025-04-24 04:47:17,359 [INFO] 15760 | ...                   })
2025-04-24 04:47:17,360 [INFO] |                        ^
2025-04-24 04:47:17,360 [INFO] |
2025-04-24 04:47:17,361 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-24 04:47:17,361 [INFO] help: remove these parentheses
2025-04-24 04:47:17,362 [INFO] |
2025-04-24 04:47:17,362 [INFO] 15755 ~                                 if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,362 [INFO] 15756 |                                     0 as libc::c_int
2025-04-24 04:47:17,363 [INFO] ...
2025-04-24 04:47:17,363 [INFO] 15759 |                                     1 as libc::c_int
2025-04-24 04:47:17,363 [INFO] 15760 ~                                 }
2025-04-24 04:47:17,363 [INFO] |
2025-04-24 04:47:17,364 [INFO] 
2025-04-24 04:47:17,364 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,364 [INFO] --> compat/regex.rs:16750:37
2025-04-24 04:47:17,365 [INFO] |
2025-04-24 04:47:17,365 [INFO] 16750 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,365 [INFO] |                       ^
2025-04-24 04:47:17,366 [INFO] ...
2025-04-24 04:47:17,366 [INFO] 16755 | ...                   })
2025-04-24 04:47:17,366 [INFO] |                        ^
2025-04-24 04:47:17,366 [INFO] |
2025-04-24 04:47:17,366 [INFO] help: remove these parentheses
2025-04-24 04:47:17,367 [INFO] |
2025-04-24 04:47:17,367 [INFO] 16750 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,367 [INFO] 16751 |                                         0 as libc::c_int
2025-04-24 04:47:17,367 [INFO] ...
2025-04-24 04:47:17,367 [INFO] 16754 |                                         1 as libc::c_int
2025-04-24 04:47:17,368 [INFO] 16755 ~                                     }
2025-04-24 04:47:17,368 [INFO] |
2025-04-24 04:47:17,368 [INFO] 
2025-04-24 04:47:17,369 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,369 [INFO] --> compat/regex.rs:17011:29
2025-04-24 04:47:17,369 [INFO] |
2025-04-24 04:47:17,369 [INFO] 17011 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,369 [INFO] |                       ^
2025-04-24 04:47:17,370 [INFO] ...
2025-04-24 04:47:17,370 [INFO] 17016 | ...                   })
2025-04-24 04:47:17,370 [INFO] |                        ^
2025-04-24 04:47:17,370 [INFO] |
2025-04-24 04:47:17,371 [INFO] help: remove these parentheses
2025-04-24 04:47:17,371 [INFO] |
2025-04-24 04:47:17,371 [INFO] 17011 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,371 [INFO] 17012 |                                 0 as libc::c_int
2025-04-24 04:47:17,373 [INFO] ...
2025-04-24 04:47:17,373 [INFO] 17015 |                                 1 as libc::c_int
2025-04-24 04:47:17,373 [INFO] 17016 ~                             }
2025-04-24 04:47:17,373 [INFO] |
2025-04-24 04:47:17,373 [INFO] 
2025-04-24 04:47:17,374 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,375 [INFO] --> compat/regex.rs:17298:29
2025-04-24 04:47:17,375 [INFO] |
2025-04-24 04:47:17,375 [INFO] 17298 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,376 [INFO] |                       ^
2025-04-24 04:47:17,376 [INFO] ...
2025-04-24 04:47:17,376 [INFO] 17303 | ...                   })
2025-04-24 04:47:17,376 [INFO] |                        ^
2025-04-24 04:47:17,376 [INFO] |
2025-04-24 04:47:17,377 [INFO] help: remove these parentheses
2025-04-24 04:47:17,378 [INFO] |
2025-04-24 04:47:17,378 [INFO] 17298 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,378 [INFO] 17299 |                                 0 as libc::c_int
2025-04-24 04:47:17,378 [INFO] ...
2025-04-24 04:47:17,378 [INFO] 17302 |                                 1 as libc::c_int
2025-04-24 04:47:17,378 [INFO] 17303 ~                             }
2025-04-24 04:47:17,379 [INFO] |
2025-04-24 04:47:17,379 [INFO] 
2025-04-24 04:47:17,379 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,380 [INFO] --> compat/regex.rs:17394:29
2025-04-24 04:47:17,380 [INFO] |
2025-04-24 04:47:17,380 [INFO] 17394 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,381 [INFO] |                       ^
2025-04-24 04:47:17,381 [INFO] ...
2025-04-24 04:47:17,381 [INFO] 17399 | ...                   })
2025-04-24 04:47:17,381 [INFO] |                        ^
2025-04-24 04:47:17,381 [INFO] |
2025-04-24 04:47:17,381 [INFO] help: remove these parentheses
2025-04-24 04:47:17,382 [INFO] |
2025-04-24 04:47:17,382 [INFO] 17394 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,382 [INFO] 17395 |                                 0 as libc::c_int
2025-04-24 04:47:17,382 [INFO] ...
2025-04-24 04:47:17,382 [INFO] 17398 |                                 1 as libc::c_int
2025-04-24 04:47:17,382 [INFO] 17399 ~                             }
2025-04-24 04:47:17,383 [INFO] |
2025-04-24 04:47:17,383 [INFO] 
2025-04-24 04:47:17,383 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,383 [INFO] --> compat/regex.rs:17535:29
2025-04-24 04:47:17,383 [INFO] |
2025-04-24 04:47:17,384 [INFO] 17535 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,384 [INFO] |                       ^
2025-04-24 04:47:17,384 [INFO] ...
2025-04-24 04:47:17,384 [INFO] 17541 | ...                   })
2025-04-24 04:47:17,384 [INFO] |                        ^
2025-04-24 04:47:17,385 [INFO] |
2025-04-24 04:47:17,385 [INFO] help: remove these parentheses
2025-04-24 04:47:17,385 [INFO] |
2025-04-24 04:47:17,386 [INFO] 17535 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,386 [INFO] 17536 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,386 [INFO] ...
2025-04-24 04:47:17,386 [INFO] 17540 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,386 [INFO] 17541 ~                             }
2025-04-24 04:47:17,386 [INFO] |
2025-04-24 04:47:17,387 [INFO] 
2025-04-24 04:47:17,387 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,387 [INFO] --> compat/regex.rs:17547:29
2025-04-24 04:47:17,387 [INFO] |
2025-04-24 04:47:17,387 [INFO] 17547 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,388 [INFO] |                       ^
2025-04-24 04:47:17,388 [INFO] ...
2025-04-24 04:47:17,388 [INFO] 17551 | ...                   })
2025-04-24 04:47:17,389 [INFO] |                        ^
2025-04-24 04:47:17,389 [INFO] |
2025-04-24 04:47:17,389 [INFO] help: remove these parentheses
2025-04-24 04:47:17,390 [INFO] |
2025-04-24 04:47:17,390 [INFO] 17547 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,390 [INFO] 17548 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,391 [INFO] 17549 |                             } else {
2025-04-24 04:47:17,393 [INFO] 17550 |                                 *d as libc::c_int
2025-04-24 04:47:17,393 [INFO] 17551 ~                             }
2025-04-24 04:47:17,393 [INFO] |
2025-04-24 04:47:17,393 [INFO] 
2025-04-24 04:47:17,393 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,394 [INFO] --> compat/regex.rs:17574:29
2025-04-24 04:47:17,394 [INFO] |
2025-04-24 04:47:17,394 [INFO] 17574 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,395 [INFO] |                       ^
2025-04-24 04:47:17,395 [INFO] ...
2025-04-24 04:47:17,395 [INFO] 17580 | ...                   })
2025-04-24 04:47:17,395 [INFO] |                        ^
2025-04-24 04:47:17,396 [INFO] |
2025-04-24 04:47:17,396 [INFO] help: remove these parentheses
2025-04-24 04:47:17,396 [INFO] |
2025-04-24 04:47:17,396 [INFO] 17574 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,396 [INFO] 17575 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,397 [INFO] ...
2025-04-24 04:47:17,397 [INFO] 17579 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,397 [INFO] 17580 ~                             }
2025-04-24 04:47:17,397 [INFO] |
2025-04-24 04:47:17,397 [INFO] 
2025-04-24 04:47:17,398 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,398 [INFO] --> compat/regex.rs:17586:29
2025-04-24 04:47:17,398 [INFO] |
2025-04-24 04:47:17,399 [INFO] 17586 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,399 [INFO] |                       ^
2025-04-24 04:47:17,399 [INFO] ...
2025-04-24 04:47:17,399 [INFO] 17590 | ...                   })
2025-04-24 04:47:17,400 [INFO] |                        ^
2025-04-24 04:47:17,400 [INFO] |
2025-04-24 04:47:17,401 [INFO] help: remove these parentheses
2025-04-24 04:47:17,401 [INFO] |
2025-04-24 04:47:17,401 [INFO] 17586 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,401 [INFO] 17587 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,401 [INFO] 17588 |                             } else {
2025-04-24 04:47:17,402 [INFO] 17589 |                                 *d as libc::c_int
2025-04-24 04:47:17,402 [INFO] 17590 ~                             }
2025-04-24 04:47:17,402 [INFO] |
2025-04-24 04:47:17,402 [INFO] 
2025-04-24 04:47:17,402 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,403 [INFO] --> compat/regex.rs:17604:25
2025-04-24 04:47:17,403 [INFO] |
2025-04-24 04:47:17,403 [INFO] 17604 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,403 [INFO] |                         ^
2025-04-24 04:47:17,403 [INFO] ...
2025-04-24 04:47:17,404 [INFO] 17608 |                         })
2025-04-24 04:47:17,404 [INFO] |                          ^
2025-04-24 04:47:17,404 [INFO] |
2025-04-24 04:47:17,404 [INFO] help: remove these parentheses
2025-04-24 04:47:17,405 [INFO] |
2025-04-24 04:47:17,405 [INFO] 17604 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,405 [INFO] 17605 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,406 [INFO] 17606 |                         } else {
2025-04-24 04:47:17,406 [INFO] 17607 |                             *d as libc::c_int
2025-04-24 04:47:17,406 [INFO] 17608 ~                         }
2025-04-24 04:47:17,406 [INFO] |
2025-04-24 04:47:17,406 [INFO] 
2025-04-24 04:47:17,407 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,407 [INFO] --> compat/regex.rs:17617:33
2025-04-24 04:47:17,407 [INFO] |
2025-04-24 04:47:17,407 [INFO] 17617 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,408 [INFO] |                       ^
2025-04-24 04:47:17,408 [INFO] ...
2025-04-24 04:47:17,408 [INFO] 17623 | ...                   })
2025-04-24 04:47:17,409 [INFO] |                        ^
2025-04-24 04:47:17,409 [INFO] |
2025-04-24 04:47:17,409 [INFO] help: remove these parentheses
2025-04-24 04:47:17,410 [INFO] |
2025-04-24 04:47:17,410 [INFO] 17617 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,410 [INFO] 17618 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,410 [INFO] ...
2025-04-24 04:47:17,411 [INFO] 17622 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,411 [INFO] 17623 ~                                 }
2025-04-24 04:47:17,411 [INFO] |
2025-04-24 04:47:17,411 [INFO] 
2025-04-24 04:47:17,412 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,412 [INFO] --> compat/regex.rs:17638:29
2025-04-24 04:47:17,412 [INFO] |
2025-04-24 04:47:17,413 [INFO] 17638 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,413 [INFO] |                       ^
2025-04-24 04:47:17,413 [INFO] ...
2025-04-24 04:47:17,413 [INFO] 17644 | ...                   })
2025-04-24 04:47:17,414 [INFO] |                        ^
2025-04-24 04:47:17,414 [INFO] |
2025-04-24 04:47:17,414 [INFO] help: remove these parentheses
2025-04-24 04:47:17,414 [INFO] |
2025-04-24 04:47:17,415 [INFO] 17638 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,415 [INFO] 17639 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:47:17,415 [INFO] ...
2025-04-24 04:47:17,416 [INFO] 17643 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,416 [INFO] 17644 ~                             }
2025-04-24 04:47:17,416 [INFO] |
2025-04-24 04:47:17,416 [INFO] 
2025-04-24 04:47:17,416 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,417 [INFO] --> compat/regex.rs:17649:29
2025-04-24 04:47:17,417 [INFO] |
2025-04-24 04:47:17,417 [INFO] 17649 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,418 [INFO] |                       ^
2025-04-24 04:47:17,418 [INFO] ...
2025-04-24 04:47:17,418 [INFO] 17653 | ...                   })
2025-04-24 04:47:17,418 [INFO] |                        ^
2025-04-24 04:47:17,418 [INFO] |
2025-04-24 04:47:17,419 [INFO] help: remove these parentheses
2025-04-24 04:47:17,419 [INFO] |
2025-04-24 04:47:17,419 [INFO] 17649 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,420 [INFO] 17650 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,420 [INFO] 17651 |                             } else {
2025-04-24 04:47:17,420 [INFO] 17652 |                                 *d as libc::c_int
2025-04-24 04:47:17,420 [INFO] 17653 ~                             }
2025-04-24 04:47:17,420 [INFO] |
2025-04-24 04:47:17,421 [INFO] 
2025-04-24 04:47:17,421 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,421 [INFO] --> compat/regex.rs:17680:33
2025-04-24 04:47:17,421 [INFO] |
2025-04-24 04:47:17,422 [INFO] 17680 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,422 [INFO] |                       ^
2025-04-24 04:47:17,422 [INFO] ...
2025-04-24 04:47:17,422 [INFO] 17684 | ...                   })
2025-04-24 04:47:17,422 [INFO] |                        ^
2025-04-24 04:47:17,422 [INFO] |
2025-04-24 04:47:17,423 [INFO] help: remove these parentheses
2025-04-24 04:47:17,423 [INFO] |
2025-04-24 04:47:17,423 [INFO] 17680 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,423 [INFO] 17681 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,423 [INFO] 17682 |                                 } else {
2025-04-24 04:47:17,424 [INFO] 17683 |                                     *d as libc::c_int
2025-04-24 04:47:17,424 [INFO] 17684 ~                                 }
2025-04-24 04:47:17,425 [INFO] |
2025-04-24 04:47:17,425 [INFO] 
2025-04-24 04:47:17,425 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,425 [INFO] --> compat/regex.rs:17736:33
2025-04-24 04:47:17,425 [INFO] |
2025-04-24 04:47:17,425 [INFO] 17736 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,425 [INFO] |                       ^
2025-04-24 04:47:17,426 [INFO] ...
2025-04-24 04:47:17,426 [INFO] 17740 | ...                   })
2025-04-24 04:47:17,426 [INFO] |                        ^
2025-04-24 04:47:17,426 [INFO] |
2025-04-24 04:47:17,426 [INFO] help: remove these parentheses
2025-04-24 04:47:17,426 [INFO] |
2025-04-24 04:47:17,427 [INFO] 17736 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:47:17,427 [INFO] 17737 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:47:17,427 [INFO] 17738 |                                 } else {
2025-04-24 04:47:17,427 [INFO] 17739 |                                     *d as libc::c_int
2025-04-24 04:47:17,428 [INFO] 17740 ~                                 }
2025-04-24 04:47:17,428 [INFO] |
2025-04-24 04:47:17,428 [INFO] 
2025-04-24 04:47:17,428 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:47:17,428 [INFO] --> compat/regex.rs:17902:37
2025-04-24 04:47:17,428 [INFO] |
2025-04-24 04:47:17,428 [INFO] 17902 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,429 [INFO] |                       ^
2025-04-24 04:47:17,429 [INFO] ...
2025-04-24 04:47:17,429 [INFO] 17907 | ...                   })
2025-04-24 04:47:17,429 [INFO] |                        ^
2025-04-24 04:47:17,429 [INFO] |
2025-04-24 04:47:17,430 [INFO] help: remove these parentheses
2025-04-24 04:47:17,430 [INFO] |
2025-04-24 04:47:17,430 [INFO] 17902 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:47:17,430 [INFO] 17903 |                                         0 as libc::c_int
2025-04-24 04:47:17,430 [INFO] ...
2025-04-24 04:47:17,431 [INFO] 17906 |                                         1 as libc::c_int
2025-04-24 04:47:17,431 [INFO] 17907 ~                                     }
2025-04-24 04:47:17,431 [INFO] |
2025-04-24 04:47:17,431 [INFO] 
2025-04-24 04:47:17,431 [INFO] warning: unnecessary parentheses around method argument
2025-04-24 04:47:17,432 [INFO] --> compat/regex.rs:18239:13
2025-04-24 04:47:17,432 [INFO] |
2025-04-24 04:47:17,433 [INFO] 18239 |             (if dend == end_match_1 {
2025-04-24 04:47:17,433 [INFO] |             ^
2025-04-24 04:47:17,433 [INFO] ...
2025-04-24 04:47:17,433 [INFO] 18243 |             }),
2025-04-24 04:47:17,433 [INFO] |              ^
2025-04-24 04:47:17,434 [INFO] |
2025-04-24 04:47:17,434 [INFO] help: remove these parentheses
2025-04-24 04:47:17,434 [INFO] |
2025-04-24 04:47:17,435 [INFO] 18239 ~             if dend == end_match_1 {
2025-04-24 04:47:17,435 [INFO] 18240 |                 string1
2025-04-24 04:47:17,435 [INFO] 18241 |             } else {
2025-04-24 04:47:17,435 [INFO] 18242 |                 string2.offset(-(size1 as isize))
2025-04-24 04:47:17,435 [INFO] 18243 ~             },
2025-04-24 04:47:17,436 [INFO] |
2025-04-24 04:47:17,436 [INFO] 
2025-04-24 04:47:17,436 [INFO] warning: unused label
2025-04-24 04:47:17,436 [INFO] --> src/psgen.rs:5277:5
2025-04-24 04:47:17,437 [INFO] |
2025-04-24 04:47:17,437 [INFO] 5277 |     'c_18653: {
2025-04-24 04:47:17,437 [INFO] |     ^^^^^^^^
2025-04-24 04:47:17,437 [INFO] 
2025-04-24 04:47:17,438 [INFO] warning: unused label
2025-04-24 04:47:17,438 [INFO] --> src/psgen.rs:5352:5
2025-04-24 04:47:17,438 [INFO] |
2025-04-24 04:47:17,439 [INFO] 5352 |     'c_8716: {
2025-04-24 04:47:17,439 [INFO] |     ^^^^^^^
2025-04-24 04:47:17,439 [INFO] 
2025-04-24 04:47:17,439 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:47:17,440 [INFO] --> states/prims.rs:691:17
2025-04-24 04:47:17,440 [INFO] |
2025-04-24 04:47:17,441 [INFO] 691 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:47:17,441 [INFO] |                 ^
2025-04-24 04:47:17,441 [INFO] ...
2025-04-24 04:47:17,441 [INFO] 696 |                 }),
2025-04-24 04:47:17,441 [INFO] |                  ^
2025-04-24 04:47:17,441 [INFO] |
2025-04-24 04:47:17,442 [INFO] help: remove these parentheses
2025-04-24 04:47:17,442 [INFO] |
2025-04-24 04:47:17,442 [INFO] 691 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:47:17,442 [INFO] 692 |                     &mut (*n).u.re.compiled
2025-04-24 04:47:17,442 [INFO] ...
2025-04-24 04:47:17,443 [INFO] 695 |                     &mut (*n).u.re.compiled
2025-04-24 04:47:17,443 [INFO] 696 ~                 },
2025-04-24 04:47:17,443 [INFO] |
2025-04-24 04:47:17,443 [INFO] 
2025-04-24 04:47:17,443 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:47:17,444 [INFO] --> states/prims.rs:747:17
2025-04-24 04:47:17,444 [INFO] |
2025-04-24 04:47:17,444 [INFO] 747 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:47:17,444 [INFO] |                 ^
2025-04-24 04:47:17,444 [INFO] ...
2025-04-24 04:47:17,445 [INFO] 752 |                 }),
2025-04-24 04:47:17,445 [INFO] |                  ^
2025-04-24 04:47:17,445 [INFO] |
2025-04-24 04:47:17,446 [INFO] help: remove these parentheses
2025-04-24 04:47:17,446 [INFO] |
2025-04-24 04:47:17,446 [INFO] 747 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:47:17,446 [INFO] 748 |                     &mut (*n).u.re.compiled
2025-04-24 04:47:17,446 [INFO] ...
2025-04-24 04:47:17,447 [INFO] 751 |                     &mut (*n).u.re.compiled
2025-04-24 04:47:17,447 [INFO] 752 ~                 },
2025-04-24 04:47:17,447 [INFO] |
2025-04-24 04:47:17,447 [INFO] 
2025-04-24 04:47:17,598 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,598 [INFO] --> afmlib/afm.rs:10:1
2025-04-24 04:47:17,598 [INFO] |
2025-04-24 04:47:17,598 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:47:17,598 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,598 [INFO] |
2025-04-24 04:47:17,599 [INFO] = note: `#[warn(unused_attributes)]` on by default
2025-04-24 04:47:17,599 [INFO] 
2025-04-24 04:47:17,599 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,599 [INFO] --> afmlib/afmparse.rs:10:1
2025-04-24 04:47:17,599 [INFO] |
2025-04-24 04:47:17,600 [INFO] 10 | #![feature(extern_types, label_break_value)]
2025-04-24 04:47:17,600 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,600 [INFO] 
2025-04-24 04:47:17,600 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,600 [INFO] --> afmlib/deffont.rs:10:1
2025-04-24 04:47:17,600 [INFO] |
2025-04-24 04:47:17,600 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:47:17,600 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,601 [INFO] 
2025-04-24 04:47:17,627 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,627 [INFO] --> src/main.rs:10:1
2025-04-24 04:47:17,627 [INFO] |
2025-04-24 04:47:17,627 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:47:17,627 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,627 [INFO] 
2025-04-24 04:47:17,628 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,628 [INFO] --> src/psgen.rs:10:1
2025-04-24 04:47:17,628 [INFO] |
2025-04-24 04:47:17,628 [INFO] 10 | #![feature(extern_types, label_break_value)]
2025-04-24 04:47:17,628 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,629 [INFO] 
2025-04-24 04:47:17,629 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,629 [INFO] --> src/util.rs:10:1
2025-04-24 04:47:17,629 [INFO] |
2025-04-24 04:47:17,629 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:47:17,629 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,629 [INFO] 
2025-04-24 04:47:17,640 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,640 [INFO] --> states/prims.rs:10:1
2025-04-24 04:47:17,640 [INFO] |
2025-04-24 04:47:17,640 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:47:17,640 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,641 [INFO] 
2025-04-24 04:47:17,641 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,641 [INFO] --> states/process.rs:10:1
2025-04-24 04:47:17,641 [INFO] |
2025-04-24 04:47:17,641 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:47:17,642 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,642 [INFO] 
2025-04-24 04:47:17,642 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:47:17,642 [INFO] --> states/utils.rs:10:1
2025-04-24 04:47:17,642 [INFO] |
2025-04-24 04:47:17,642 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:47:17,643 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:17,643 [INFO] 
2025-04-24 04:47:18,110 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,110 [INFO] --> compat/regex.rs:15332:15
2025-04-24 04:47:18,110 [INFO] |
2025-04-24 04:47:18,110 [INFO] 15332 |     store_op1(op as libc::c_uint, loc, arg);
2025-04-24 04:47:18,111 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-24 04:47:18,111 [INFO] |     |
2025-04-24 04:47:18,111 [INFO] |     arguments to this function are incorrect
2025-04-24 04:47:18,111 [INFO] |
2025-04-24 04:47:18,111 [INFO] note: function defined here
2025-04-24 04:47:18,111 [INFO] --> compat/regex.rs:15292:22
2025-04-24 04:47:18,111 [INFO] |
2025-04-24 04:47:18,112 [INFO] 15292 | unsafe extern "C" fn store_op1(
2025-04-24 04:47:18,112 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,112 [INFO] 15293 |     mut op: re_opcode_t,
2025-04-24 04:47:18,112 [INFO] |     -------------------
2025-04-24 04:47:18,112 [INFO] 15294 |     mut loc: *mut libc::c_uchar,
2025-04-24 04:47:18,112 [INFO] |     ---------------------------
2025-04-24 04:47:18,113 [INFO] 15295 |     mut arg: libc::c_int,
2025-04-24 04:47:18,113 [INFO] |     --------------------
2025-04-24 04:47:18,113 [INFO] 
2025-04-24 04:47:18,122 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,122 [INFO] --> compat/regex.rs:15348:15
2025-04-24 04:47:18,122 [INFO] |
2025-04-24 04:47:18,122 [INFO] 15348 |     store_op2(op as libc::c_uint, loc, arg1, arg2);
2025-04-24 04:47:18,123 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-24 04:47:18,123 [INFO] |     |
2025-04-24 04:47:18,123 [INFO] |     arguments to this function are incorrect
2025-04-24 04:47:18,123 [INFO] |
2025-04-24 04:47:18,123 [INFO] note: function defined here
2025-04-24 04:47:18,124 [INFO] --> compat/regex.rs:15303:22
2025-04-24 04:47:18,124 [INFO] |
2025-04-24 04:47:18,124 [INFO] 15303 | unsafe extern "C" fn store_op2(
2025-04-24 04:47:18,124 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,124 [INFO] 15304 |     mut op: re_opcode_t,
2025-04-24 04:47:18,124 [INFO] |     -------------------
2025-04-24 04:47:18,125 [INFO] 15305 |     mut loc: *mut libc::c_uchar,
2025-04-24 04:47:18,125 [INFO] |     ---------------------------
2025-04-24 04:47:18,126 [INFO] 15306 |     mut arg1: libc::c_int,
2025-04-24 04:47:18,126 [INFO] |     ---------------------
2025-04-24 04:47:18,126 [INFO] 15307 |     mut arg2: libc::c_int,
2025-04-24 04:47:18,126 [INFO] |     ---------------------
2025-04-24 04:47:18,126 [INFO] 
2025-04-24 04:47:18,144 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,144 [INFO] --> compat/regex.rs:16009:9
2025-04-24 04:47:18,145 [INFO] |
2025-04-24 04:47:18,145 [INFO] 16007 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-24 04:47:18,145 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-24 04:47:18,145 [INFO] 16008 |         bufp,
2025-04-24 04:47:18,146 [INFO] 16009 |         0 as *mut libc::c_void,
2025-04-24 04:47:18,146 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-24 04:47:18,146 [INFO] |
2025-04-24 04:47:18,146 [INFO] = note: expected raw pointer `*const i8`
2025-04-24 04:47:18,146 [INFO] found raw pointer `*mut c_void`
2025-04-24 04:47:18,146 [INFO] note: function defined here
2025-04-24 04:47:18,146 [INFO] --> compat/regex.rs:16042:22
2025-04-24 04:47:18,146 [INFO] |
2025-04-24 04:47:18,147 [INFO] 16042 | unsafe extern "C" fn re_match_2_internal(
2025-04-24 04:47:18,147 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-24 04:47:18,147 [INFO] 16043 |     mut bufp: *mut re_pattern_buffer,
2025-04-24 04:47:18,147 [INFO] |     --------------------------------
2025-04-24 04:47:18,148 [INFO] 16044 |     mut string1: *const libc::c_char,
2025-04-24 04:47:18,148 [INFO] |     --------------------------------
2025-04-24 04:47:18,148 [INFO] 16045 |     mut size1: libc::c_int,
2025-04-24 04:47:18,149 [INFO] |     ----------------------
2025-04-24 04:47:18,149 [INFO] 16046 |     mut string2: *const libc::c_char,
2025-04-24 04:47:18,149 [INFO] |     --------------------------------
2025-04-24 04:47:18,150 [INFO] 16047 |     mut size2: libc::c_int,
2025-04-24 04:47:18,150 [INFO] |     ----------------------
2025-04-24 04:47:18,151 [INFO] 16048 |     mut pos: libc::c_int,
2025-04-24 04:47:18,151 [INFO] |     --------------------
2025-04-24 04:47:18,151 [INFO] 16049 |     mut regs: *mut re_registers,
2025-04-24 04:47:18,152 [INFO] |     ---------------------------
2025-04-24 04:47:18,152 [INFO] 16050 |     mut stop: libc::c_int,
2025-04-24 04:47:18,153 [INFO] |     ---------------------
2025-04-24 04:47:18,153 [INFO] 
2025-04-24 04:47:18,328 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,329 [INFO] --> states/prims.rs:849:9
2025-04-24 04:47:18,329 [INFO] |
2025-04-24 04:47:18,329 [INFO] 847 |     n = match_arg(
2025-04-24 04:47:18,329 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:47:18,329 [INFO] 848 |         prim_name,
2025-04-24 04:47:18,329 [INFO] 849 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,329 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,329 [INFO] |
2025-04-24 04:47:18,330 [INFO] note: function defined here
2025-04-24 04:47:18,330 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,330 [INFO] |
2025-04-24 04:47:18,330 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,330 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,330 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,330 [INFO] |     --------------------------------
2025-04-24 04:47:18,330 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:47:18,330 [INFO] |     --------------------
2025-04-24 04:47:18,330 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,331 [INFO] |     ----------------------------
2025-04-24 04:47:18,331 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:47:18,331 [INFO] |     -------------------------
2025-04-24 04:47:18,331 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,331 [INFO] |     -------------------------
2025-04-24 04:47:18,331 [INFO] 
2025-04-24 04:47:18,341 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,341 [INFO] --> states/prims.rs:916:9
2025-04-24 04:47:18,341 [INFO] |
2025-04-24 04:47:18,341 [INFO] 914 |     var = match_arg(
2025-04-24 04:47:18,341 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,341 [INFO] 915 |         prim_name,
2025-04-24 04:47:18,341 [INFO] 916 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,341 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,342 [INFO] |
2025-04-24 04:47:18,342 [INFO] note: function defined here
2025-04-24 04:47:18,342 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,342 [INFO] |
2025-04-24 04:47:18,342 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,342 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,342 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,342 [INFO] |     --------------------------------
2025-04-24 04:47:18,342 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:47:18,342 [INFO] |     --------------------
2025-04-24 04:47:18,343 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,343 [INFO] |     ----------------------------
2025-04-24 04:47:18,343 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:47:18,343 [INFO] |     -------------------------
2025-04-24 04:47:18,343 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,343 [INFO] |     -------------------------
2025-04-24 04:47:18,343 [INFO] 
2025-04-24 04:47:18,351 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,351 [INFO] --> states/prims.rs:969:9
2025-04-24 04:47:18,351 [INFO] |
2025-04-24 04:47:18,352 [INFO] 967 |     n = match_arg(
2025-04-24 04:47:18,352 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:47:18,352 [INFO] 968 |         prim_name,
2025-04-24 04:47:18,352 [INFO] 969 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,352 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,352 [INFO] |
2025-04-24 04:47:18,353 [INFO] note: function defined here
2025-04-24 04:47:18,353 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,353 [INFO] |
2025-04-24 04:47:18,353 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,353 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,353 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,353 [INFO] |     --------------------------------
2025-04-24 04:47:18,353 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:47:18,354 [INFO] |     --------------------
2025-04-24 04:47:18,354 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,354 [INFO] |     ----------------------------
2025-04-24 04:47:18,354 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:47:18,354 [INFO] |     -------------------------
2025-04-24 04:47:18,354 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,354 [INFO] |     -------------------------
2025-04-24 04:47:18,354 [INFO] 
2025-04-24 04:47:18,363 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,363 [INFO] --> states/prims.rs:1147:9
2025-04-24 04:47:18,363 [INFO] |
2025-04-24 04:47:18,363 [INFO] 1145 |     s = match_arg(
2025-04-24 04:47:18,364 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:47:18,364 [INFO] 1146 |         prim_name,
2025-04-24 04:47:18,364 [INFO] 1147 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,364 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,364 [INFO] |
2025-04-24 04:47:18,364 [INFO] note: function defined here
2025-04-24 04:47:18,365 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,365 [INFO] |
2025-04-24 04:47:18,366 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,366 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,366 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,366 [INFO] |     --------------------------------
2025-04-24 04:47:18,366 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,367 [INFO] |     --------------------
2025-04-24 04:47:18,368 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,368 [INFO] |     ----------------------------
2025-04-24 04:47:18,368 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,368 [INFO] |     -------------------------
2025-04-24 04:47:18,369 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,369 [INFO] |     -------------------------
2025-04-24 04:47:18,370 [INFO] 
2025-04-24 04:47:18,377 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,377 [INFO] --> states/prims.rs:1334:9
2025-04-24 04:47:18,377 [INFO] |
2025-04-24 04:47:18,377 [INFO] 1332 |     start = match_arg(
2025-04-24 04:47:18,378 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:47:18,378 [INFO] 1333 |         prim_name,
2025-04-24 04:47:18,378 [INFO] 1334 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,379 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,379 [INFO] |
2025-04-24 04:47:18,379 [INFO] note: function defined here
2025-04-24 04:47:18,380 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,380 [INFO] |
2025-04-24 04:47:18,380 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,381 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,381 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,381 [INFO] |     --------------------------------
2025-04-24 04:47:18,382 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,382 [INFO] |     --------------------
2025-04-24 04:47:18,382 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,383 [INFO] |     ----------------------------
2025-04-24 04:47:18,383 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,384 [INFO] |     -------------------------
2025-04-24 04:47:18,384 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,384 [INFO] |     -------------------------
2025-04-24 04:47:18,385 [INFO] 
2025-04-24 04:47:18,390 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,390 [INFO] --> states/prims.rs:1341:9
2025-04-24 04:47:18,391 [INFO] |
2025-04-24 04:47:18,391 [INFO] 1339 |     end = match_arg(
2025-04-24 04:47:18,391 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,392 [INFO] 1340 |         prim_name,
2025-04-24 04:47:18,392 [INFO] 1341 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,392 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,392 [INFO] |
2025-04-24 04:47:18,392 [INFO] note: function defined here
2025-04-24 04:47:18,392 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,393 [INFO] |
2025-04-24 04:47:18,393 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,393 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,394 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,394 [INFO] |     --------------------------------
2025-04-24 04:47:18,394 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,394 [INFO] |     --------------------
2025-04-24 04:47:18,395 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,395 [INFO] |     ----------------------------
2025-04-24 04:47:18,395 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,395 [INFO] |     -------------------------
2025-04-24 04:47:18,396 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,397 [INFO] |     -------------------------
2025-04-24 04:47:18,397 [INFO] 
2025-04-24 04:47:18,405 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,405 [INFO] --> states/prims.rs:1468:9
2025-04-24 04:47:18,406 [INFO] |
2025-04-24 04:47:18,406 [INFO] 1466 |     str = match_arg(
2025-04-24 04:47:18,406 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,406 [INFO] 1467 |         prim_name,
2025-04-24 04:47:18,406 [INFO] 1468 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,407 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,407 [INFO] |
2025-04-24 04:47:18,407 [INFO] note: function defined here
2025-04-24 04:47:18,407 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,408 [INFO] |
2025-04-24 04:47:18,408 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,409 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,409 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,409 [INFO] |     --------------------------------
2025-04-24 04:47:18,410 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,410 [INFO] |     --------------------
2025-04-24 04:47:18,410 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,410 [INFO] |     ----------------------------
2025-04-24 04:47:18,411 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,411 [INFO] |     -------------------------
2025-04-24 04:47:18,412 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,413 [INFO] |     -------------------------
2025-04-24 04:47:18,413 [INFO] 
2025-04-24 04:47:18,420 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,421 [INFO] --> states/prims.rs:1512:9
2025-04-24 04:47:18,422 [INFO] |
2025-04-24 04:47:18,422 [INFO] 1510 |     ch = match_arg(
2025-04-24 04:47:18,422 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,423 [INFO] 1511 |         prim_name,
2025-04-24 04:47:18,423 [INFO] 1512 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,423 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,424 [INFO] |
2025-04-24 04:47:18,424 [INFO] note: function defined here
2025-04-24 04:47:18,424 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,425 [INFO] |
2025-04-24 04:47:18,425 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,425 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,426 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,426 [INFO] |     --------------------------------
2025-04-24 04:47:18,427 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,427 [INFO] |     --------------------
2025-04-24 04:47:18,427 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,427 [INFO] |     ----------------------------
2025-04-24 04:47:18,428 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,428 [INFO] |     -------------------------
2025-04-24 04:47:18,429 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,429 [INFO] |     -------------------------
2025-04-24 04:47:18,429 [INFO] 
2025-04-24 04:47:18,435 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,435 [INFO] --> states/prims.rs:1519:9
2025-04-24 04:47:18,435 [INFO] |
2025-04-24 04:47:18,436 [INFO] 1517 |     st = match_arg(
2025-04-24 04:47:18,436 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,436 [INFO] 1518 |         prim_name,
2025-04-24 04:47:18,436 [INFO] 1519 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,437 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,437 [INFO] |
2025-04-24 04:47:18,437 [INFO] note: function defined here
2025-04-24 04:47:18,438 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,438 [INFO] |
2025-04-24 04:47:18,438 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,438 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,439 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,439 [INFO] |     --------------------------------
2025-04-24 04:47:18,439 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,440 [INFO] |     --------------------
2025-04-24 04:47:18,440 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,441 [INFO] |     ----------------------------
2025-04-24 04:47:18,441 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,441 [INFO] |     -------------------------
2025-04-24 04:47:18,442 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,442 [INFO] |     -------------------------
2025-04-24 04:47:18,442 [INFO] 
2025-04-24 04:47:18,448 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,449 [INFO] --> states/prims.rs:1580:9
2025-04-24 04:47:18,449 [INFO] |
2025-04-24 04:47:18,449 [INFO] 1578 |     str = match_arg(
2025-04-24 04:47:18,450 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,450 [INFO] 1579 |         prim_name,
2025-04-24 04:47:18,450 [INFO] 1580 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,450 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,450 [INFO] |
2025-04-24 04:47:18,450 [INFO] note: function defined here
2025-04-24 04:47:18,451 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,452 [INFO] |
2025-04-24 04:47:18,452 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,452 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,453 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,453 [INFO] |     --------------------------------
2025-04-24 04:47:18,454 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,454 [INFO] |     --------------------
2025-04-24 04:47:18,454 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,454 [INFO] |     ----------------------------
2025-04-24 04:47:18,454 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,456 [INFO] |     -------------------------
2025-04-24 04:47:18,456 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,456 [INFO] |     -------------------------
2025-04-24 04:47:18,456 [INFO] 
2025-04-24 04:47:18,470 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,470 [INFO] --> states/prims.rs:1587:9
2025-04-24 04:47:18,471 [INFO] |
2025-04-24 04:47:18,471 [INFO] 1585 |     re = match_arg(
2025-04-24 04:47:18,471 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,471 [INFO] 1586 |         prim_name,
2025-04-24 04:47:18,472 [INFO] 1587 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,472 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,472 [INFO] |
2025-04-24 04:47:18,473 [INFO] note: function defined here
2025-04-24 04:47:18,473 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,473 [INFO] |
2025-04-24 04:47:18,473 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,474 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,474 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,474 [INFO] |     --------------------------------
2025-04-24 04:47:18,475 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,475 [INFO] |     --------------------
2025-04-24 04:47:18,475 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,475 [INFO] |     ----------------------------
2025-04-24 04:47:18,476 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,476 [INFO] |     -------------------------
2025-04-24 04:47:18,477 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,477 [INFO] |     -------------------------
2025-04-24 04:47:18,477 [INFO] 
2025-04-24 04:47:18,486 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,487 [INFO] --> states/prims.rs:1919:9
2025-04-24 04:47:18,487 [INFO] |
2025-04-24 04:47:18,487 [INFO] 1917 |     str = match_arg(
2025-04-24 04:47:18,487 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,488 [INFO] 1918 |         prim_name,
2025-04-24 04:47:18,488 [INFO] 1919 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,488 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,488 [INFO] |
2025-04-24 04:47:18,489 [INFO] note: function defined here
2025-04-24 04:47:18,489 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,489 [INFO] |
2025-04-24 04:47:18,489 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,489 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,490 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,490 [INFO] |     --------------------------------
2025-04-24 04:47:18,490 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,491 [INFO] |     --------------------
2025-04-24 04:47:18,491 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,491 [INFO] |     ----------------------------
2025-04-24 04:47:18,492 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,492 [INFO] |     -------------------------
2025-04-24 04:47:18,492 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,493 [INFO] |     -------------------------
2025-04-24 04:47:18,493 [INFO] 
2025-04-24 04:47:18,500 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,501 [INFO] --> states/prims.rs:1926:9
2025-04-24 04:47:18,501 [INFO] |
2025-04-24 04:47:18,501 [INFO] 1924 |     re = match_arg(
2025-04-24 04:47:18,501 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,501 [INFO] 1925 |         prim_name,
2025-04-24 04:47:18,502 [INFO] 1926 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,502 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,503 [INFO] |
2025-04-24 04:47:18,503 [INFO] note: function defined here
2025-04-24 04:47:18,503 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,503 [INFO] |
2025-04-24 04:47:18,504 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,504 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,504 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,504 [INFO] |     --------------------------------
2025-04-24 04:47:18,505 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,505 [INFO] |     --------------------
2025-04-24 04:47:18,505 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,506 [INFO] |     ----------------------------
2025-04-24 04:47:18,506 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,506 [INFO] |     -------------------------
2025-04-24 04:47:18,506 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,507 [INFO] |     -------------------------
2025-04-24 04:47:18,507 [INFO] 
2025-04-24 04:47:18,514 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,514 [INFO] --> states/prims.rs:1933:9
2025-04-24 04:47:18,514 [INFO] |
2025-04-24 04:47:18,515 [INFO] 1931 |     subst = match_arg(
2025-04-24 04:47:18,515 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:47:18,516 [INFO] 1932 |         prim_name,
2025-04-24 04:47:18,516 [INFO] 1933 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,516 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,516 [INFO] |
2025-04-24 04:47:18,517 [INFO] note: function defined here
2025-04-24 04:47:18,518 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,518 [INFO] |
2025-04-24 04:47:18,518 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,518 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,518 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,519 [INFO] |     --------------------------------
2025-04-24 04:47:18,520 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,520 [INFO] |     --------------------
2025-04-24 04:47:18,520 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,521 [INFO] |     ----------------------------
2025-04-24 04:47:18,521 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,521 [INFO] |     -------------------------
2025-04-24 04:47:18,522 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,522 [INFO] |     -------------------------
2025-04-24 04:47:18,522 [INFO] 
2025-04-24 04:47:18,529 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,529 [INFO] --> states/prims.rs:1966:9
2025-04-24 04:47:18,529 [INFO] |
2025-04-24 04:47:18,529 [INFO] 1964 |     str = match_arg(
2025-04-24 04:47:18,530 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,530 [INFO] 1965 |         prim_name,
2025-04-24 04:47:18,530 [INFO] 1966 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,530 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,530 [INFO] |
2025-04-24 04:47:18,531 [INFO] note: function defined here
2025-04-24 04:47:18,531 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,531 [INFO] |
2025-04-24 04:47:18,531 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,532 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,532 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,532 [INFO] |     --------------------------------
2025-04-24 04:47:18,532 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,533 [INFO] |     --------------------
2025-04-24 04:47:18,533 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,534 [INFO] |     ----------------------------
2025-04-24 04:47:18,534 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,534 [INFO] |     -------------------------
2025-04-24 04:47:18,535 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,536 [INFO] |     -------------------------
2025-04-24 04:47:18,536 [INFO] 
2025-04-24 04:47:18,541 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,541 [INFO] --> states/prims.rs:1973:9
2025-04-24 04:47:18,541 [INFO] |
2025-04-24 04:47:18,542 [INFO] 1971 |     re = match_arg(
2025-04-24 04:47:18,542 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,542 [INFO] 1972 |         prim_name,
2025-04-24 04:47:18,543 [INFO] 1973 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,543 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,543 [INFO] |
2025-04-24 04:47:18,543 [INFO] note: function defined here
2025-04-24 04:47:18,543 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,543 [INFO] |
2025-04-24 04:47:18,544 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,544 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,545 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,545 [INFO] |     --------------------------------
2025-04-24 04:47:18,545 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,545 [INFO] |     --------------------
2025-04-24 04:47:18,546 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,546 [INFO] |     ----------------------------
2025-04-24 04:47:18,546 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,546 [INFO] |     -------------------------
2025-04-24 04:47:18,547 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,547 [INFO] |     -------------------------
2025-04-24 04:47:18,547 [INFO] 
2025-04-24 04:47:18,552 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,553 [INFO] --> states/prims.rs:1980:9
2025-04-24 04:47:18,553 [INFO] |
2025-04-24 04:47:18,553 [INFO] 1978 |     subst = match_arg(
2025-04-24 04:47:18,553 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:47:18,553 [INFO] 1979 |         prim_name,
2025-04-24 04:47:18,554 [INFO] 1980 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,554 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,555 [INFO] |
2025-04-24 04:47:18,555 [INFO] note: function defined here
2025-04-24 04:47:18,555 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,556 [INFO] |
2025-04-24 04:47:18,556 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,556 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,556 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,557 [INFO] |     --------------------------------
2025-04-24 04:47:18,557 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,557 [INFO] |     --------------------
2025-04-24 04:47:18,558 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,558 [INFO] |     ----------------------------
2025-04-24 04:47:18,558 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,558 [INFO] |     -------------------------
2025-04-24 04:47:18,559 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,559 [INFO] |     -------------------------
2025-04-24 04:47:18,559 [INFO] 
2025-04-24 04:47:18,569 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,570 [INFO] --> states/prims.rs:2016:9
2025-04-24 04:47:18,570 [INFO] |
2025-04-24 04:47:18,570 [INFO] 2014 |     re = match_arg(
2025-04-24 04:47:18,570 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,570 [INFO] 2015 |         prim_name,
2025-04-24 04:47:18,570 [INFO] 2016 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,571 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,571 [INFO] |
2025-04-24 04:47:18,571 [INFO] note: function defined here
2025-04-24 04:47:18,571 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,571 [INFO] |
2025-04-24 04:47:18,572 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,572 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,572 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,572 [INFO] |     --------------------------------
2025-04-24 04:47:18,573 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,573 [INFO] |     --------------------
2025-04-24 04:47:18,573 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,573 [INFO] |     ----------------------------
2025-04-24 04:47:18,574 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,574 [INFO] |     -------------------------
2025-04-24 04:47:18,574 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,574 [INFO] |     -------------------------
2025-04-24 04:47:18,574 [INFO] 
2025-04-24 04:47:18,586 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,587 [INFO] --> states/prims.rs:2023:9
2025-04-24 04:47:18,587 [INFO] |
2025-04-24 04:47:18,587 [INFO] 2021 |     str = match_arg(
2025-04-24 04:47:18,587 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,587 [INFO] 2022 |         prim_name,
2025-04-24 04:47:18,588 [INFO] 2023 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,588 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,588 [INFO] |
2025-04-24 04:47:18,588 [INFO] note: function defined here
2025-04-24 04:47:18,589 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,589 [INFO] |
2025-04-24 04:47:18,589 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,589 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,589 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,589 [INFO] |     --------------------------------
2025-04-24 04:47:18,590 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,590 [INFO] |     --------------------
2025-04-24 04:47:18,590 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,590 [INFO] |     ----------------------------
2025-04-24 04:47:18,591 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,591 [INFO] |     -------------------------
2025-04-24 04:47:18,591 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,591 [INFO] |     -------------------------
2025-04-24 04:47:18,592 [INFO] 
2025-04-24 04:47:18,604 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,604 [INFO] --> states/prims.rs:2131:9
2025-04-24 04:47:18,604 [INFO] |
2025-04-24 04:47:18,605 [INFO] 2129 |     fmt = match_arg(
2025-04-24 04:47:18,605 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,605 [INFO] 2130 |         prim_name,
2025-04-24 04:47:18,605 [INFO] 2131 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,605 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,605 [INFO] |
2025-04-24 04:47:18,606 [INFO] note: function defined here
2025-04-24 04:47:18,606 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,606 [INFO] |
2025-04-24 04:47:18,606 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,606 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,606 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,607 [INFO] |     --------------------------------
2025-04-24 04:47:18,607 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,607 [INFO] |     --------------------
2025-04-24 04:47:18,607 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,608 [INFO] |     ----------------------------
2025-04-24 04:47:18,608 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,608 [INFO] |     -------------------------
2025-04-24 04:47:18,609 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,609 [INFO] |     -------------------------
2025-04-24 04:47:18,609 [INFO] 
2025-04-24 04:47:18,625 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,625 [INFO] --> states/prims.rs:2423:9
2025-04-24 04:47:18,625 [INFO] |
2025-04-24 04:47:18,626 [INFO] 2421 |     s1 = match_arg(
2025-04-24 04:47:18,626 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,626 [INFO] 2422 |         prim_name,
2025-04-24 04:47:18,627 [INFO] 2423 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,627 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,627 [INFO] |
2025-04-24 04:47:18,628 [INFO] note: function defined here
2025-04-24 04:47:18,628 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,628 [INFO] |
2025-04-24 04:47:18,629 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,629 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,629 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,629 [INFO] |     --------------------------------
2025-04-24 04:47:18,630 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,630 [INFO] |     --------------------
2025-04-24 04:47:18,630 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,631 [INFO] |     ----------------------------
2025-04-24 04:47:18,631 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,631 [INFO] |     -------------------------
2025-04-24 04:47:18,631 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,631 [INFO] |     -------------------------
2025-04-24 04:47:18,632 [INFO] 
2025-04-24 04:47:18,643 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,644 [INFO] --> states/prims.rs:2430:9
2025-04-24 04:47:18,644 [INFO] |
2025-04-24 04:47:18,645 [INFO] 2428 |     s2 = match_arg(
2025-04-24 04:47:18,645 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,645 [INFO] 2429 |         prim_name,
2025-04-24 04:47:18,645 [INFO] 2430 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,645 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,646 [INFO] |
2025-04-24 04:47:18,646 [INFO] note: function defined here
2025-04-24 04:47:18,647 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,647 [INFO] |
2025-04-24 04:47:18,647 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,648 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,648 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,649 [INFO] |     --------------------------------
2025-04-24 04:47:18,649 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,649 [INFO] |     --------------------
2025-04-24 04:47:18,650 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,650 [INFO] |     ----------------------------
2025-04-24 04:47:18,650 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,651 [INFO] |     -------------------------
2025-04-24 04:47:18,651 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,651 [INFO] |     -------------------------
2025-04-24 04:47:18,651 [INFO] 
2025-04-24 04:47:18,661 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,661 [INFO] --> states/prims.rs:2506:9
2025-04-24 04:47:18,662 [INFO] |
2025-04-24 04:47:18,662 [INFO] 2504 |     n = match_arg(
2025-04-24 04:47:18,662 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:47:18,662 [INFO] 2505 |         prim_name,
2025-04-24 04:47:18,662 [INFO] 2506 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,662 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,663 [INFO] |
2025-04-24 04:47:18,663 [INFO] note: function defined here
2025-04-24 04:47:18,663 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,663 [INFO] |
2025-04-24 04:47:18,663 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,664 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,664 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,664 [INFO] |     --------------------------------
2025-04-24 04:47:18,665 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,665 [INFO] |     --------------------
2025-04-24 04:47:18,665 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,665 [INFO] |     ----------------------------
2025-04-24 04:47:18,665 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,665 [INFO] |     -------------------------
2025-04-24 04:47:18,666 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,666 [INFO] |     -------------------------
2025-04-24 04:47:18,666 [INFO] 
2025-04-24 04:47:18,678 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,678 [INFO] --> states/prims.rs:2603:9
2025-04-24 04:47:18,679 [INFO] |
2025-04-24 04:47:18,679 [INFO] 2601 |     s1 = match_arg(
2025-04-24 04:47:18,679 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,679 [INFO] 2602 |         prim_name,
2025-04-24 04:47:18,679 [INFO] 2603 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,679 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,680 [INFO] |
2025-04-24 04:47:18,680 [INFO] note: function defined here
2025-04-24 04:47:18,681 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,681 [INFO] |
2025-04-24 04:47:18,681 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,681 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,681 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,681 [INFO] |     --------------------------------
2025-04-24 04:47:18,682 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,682 [INFO] |     --------------------
2025-04-24 04:47:18,682 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,682 [INFO] |     ----------------------------
2025-04-24 04:47:18,683 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,683 [INFO] |     -------------------------
2025-04-24 04:47:18,683 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,683 [INFO] |     -------------------------
2025-04-24 04:47:18,684 [INFO] 
2025-04-24 04:47:18,692 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,693 [INFO] --> states/prims.rs:2610:9
2025-04-24 04:47:18,693 [INFO] |
2025-04-24 04:47:18,693 [INFO] 2608 |     s2 = match_arg(
2025-04-24 04:47:18,694 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:47:18,694 [INFO] 2609 |         prim_name,
2025-04-24 04:47:18,694 [INFO] 2610 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,694 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,695 [INFO] |
2025-04-24 04:47:18,695 [INFO] note: function defined here
2025-04-24 04:47:18,695 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,695 [INFO] |
2025-04-24 04:47:18,695 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,695 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,696 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,696 [INFO] |     --------------------------------
2025-04-24 04:47:18,697 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,697 [INFO] |     --------------------
2025-04-24 04:47:18,697 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,697 [INFO] |     ----------------------------
2025-04-24 04:47:18,697 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,698 [INFO] |     -------------------------
2025-04-24 04:47:18,698 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,698 [INFO] |     -------------------------
2025-04-24 04:47:18,699 [INFO] 
2025-04-24 04:47:18,709 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,709 [INFO] --> states/prims.rs:2617:9
2025-04-24 04:47:18,709 [INFO] |
2025-04-24 04:47:18,709 [INFO] 2615 |     len = match_arg(
2025-04-24 04:47:18,709 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,710 [INFO] 2616 |         prim_name,
2025-04-24 04:47:18,710 [INFO] 2617 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,710 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,710 [INFO] |
2025-04-24 04:47:18,710 [INFO] note: function defined here
2025-04-24 04:47:18,710 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,711 [INFO] |
2025-04-24 04:47:18,711 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,711 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,711 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,711 [INFO] |     --------------------------------
2025-04-24 04:47:18,712 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,712 [INFO] |     --------------------
2025-04-24 04:47:18,712 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,713 [INFO] |     ----------------------------
2025-04-24 04:47:18,713 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,713 [INFO] |     -------------------------
2025-04-24 04:47:18,713 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,713 [INFO] |     -------------------------
2025-04-24 04:47:18,715 [INFO] 
2025-04-24 04:47:18,723 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,723 [INFO] --> states/prims.rs:2697:9
2025-04-24 04:47:18,723 [INFO] |
2025-04-24 04:47:18,723 [INFO] 2695 |     str = match_arg(
2025-04-24 04:47:18,724 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,724 [INFO] 2696 |         prim_name,
2025-04-24 04:47:18,724 [INFO] 2697 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,724 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,725 [INFO] |
2025-04-24 04:47:18,725 [INFO] note: function defined here
2025-04-24 04:47:18,725 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,725 [INFO] |
2025-04-24 04:47:18,725 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,725 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,726 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,726 [INFO] |     --------------------------------
2025-04-24 04:47:18,726 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,726 [INFO] |     --------------------
2025-04-24 04:47:18,726 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,726 [INFO] |     ----------------------------
2025-04-24 04:47:18,727 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,727 [INFO] |     -------------------------
2025-04-24 04:47:18,727 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,727 [INFO] |     -------------------------
2025-04-24 04:47:18,727 [INFO] 
2025-04-24 04:47:18,740 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,740 [INFO] --> states/prims.rs:2704:9
2025-04-24 04:47:18,740 [INFO] |
2025-04-24 04:47:18,740 [INFO] 2702 |     start = match_arg(
2025-04-24 04:47:18,740 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:47:18,741 [INFO] 2703 |         prim_name,
2025-04-24 04:47:18,741 [INFO] 2704 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,742 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,742 [INFO] |
2025-04-24 04:47:18,742 [INFO] note: function defined here
2025-04-24 04:47:18,742 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,743 [INFO] |
2025-04-24 04:47:18,743 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,743 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,744 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,744 [INFO] |     --------------------------------
2025-04-24 04:47:18,744 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,745 [INFO] |     --------------------
2025-04-24 04:47:18,745 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,745 [INFO] |     ----------------------------
2025-04-24 04:47:18,745 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,745 [INFO] |     -------------------------
2025-04-24 04:47:18,746 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,746 [INFO] |     -------------------------
2025-04-24 04:47:18,746 [INFO] 
2025-04-24 04:47:18,762 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,763 [INFO] --> states/prims.rs:2711:9
2025-04-24 04:47:18,764 [INFO] |
2025-04-24 04:47:18,764 [INFO] 2709 |     end = match_arg(
2025-04-24 04:47:18,765 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:47:18,765 [INFO] 2710 |         prim_name,
2025-04-24 04:47:18,765 [INFO] 2711 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,766 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:47:18,766 [INFO] |
2025-04-24 04:47:18,767 [INFO] note: function defined here
2025-04-24 04:47:18,767 [INFO] --> states/prims.rs:574:22
2025-04-24 04:47:18,767 [INFO] |
2025-04-24 04:47:18,767 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:47:18,768 [INFO] |                      ^^^^^^^^^
2025-04-24 04:47:18,768 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:47:18,769 [INFO] |     --------------------------------
2025-04-24 04:47:18,769 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:47:18,770 [INFO] |     --------------------
2025-04-24 04:47:18,771 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:47:18,772 [INFO] |     ----------------------------
2025-04-24 04:47:18,772 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:47:18,773 [INFO] |     -------------------------
2025-04-24 04:47:18,773 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:47:18,774 [INFO] |     -------------------------
2025-04-24 04:47:18,774 [INFO] 
2025-04-24 04:47:18,793 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,793 [INFO] --> states/utils.rs:928:21
2025-04-24 04:47:18,793 [INFO] |
2025-04-24 04:47:18,794 [INFO] 928 |     n2 = node_alloc((*n).type_0 as libc::c_uint);
2025-04-24 04:47:18,794 [INFO] |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,794 [INFO] |          |
2025-04-24 04:47:18,794 [INFO] |          arguments to this function are incorrect
2025-04-24 04:47:18,795 [INFO] |
2025-04-24 04:47:18,795 [INFO] note: function defined here
2025-04-24 04:47:18,795 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:18,795 [INFO] |
2025-04-24 04:47:18,796 [INFO] 909 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:18,796 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:18,797 [INFO] 
2025-04-24 04:47:18,804 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,804 [INFO] --> states/utils.rs:1020:20
2025-04-24 04:47:18,805 [INFO] |
2025-04-24 04:47:18,806 [INFO] 1020 |     n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:47:18,806 [INFO] |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,806 [INFO] |         |
2025-04-24 04:47:18,807 [INFO] |         arguments to this function are incorrect
2025-04-24 04:47:18,807 [INFO] |
2025-04-24 04:47:18,807 [INFO] note: function defined here
2025-04-24 04:47:18,808 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:18,808 [INFO] |
2025-04-24 04:47:18,808 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:18,809 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:18,809 [INFO] 
2025-04-24 04:47:18,821 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,821 [INFO] --> states/utils.rs:1322:28
2025-04-24 04:47:18,822 [INFO] |
2025-04-24 04:47:18,822 [INFO] 1322 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:47:18,822 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,823 [INFO] |                 |
2025-04-24 04:47:18,823 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:47:18,823 [INFO] |
2025-04-24 04:47:18,823 [INFO] note: function defined here
2025-04-24 04:47:18,824 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:18,824 [INFO] |
2025-04-24 04:47:18,825 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:18,825 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:18,825 [INFO] 
2025-04-24 04:47:18,834 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,834 [INFO] --> states/utils.rs:1350:28
2025-04-24 04:47:18,834 [INFO] |
2025-04-24 04:47:18,835 [INFO] 1350 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:47:18,835 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,835 [INFO] |                 |
2025-04-24 04:47:18,836 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:47:18,836 [INFO] |
2025-04-24 04:47:18,836 [INFO] note: function defined here
2025-04-24 04:47:18,837 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:18,837 [INFO] |
2025-04-24 04:47:18,837 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:18,837 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:18,838 [INFO] 
2025-04-24 04:47:18,846 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,847 [INFO] --> states/utils.rs:1375:28
2025-04-24 04:47:18,847 [INFO] |
2025-04-24 04:47:18,847 [INFO] 1375 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:47:18,848 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,848 [INFO] |                 |
2025-04-24 04:47:18,848 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:47:18,848 [INFO] |
2025-04-24 04:47:18,849 [INFO] note: function defined here
2025-04-24 04:47:18,849 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:18,849 [INFO] |
2025-04-24 04:47:18,850 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:18,850 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:18,850 [INFO] 
2025-04-24 04:47:18,860 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,861 [INFO] --> states/utils.rs:1466:32
2025-04-24 04:47:18,861 [INFO] |
2025-04-24 04:47:18,861 [INFO] 1466 |                 n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:47:18,861 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,862 [INFO] |                     |
2025-04-24 04:47:18,862 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:47:18,862 [INFO] |
2025-04-24 04:47:18,862 [INFO] note: function defined here
2025-04-24 04:47:18,863 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:18,863 [INFO] |
2025-04-24 04:47:18,864 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:18,864 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:18,864 [INFO] 
2025-04-24 04:47:18,872 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,873 [INFO] --> states/utils.rs:1531:32
2025-04-24 04:47:18,873 [INFO] |
2025-04-24 04:47:18,873 [INFO] 1531 |                 n = node_alloc(NodeType::nREAL as libc::c_int as libc::c_uint);
2025-04-24 04:47:18,874 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,874 [INFO] |                     |
2025-04-24 04:47:18,874 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:47:18,874 [INFO] |
2025-04-24 04:47:18,875 [INFO] note: function defined here
2025-04-24 04:47:18,875 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:18,875 [INFO] |
2025-04-24 04:47:18,875 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:18,876 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:18,876 [INFO] 
2025-04-24 04:47:18,886 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,886 [INFO] --> states/utils.rs:1637:28
2025-04-24 04:47:18,886 [INFO] |
2025-04-24 04:47:18,886 [INFO] 1637 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:47:18,887 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,887 [INFO] |                 |
2025-04-24 04:47:18,887 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:47:18,887 [INFO] |
2025-04-24 04:47:18,888 [INFO] note: function defined here
2025-04-24 04:47:18,888 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:18,888 [INFO] |
2025-04-24 04:47:18,889 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:18,889 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:18,889 [INFO] 
2025-04-24 04:47:18,902 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,902 [INFO] --> states/utils.rs:1776:25
2025-04-24 04:47:18,902 [INFO] |
2025-04-24 04:47:18,903 [INFO] 1773 |                     n2 = calculate_binary(
2025-04-24 04:47:18,903 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:47:18,903 [INFO] ...
2025-04-24 04:47:18,903 [INFO] 1776 |                         ExprType::ePLUS as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,903 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:47:18,903 [INFO] |
2025-04-24 04:47:18,904 [INFO] note: function defined here
2025-04-24 04:47:18,904 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:47:18,904 [INFO] |
2025-04-24 04:47:18,904 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:47:18,905 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:47:18,905 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:47:18,905 [INFO] |     ----------------
2025-04-24 04:47:18,905 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:47:18,905 [INFO] |     ----------------
2025-04-24 04:47:18,906 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:47:18,906 [INFO] |     --------------------
2025-04-24 04:47:18,906 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:47:18,906 [INFO] |     ---------------------------
2025-04-24 04:47:18,906 [INFO] 
2025-04-24 04:47:18,919 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,920 [INFO] --> states/utils.rs:1784:25
2025-04-24 04:47:18,920 [INFO] |
2025-04-24 04:47:18,920 [INFO] 1781 |                     n2 = calculate_binary(
2025-04-24 04:47:18,920 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:47:18,921 [INFO] ...
2025-04-24 04:47:18,921 [INFO] 1784 |                         ExprType::eMINUS as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,921 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:47:18,921 [INFO] |
2025-04-24 04:47:18,921 [INFO] note: function defined here
2025-04-24 04:47:18,922 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:47:18,922 [INFO] |
2025-04-24 04:47:18,922 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:47:18,922 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:47:18,922 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:47:18,922 [INFO] |     ----------------
2025-04-24 04:47:18,923 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:47:18,923 [INFO] |     ----------------
2025-04-24 04:47:18,923 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:47:18,923 [INFO] |     --------------------
2025-04-24 04:47:18,923 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:47:18,923 [INFO] |     ---------------------------
2025-04-24 04:47:18,924 [INFO] 
2025-04-24 04:47:18,936 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,937 [INFO] --> states/utils.rs:1792:25
2025-04-24 04:47:18,937 [INFO] |
2025-04-24 04:47:18,937 [INFO] 1789 |                     n2 = calculate_binary(
2025-04-24 04:47:18,937 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:47:18,937 [INFO] ...
2025-04-24 04:47:18,938 [INFO] 1792 |                         ExprType::eMULT as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,938 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:47:18,938 [INFO] |
2025-04-24 04:47:18,938 [INFO] note: function defined here
2025-04-24 04:47:18,938 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:47:18,939 [INFO] |
2025-04-24 04:47:18,939 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:47:18,939 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:47:18,939 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:47:18,940 [INFO] |     ----------------
2025-04-24 04:47:18,940 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:47:18,940 [INFO] |     ----------------
2025-04-24 04:47:18,940 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:47:18,941 [INFO] |     --------------------
2025-04-24 04:47:18,941 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:47:18,941 [INFO] |     ---------------------------
2025-04-24 04:47:18,941 [INFO] 
2025-04-24 04:47:18,951 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,952 [INFO] --> states/utils.rs:1800:25
2025-04-24 04:47:18,952 [INFO] |
2025-04-24 04:47:18,953 [INFO] 1797 |                     n2 = calculate_binary(
2025-04-24 04:47:18,953 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:47:18,953 [INFO] ...
2025-04-24 04:47:18,954 [INFO] 1800 |                         ExprType::eDIV as libc::c_int as libc::c_uint,
2025-04-24 04:47:18,954 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:47:18,954 [INFO] |
2025-04-24 04:47:18,954 [INFO] note: function defined here
2025-04-24 04:47:18,954 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:47:18,955 [INFO] |
2025-04-24 04:47:18,955 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:47:18,955 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:47:18,955 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:47:18,956 [INFO] |     ----------------
2025-04-24 04:47:18,956 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:47:18,957 [INFO] |     ----------------
2025-04-24 04:47:18,957 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:47:18,957 [INFO] |     --------------------
2025-04-24 04:47:18,958 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:47:18,959 [INFO] |     ---------------------------
2025-04-24 04:47:18,959 [INFO] 
2025-04-24 04:47:18,966 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,966 [INFO] --> states/utils.rs:1821:17
2025-04-24 04:47:18,967 [INFO] |
2025-04-24 04:47:18,967 [INFO] 1818 |               n = calculate_binary(
2025-04-24 04:47:18,967 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-24 04:47:18,968 [INFO] ...
2025-04-24 04:47:18,968 [INFO] 1821 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-24 04:47:18,968 [INFO] 1822 | |                     == ExprType::ePOSTFIXADD as libc::c_int as libc::c_uint
2025-04-24 04:47:18,969 [INFO] 1823 | |                 {
2025-04-24 04:47:18,969 [INFO] 1824 | |                     ExprType::ePLUS as libc::c_int
2025-04-24 04:47:18,969 [INFO] 1825 | |                 } else {
2025-04-24 04:47:18,970 [INFO] 1826 | |                     ExprType::eMINUS as libc::c_int
2025-04-24 04:47:18,970 [INFO] 1827 | |                 }) as libc::c_uint,
2025-04-24 04:47:18,970 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:47:18,970 [INFO] |
2025-04-24 04:47:18,971 [INFO] note: function defined here
2025-04-24 04:47:18,971 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:47:18,971 [INFO] |
2025-04-24 04:47:18,971 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:47:18,972 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:47:18,972 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:47:18,973 [INFO] |     ----------------
2025-04-24 04:47:18,973 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:47:18,973 [INFO] |     ----------------
2025-04-24 04:47:18,974 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:47:18,974 [INFO] |     --------------------
2025-04-24 04:47:18,974 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:47:18,974 [INFO] |     ---------------------------
2025-04-24 04:47:18,975 [INFO] 
2025-04-24 04:47:18,981 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,982 [INFO] --> states/utils.rs:1840:17
2025-04-24 04:47:18,982 [INFO] |
2025-04-24 04:47:18,982 [INFO] 1837 |               n = calculate_binary(
2025-04-24 04:47:18,982 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-24 04:47:18,983 [INFO] ...
2025-04-24 04:47:18,983 [INFO] 1840 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-24 04:47:18,983 [INFO] 1841 | |                     == ExprType::ePREFIXADD as libc::c_int as libc::c_uint
2025-04-24 04:47:18,984 [INFO] 1842 | |                 {
2025-04-24 04:47:18,984 [INFO] 1843 | |                     ExprType::ePLUS as libc::c_int
2025-04-24 04:47:18,984 [INFO] 1844 | |                 } else {
2025-04-24 04:47:18,985 [INFO] 1845 | |                     ExprType::eMINUS as libc::c_int
2025-04-24 04:47:18,985 [INFO] 1846 | |                 }) as libc::c_uint,
2025-04-24 04:47:18,985 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:47:18,986 [INFO] |
2025-04-24 04:47:18,986 [INFO] note: function defined here
2025-04-24 04:47:18,986 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:47:18,986 [INFO] |
2025-04-24 04:47:18,987 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:47:18,987 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:47:18,987 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:47:18,988 [INFO] |     ----------------
2025-04-24 04:47:18,988 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:47:18,988 [INFO] |     ----------------
2025-04-24 04:47:18,989 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:47:18,989 [INFO] |     --------------------
2025-04-24 04:47:18,989 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:47:18,989 [INFO] |     ---------------------------
2025-04-24 04:47:18,990 [INFO] 
2025-04-24 04:47:18,997 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:18,997 [INFO] --> states/utils.rs:2039:32
2025-04-24 04:47:18,998 [INFO] |
2025-04-24 04:47:18,998 [INFO] 2039 |                 l = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:47:18,998 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:47:18,998 [INFO] |                     |
2025-04-24 04:47:18,999 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:47:18,999 [INFO] |
2025-04-24 04:47:18,999 [INFO] note: function defined here
2025-04-24 04:47:19,000 [INFO] --> states/utils.rs:909:26
2025-04-24 04:47:19,000 [INFO] |
2025-04-24 04:47:19,000 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:47:19,001 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:47:19,001 [INFO] 
2025-04-24 04:47:19,011 [INFO] error[E0308]: mismatched types
2025-04-24 04:47:19,011 [INFO] --> states/utils.rs:2085:40
2025-04-24 04:47:19,011 [INFO] |
2025-04-24 04:47:19,012 [INFO] 2085 |             n = calculate_binary(l, r, (*expr).type_0 as libc::c_uint, (*expr).linenum);
2025-04-24 04:47:19,012 [INFO] |                 ----------------       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:47:19,012 [INFO] |                 |
2025-04-24 04:47:19,013 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:47:19,013 [INFO] |
2025-04-24 04:47:19,013 [INFO] note: function defined here
2025-04-24 04:47:19,015 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:47:19,015 [INFO] |
2025-04-24 04:47:19,015 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:47:19,015 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:47:19,015 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:47:19,016 [INFO] |     ----------------
2025-04-24 04:47:19,016 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:47:19,016 [INFO] |     ----------------
2025-04-24 04:47:19,017 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:47:19,017 [INFO] |     --------------------
2025-04-24 04:47:19,018 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:47:19,018 [INFO] |     ---------------------------
2025-04-24 04:47:19,018 [INFO] 
2025-04-24 04:47:19,021 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-24 04:47:19,032 [INFO] warning: `c2rust_out` (lib) generated 33 warnings
2025-04-24 04:47:19,032 [INFO] error: could not compile `c2rust_out` due to 48 previous errors; 33 warnings emitted
2025-04-24 04:47:19,033 [ERROR] cargo build failed with code 101
2025-04-24 04:57:01,420 [INFO] Running: c2rust transpile -e compile_commands.json
2025-04-24 04:57:06,145 [INFO] c2rust transpile succeeded
2025-04-24 04:57:06,145 [INFO] Running: cargo build
2025-04-24 04:57:06,424 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-24 04:57:07,240 [INFO] warning: unused label
2025-04-24 04:57:07,241 [INFO] --> afmlib/afmparse.rs:1309:9
2025-04-24 04:57:07,241 [INFO] |
2025-04-24 04:57:07,241 [INFO] 1309 |         'c_3699: {
2025-04-24 04:57:07,242 [INFO] |         ^^^^^^^
2025-04-24 04:57:07,242 [INFO] |
2025-04-24 04:57:07,242 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-24 04:57:07,242 [INFO] 
2025-04-24 04:57:07,243 [INFO] warning: unused import: `::libc`
2025-04-24 04:57:07,244 [INFO] --> compat/getopt.rs:1:5
2025-04-24 04:57:07,244 [INFO] |
2025-04-24 04:57:07,244 [INFO] 1 | use ::libc;
2025-04-24 04:57:07,244 [INFO] |     ^^^^^^
2025-04-24 04:57:07,245 [INFO] |
2025-04-24 04:57:07,245 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-24 04:57:07,245 [INFO] 
2025-04-24 04:57:07,246 [INFO] warning: unused import: `::libc`
2025-04-24 04:57:07,246 [INFO] --> compat/getopt1.rs:1:5
2025-04-24 04:57:07,246 [INFO] |
2025-04-24 04:57:07,247 [INFO] 1 | use ::libc;
2025-04-24 04:57:07,247 [INFO] |     ^^^^^^
2025-04-24 04:57:07,247 [INFO] 
2025-04-24 04:57:07,248 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,248 [INFO] --> compat/regex.rs:15502:33
2025-04-24 04:57:07,249 [INFO] |
2025-04-24 04:57:07,250 [INFO] 15502 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,251 [INFO] |                       ^
2025-04-24 04:57:07,251 [INFO] ...
2025-04-24 04:57:07,251 [INFO] 15507 | ...                   })
2025-04-24 04:57:07,251 [INFO] |                        ^
2025-04-24 04:57:07,252 [INFO] |
2025-04-24 04:57:07,252 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-24 04:57:07,253 [INFO] help: remove these parentheses
2025-04-24 04:57:07,253 [INFO] |
2025-04-24 04:57:07,253 [INFO] 15502 ~                                 if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,253 [INFO] 15503 |                                     0 as libc::c_int
2025-04-24 04:57:07,253 [INFO] ...
2025-04-24 04:57:07,254 [INFO] 15506 |                                     1 as libc::c_int
2025-04-24 04:57:07,255 [INFO] 15507 ~                                 }
2025-04-24 04:57:07,256 [INFO] |
2025-04-24 04:57:07,256 [INFO] 
2025-04-24 04:57:07,256 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,257 [INFO] --> compat/regex.rs:16491:37
2025-04-24 04:57:07,257 [INFO] |
2025-04-24 04:57:07,257 [INFO] 16491 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,258 [INFO] |                       ^
2025-04-24 04:57:07,258 [INFO] ...
2025-04-24 04:57:07,259 [INFO] 16496 | ...                   })
2025-04-24 04:57:07,259 [INFO] |                        ^
2025-04-24 04:57:07,259 [INFO] |
2025-04-24 04:57:07,259 [INFO] help: remove these parentheses
2025-04-24 04:57:07,259 [INFO] |
2025-04-24 04:57:07,260 [INFO] 16491 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,260 [INFO] 16492 |                                         0 as libc::c_int
2025-04-24 04:57:07,261 [INFO] ...
2025-04-24 04:57:07,261 [INFO] 16495 |                                         1 as libc::c_int
2025-04-24 04:57:07,261 [INFO] 16496 ~                                     }
2025-04-24 04:57:07,261 [INFO] |
2025-04-24 04:57:07,261 [INFO] 
2025-04-24 04:57:07,262 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,262 [INFO] --> compat/regex.rs:16753:29
2025-04-24 04:57:07,262 [INFO] |
2025-04-24 04:57:07,262 [INFO] 16753 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,263 [INFO] |                       ^
2025-04-24 04:57:07,263 [INFO] ...
2025-04-24 04:57:07,263 [INFO] 16758 | ...                   })
2025-04-24 04:57:07,263 [INFO] |                        ^
2025-04-24 04:57:07,263 [INFO] |
2025-04-24 04:57:07,264 [INFO] help: remove these parentheses
2025-04-24 04:57:07,264 [INFO] |
2025-04-24 04:57:07,264 [INFO] 16753 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,265 [INFO] 16754 |                                 0 as libc::c_int
2025-04-24 04:57:07,265 [INFO] ...
2025-04-24 04:57:07,265 [INFO] 16757 |                                 1 as libc::c_int
2025-04-24 04:57:07,265 [INFO] 16758 ~                             }
2025-04-24 04:57:07,266 [INFO] |
2025-04-24 04:57:07,266 [INFO] 
2025-04-24 04:57:07,266 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,267 [INFO] --> compat/regex.rs:17041:29
2025-04-24 04:57:07,267 [INFO] |
2025-04-24 04:57:07,267 [INFO] 17041 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,268 [INFO] |                       ^
2025-04-24 04:57:07,268 [INFO] ...
2025-04-24 04:57:07,268 [INFO] 17046 | ...                   })
2025-04-24 04:57:07,268 [INFO] |                        ^
2025-04-24 04:57:07,268 [INFO] |
2025-04-24 04:57:07,269 [INFO] help: remove these parentheses
2025-04-24 04:57:07,269 [INFO] |
2025-04-24 04:57:07,269 [INFO] 17041 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,269 [INFO] 17042 |                                 0 as libc::c_int
2025-04-24 04:57:07,270 [INFO] ...
2025-04-24 04:57:07,270 [INFO] 17045 |                                 1 as libc::c_int
2025-04-24 04:57:07,270 [INFO] 17046 ~                             }
2025-04-24 04:57:07,270 [INFO] |
2025-04-24 04:57:07,271 [INFO] 
2025-04-24 04:57:07,271 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,271 [INFO] --> compat/regex.rs:17138:29
2025-04-24 04:57:07,271 [INFO] |
2025-04-24 04:57:07,272 [INFO] 17138 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,272 [INFO] |                       ^
2025-04-24 04:57:07,272 [INFO] ...
2025-04-24 04:57:07,273 [INFO] 17143 | ...                   })
2025-04-24 04:57:07,273 [INFO] |                        ^
2025-04-24 04:57:07,273 [INFO] |
2025-04-24 04:57:07,273 [INFO] help: remove these parentheses
2025-04-24 04:57:07,273 [INFO] |
2025-04-24 04:57:07,274 [INFO] 17138 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,274 [INFO] 17139 |                                 0 as libc::c_int
2025-04-24 04:57:07,274 [INFO] ...
2025-04-24 04:57:07,274 [INFO] 17142 |                                 1 as libc::c_int
2025-04-24 04:57:07,274 [INFO] 17143 ~                             }
2025-04-24 04:57:07,274 [INFO] |
2025-04-24 04:57:07,274 [INFO] 
2025-04-24 04:57:07,275 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,275 [INFO] --> compat/regex.rs:17294:29
2025-04-24 04:57:07,275 [INFO] |
2025-04-24 04:57:07,275 [INFO] 17294 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,276 [INFO] |                       ^
2025-04-24 04:57:07,276 [INFO] ...
2025-04-24 04:57:07,276 [INFO] 17300 | ...                   })
2025-04-24 04:57:07,277 [INFO] |                        ^
2025-04-24 04:57:07,277 [INFO] |
2025-04-24 04:57:07,277 [INFO] help: remove these parentheses
2025-04-24 04:57:07,278 [INFO] |
2025-04-24 04:57:07,278 [INFO] 17294 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,278 [INFO] 17295 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,278 [INFO] ...
2025-04-24 04:57:07,279 [INFO] 17299 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,279 [INFO] 17300 ~                             }
2025-04-24 04:57:07,279 [INFO] |
2025-04-24 04:57:07,279 [INFO] 
2025-04-24 04:57:07,280 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,280 [INFO] --> compat/regex.rs:17306:29
2025-04-24 04:57:07,280 [INFO] |
2025-04-24 04:57:07,281 [INFO] 17306 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,281 [INFO] |                       ^
2025-04-24 04:57:07,281 [INFO] ...
2025-04-24 04:57:07,282 [INFO] 17310 | ...                   })
2025-04-24 04:57:07,282 [INFO] |                        ^
2025-04-24 04:57:07,282 [INFO] |
2025-04-24 04:57:07,282 [INFO] help: remove these parentheses
2025-04-24 04:57:07,282 [INFO] |
2025-04-24 04:57:07,283 [INFO] 17306 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,283 [INFO] 17307 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,283 [INFO] 17308 |                             } else {
2025-04-24 04:57:07,284 [INFO] 17309 |                                 *d as libc::c_int
2025-04-24 04:57:07,284 [INFO] 17310 ~                             }
2025-04-24 04:57:07,284 [INFO] |
2025-04-24 04:57:07,285 [INFO] 
2025-04-24 04:57:07,285 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,285 [INFO] --> compat/regex.rs:17333:29
2025-04-24 04:57:07,285 [INFO] |
2025-04-24 04:57:07,286 [INFO] 17333 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,286 [INFO] |                       ^
2025-04-24 04:57:07,286 [INFO] ...
2025-04-24 04:57:07,286 [INFO] 17339 | ...                   })
2025-04-24 04:57:07,287 [INFO] |                        ^
2025-04-24 04:57:07,287 [INFO] |
2025-04-24 04:57:07,288 [INFO] help: remove these parentheses
2025-04-24 04:57:07,288 [INFO] |
2025-04-24 04:57:07,288 [INFO] 17333 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,288 [INFO] 17334 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,289 [INFO] ...
2025-04-24 04:57:07,289 [INFO] 17338 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,289 [INFO] 17339 ~                             }
2025-04-24 04:57:07,289 [INFO] |
2025-04-24 04:57:07,290 [INFO] 
2025-04-24 04:57:07,290 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,290 [INFO] --> compat/regex.rs:17345:29
2025-04-24 04:57:07,290 [INFO] |
2025-04-24 04:57:07,291 [INFO] 17345 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,291 [INFO] |                       ^
2025-04-24 04:57:07,291 [INFO] ...
2025-04-24 04:57:07,291 [INFO] 17349 | ...                   })
2025-04-24 04:57:07,292 [INFO] |                        ^
2025-04-24 04:57:07,292 [INFO] |
2025-04-24 04:57:07,292 [INFO] help: remove these parentheses
2025-04-24 04:57:07,292 [INFO] |
2025-04-24 04:57:07,293 [INFO] 17345 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,293 [INFO] 17346 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,293 [INFO] 17347 |                             } else {
2025-04-24 04:57:07,294 [INFO] 17348 |                                 *d as libc::c_int
2025-04-24 04:57:07,294 [INFO] 17349 ~                             }
2025-04-24 04:57:07,294 [INFO] |
2025-04-24 04:57:07,294 [INFO] 
2025-04-24 04:57:07,294 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,294 [INFO] --> compat/regex.rs:17363:25
2025-04-24 04:57:07,295 [INFO] |
2025-04-24 04:57:07,295 [INFO] 17363 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,295 [INFO] |                         ^
2025-04-24 04:57:07,295 [INFO] ...
2025-04-24 04:57:07,296 [INFO] 17367 |                         })
2025-04-24 04:57:07,296 [INFO] |                          ^
2025-04-24 04:57:07,296 [INFO] |
2025-04-24 04:57:07,296 [INFO] help: remove these parentheses
2025-04-24 04:57:07,297 [INFO] |
2025-04-24 04:57:07,297 [INFO] 17363 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,297 [INFO] 17364 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,297 [INFO] 17365 |                         } else {
2025-04-24 04:57:07,298 [INFO] 17366 |                             *d as libc::c_int
2025-04-24 04:57:07,298 [INFO] 17367 ~                         }
2025-04-24 04:57:07,298 [INFO] |
2025-04-24 04:57:07,298 [INFO] 
2025-04-24 04:57:07,298 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,298 [INFO] --> compat/regex.rs:17376:33
2025-04-24 04:57:07,300 [INFO] |
2025-04-24 04:57:07,300 [INFO] 17376 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,301 [INFO] |                       ^
2025-04-24 04:57:07,301 [INFO] ...
2025-04-24 04:57:07,301 [INFO] 17382 | ...                   })
2025-04-24 04:57:07,301 [INFO] |                        ^
2025-04-24 04:57:07,302 [INFO] |
2025-04-24 04:57:07,302 [INFO] help: remove these parentheses
2025-04-24 04:57:07,302 [INFO] |
2025-04-24 04:57:07,302 [INFO] 17376 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,303 [INFO] 17377 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,303 [INFO] ...
2025-04-24 04:57:07,303 [INFO] 17381 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,303 [INFO] 17382 ~                                 }
2025-04-24 04:57:07,303 [INFO] |
2025-04-24 04:57:07,304 [INFO] 
2025-04-24 04:57:07,305 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,305 [INFO] --> compat/regex.rs:17397:29
2025-04-24 04:57:07,305 [INFO] |
2025-04-24 04:57:07,305 [INFO] 17397 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,305 [INFO] |                       ^
2025-04-24 04:57:07,305 [INFO] ...
2025-04-24 04:57:07,306 [INFO] 17403 | ...                   })
2025-04-24 04:57:07,306 [INFO] |                        ^
2025-04-24 04:57:07,306 [INFO] |
2025-04-24 04:57:07,307 [INFO] help: remove these parentheses
2025-04-24 04:57:07,307 [INFO] |
2025-04-24 04:57:07,307 [INFO] 17397 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,307 [INFO] 17398 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:07,307 [INFO] ...
2025-04-24 04:57:07,308 [INFO] 17402 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,308 [INFO] 17403 ~                             }
2025-04-24 04:57:07,308 [INFO] |
2025-04-24 04:57:07,309 [INFO] 
2025-04-24 04:57:07,309 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,309 [INFO] --> compat/regex.rs:17408:29
2025-04-24 04:57:07,309 [INFO] |
2025-04-24 04:57:07,310 [INFO] 17408 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,310 [INFO] |                       ^
2025-04-24 04:57:07,310 [INFO] ...
2025-04-24 04:57:07,311 [INFO] 17412 | ...                   })
2025-04-24 04:57:07,311 [INFO] |                        ^
2025-04-24 04:57:07,312 [INFO] |
2025-04-24 04:57:07,312 [INFO] help: remove these parentheses
2025-04-24 04:57:07,312 [INFO] |
2025-04-24 04:57:07,313 [INFO] 17408 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,313 [INFO] 17409 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,313 [INFO] 17410 |                             } else {
2025-04-24 04:57:07,314 [INFO] 17411 |                                 *d as libc::c_int
2025-04-24 04:57:07,314 [INFO] 17412 ~                             }
2025-04-24 04:57:07,314 [INFO] |
2025-04-24 04:57:07,314 [INFO] 
2025-04-24 04:57:07,315 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,315 [INFO] --> compat/regex.rs:17439:33
2025-04-24 04:57:07,316 [INFO] |
2025-04-24 04:57:07,316 [INFO] 17439 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,316 [INFO] |                       ^
2025-04-24 04:57:07,317 [INFO] ...
2025-04-24 04:57:07,317 [INFO] 17443 | ...                   })
2025-04-24 04:57:07,317 [INFO] |                        ^
2025-04-24 04:57:07,317 [INFO] |
2025-04-24 04:57:07,317 [INFO] help: remove these parentheses
2025-04-24 04:57:07,317 [INFO] |
2025-04-24 04:57:07,318 [INFO] 17439 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,318 [INFO] 17440 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,318 [INFO] 17441 |                                 } else {
2025-04-24 04:57:07,318 [INFO] 17442 |                                     *d as libc::c_int
2025-04-24 04:57:07,318 [INFO] 17443 ~                                 }
2025-04-24 04:57:07,319 [INFO] |
2025-04-24 04:57:07,319 [INFO] 
2025-04-24 04:57:07,319 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,319 [INFO] --> compat/regex.rs:17495:33
2025-04-24 04:57:07,319 [INFO] |
2025-04-24 04:57:07,319 [INFO] 17495 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,319 [INFO] |                       ^
2025-04-24 04:57:07,320 [INFO] ...
2025-04-24 04:57:07,321 [INFO] 17499 | ...                   })
2025-04-24 04:57:07,321 [INFO] |                        ^
2025-04-24 04:57:07,321 [INFO] |
2025-04-24 04:57:07,321 [INFO] help: remove these parentheses
2025-04-24 04:57:07,321 [INFO] |
2025-04-24 04:57:07,322 [INFO] 17495 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:07,322 [INFO] 17496 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:07,322 [INFO] 17497 |                                 } else {
2025-04-24 04:57:07,322 [INFO] 17498 |                                     *d as libc::c_int
2025-04-24 04:57:07,322 [INFO] 17499 ~                                 }
2025-04-24 04:57:07,322 [INFO] |
2025-04-24 04:57:07,323 [INFO] 
2025-04-24 04:57:07,323 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:07,323 [INFO] --> compat/regex.rs:17661:37
2025-04-24 04:57:07,323 [INFO] |
2025-04-24 04:57:07,323 [INFO] 17661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,323 [INFO] |                       ^
2025-04-24 04:57:07,323 [INFO] ...
2025-04-24 04:57:07,324 [INFO] 17666 | ...                   })
2025-04-24 04:57:07,324 [INFO] |                        ^
2025-04-24 04:57:07,324 [INFO] |
2025-04-24 04:57:07,324 [INFO] help: remove these parentheses
2025-04-24 04:57:07,325 [INFO] |
2025-04-24 04:57:07,325 [INFO] 17661 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:57:07,325 [INFO] 17662 |                                         0 as libc::c_int
2025-04-24 04:57:07,325 [INFO] ...
2025-04-24 04:57:07,325 [INFO] 17665 |                                         1 as libc::c_int
2025-04-24 04:57:07,326 [INFO] 17666 ~                                     }
2025-04-24 04:57:07,326 [INFO] |
2025-04-24 04:57:07,326 [INFO] 
2025-04-24 04:57:07,326 [INFO] warning: unnecessary parentheses around method argument
2025-04-24 04:57:07,326 [INFO] --> compat/regex.rs:18011:13
2025-04-24 04:57:07,327 [INFO] |
2025-04-24 04:57:07,327 [INFO] 18011 |             (if dend == end_match_1 {
2025-04-24 04:57:07,328 [INFO] |             ^
2025-04-24 04:57:07,328 [INFO] ...
2025-04-24 04:57:07,328 [INFO] 18015 |             }),
2025-04-24 04:57:07,329 [INFO] |              ^
2025-04-24 04:57:07,329 [INFO] |
2025-04-24 04:57:07,329 [INFO] help: remove these parentheses
2025-04-24 04:57:07,329 [INFO] |
2025-04-24 04:57:07,330 [INFO] 18011 ~             if dend == end_match_1 {
2025-04-24 04:57:07,330 [INFO] 18012 |                 string1
2025-04-24 04:57:07,330 [INFO] 18013 |             } else {
2025-04-24 04:57:07,330 [INFO] 18014 |                 string2.offset(-(size1 as isize))
2025-04-24 04:57:07,331 [INFO] 18015 ~             },
2025-04-24 04:57:07,331 [INFO] |
2025-04-24 04:57:07,331 [INFO] 
2025-04-24 04:57:07,331 [INFO] warning: unused label
2025-04-24 04:57:07,332 [INFO] --> src/psgen.rs:4554:5
2025-04-24 04:57:07,332 [INFO] |
2025-04-24 04:57:07,332 [INFO] 4554 |     'c_18653: {
2025-04-24 04:57:07,332 [INFO] |     ^^^^^^^^
2025-04-24 04:57:07,333 [INFO] 
2025-04-24 04:57:07,333 [INFO] warning: unused label
2025-04-24 04:57:07,333 [INFO] --> src/psgen.rs:4629:5
2025-04-24 04:57:07,333 [INFO] |
2025-04-24 04:57:07,333 [INFO] 4629 |     'c_8716: {
2025-04-24 04:57:07,333 [INFO] |     ^^^^^^^
2025-04-24 04:57:07,334 [INFO] 
2025-04-24 04:57:07,334 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:57:07,334 [INFO] --> states/prims.rs:467:17
2025-04-24 04:57:07,334 [INFO] |
2025-04-24 04:57:07,334 [INFO] 467 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:57:07,334 [INFO] |                 ^
2025-04-24 04:57:07,335 [INFO] ...
2025-04-24 04:57:07,335 [INFO] 472 |                 }),
2025-04-24 04:57:07,335 [INFO] |                  ^
2025-04-24 04:57:07,335 [INFO] |
2025-04-24 04:57:07,335 [INFO] help: remove these parentheses
2025-04-24 04:57:07,336 [INFO] |
2025-04-24 04:57:07,336 [INFO] 467 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:57:07,336 [INFO] 468 |                     &mut (*n).u.re.compiled
2025-04-24 04:57:07,336 [INFO] ...
2025-04-24 04:57:07,337 [INFO] 471 |                     &mut (*n).u.re.compiled
2025-04-24 04:57:07,337 [INFO] 472 ~                 },
2025-04-24 04:57:07,337 [INFO] |
2025-04-24 04:57:07,338 [INFO] 
2025-04-24 04:57:07,338 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:57:07,338 [INFO] --> states/prims.rs:523:17
2025-04-24 04:57:07,339 [INFO] |
2025-04-24 04:57:07,339 [INFO] 523 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:57:07,339 [INFO] |                 ^
2025-04-24 04:57:07,339 [INFO] ...
2025-04-24 04:57:07,339 [INFO] 528 |                 }),
2025-04-24 04:57:07,340 [INFO] |                  ^
2025-04-24 04:57:07,341 [INFO] |
2025-04-24 04:57:07,341 [INFO] help: remove these parentheses
2025-04-24 04:57:07,341 [INFO] |
2025-04-24 04:57:07,341 [INFO] 523 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:57:07,341 [INFO] 524 |                     &mut (*n).u.re.compiled
2025-04-24 04:57:07,341 [INFO] ...
2025-04-24 04:57:07,341 [INFO] 527 |                     &mut (*n).u.re.compiled
2025-04-24 04:57:07,342 [INFO] 528 ~                 },
2025-04-24 04:57:07,342 [INFO] |
2025-04-24 04:57:07,342 [INFO] 
2025-04-24 04:57:07,848 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:07,848 [INFO] --> compat/regex.rs:15755:9
2025-04-24 04:57:07,848 [INFO] |
2025-04-24 04:57:07,848 [INFO] 15753 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-24 04:57:07,848 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-24 04:57:07,849 [INFO] 15754 |         bufp,
2025-04-24 04:57:07,849 [INFO] 15755 |         0 as *mut libc::c_void,
2025-04-24 04:57:07,849 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-24 04:57:07,849 [INFO] |
2025-04-24 04:57:07,849 [INFO] = note: expected raw pointer `*const i8`
2025-04-24 04:57:07,849 [INFO] found raw pointer `*mut c_void`
2025-04-24 04:57:07,849 [INFO] note: function defined here
2025-04-24 04:57:07,850 [INFO] --> compat/regex.rs:15788:22
2025-04-24 04:57:07,850 [INFO] |
2025-04-24 04:57:07,850 [INFO] 15788 | unsafe extern "C" fn re_match_2_internal(
2025-04-24 04:57:07,850 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:07,850 [INFO] 15789 |     mut bufp: *mut re_pattern_buffer,
2025-04-24 04:57:07,850 [INFO] |     --------------------------------
2025-04-24 04:57:07,850 [INFO] 15790 |     mut string1: *const libc::c_char,
2025-04-24 04:57:07,850 [INFO] |     --------------------------------
2025-04-24 04:57:07,850 [INFO] 15791 |     mut size1: libc::c_int,
2025-04-24 04:57:07,851 [INFO] |     ----------------------
2025-04-24 04:57:07,851 [INFO] 15792 |     mut string2: *const libc::c_char,
2025-04-24 04:57:07,851 [INFO] |     --------------------------------
2025-04-24 04:57:07,851 [INFO] 15793 |     mut size2: libc::c_int,
2025-04-24 04:57:07,851 [INFO] |     ----------------------
2025-04-24 04:57:07,851 [INFO] 15794 |     mut pos: libc::c_int,
2025-04-24 04:57:07,851 [INFO] |     --------------------
2025-04-24 04:57:07,851 [INFO] 15795 |     mut regs: *mut re_registers,
2025-04-24 04:57:07,851 [INFO] |     ---------------------------
2025-04-24 04:57:07,851 [INFO] 15796 |     mut stop: libc::c_int,
2025-04-24 04:57:07,851 [INFO] |     ---------------------
2025-04-24 04:57:07,851 [INFO] 
2025-04-24 04:57:07,987 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-24 04:57:07,993 [INFO] warning: `c2rust_out` (lib) generated 24 warnings
2025-04-24 04:57:07,993 [INFO] error: could not compile `c2rust_out` due to previous error; 24 warnings emitted
2025-04-24 04:57:07,994 [ERROR] cargo build failed with code 101
2025-04-24 04:57:08,005 [INFO] Running: cargo build
2025-04-24 04:57:08,250 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-24 04:57:08,849 [INFO] warning: unused label
2025-04-24 04:57:08,849 [INFO] --> afmlib/afmparse.rs:1620:9
2025-04-24 04:57:08,849 [INFO] |
2025-04-24 04:57:08,849 [INFO] 1620 |         'c_3699: {
2025-04-24 04:57:08,850 [INFO] |         ^^^^^^^
2025-04-24 04:57:08,850 [INFO] |
2025-04-24 04:57:08,850 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-24 04:57:08,850 [INFO] 
2025-04-24 04:57:08,852 [INFO] warning: unused import: `::libc`
2025-04-24 04:57:08,853 [INFO] --> compat/getopt.rs:1:5
2025-04-24 04:57:08,853 [INFO] |
2025-04-24 04:57:08,854 [INFO] 1 | use ::libc;
2025-04-24 04:57:08,854 [INFO] |     ^^^^^^
2025-04-24 04:57:08,854 [INFO] |
2025-04-24 04:57:08,854 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-24 04:57:08,855 [INFO] 
2025-04-24 04:57:08,855 [INFO] warning: unused import: `::libc`
2025-04-24 04:57:08,855 [INFO] --> compat/getopt1.rs:1:5
2025-04-24 04:57:08,855 [INFO] |
2025-04-24 04:57:08,856 [INFO] 1 | use ::libc;
2025-04-24 04:57:08,856 [INFO] |     ^^^^^^
2025-04-24 04:57:08,856 [INFO] 
2025-04-24 04:57:08,859 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,860 [INFO] --> compat/regex.rs:15755:33
2025-04-24 04:57:08,860 [INFO] |
2025-04-24 04:57:08,860 [INFO] 15755 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,860 [INFO] |                       ^
2025-04-24 04:57:08,861 [INFO] ...
2025-04-24 04:57:08,864 [INFO] 15760 | ...                   })
2025-04-24 04:57:08,864 [INFO] |                        ^
2025-04-24 04:57:08,865 [INFO] |
2025-04-24 04:57:08,865 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-24 04:57:08,865 [INFO] help: remove these parentheses
2025-04-24 04:57:08,865 [INFO] |
2025-04-24 04:57:08,866 [INFO] 15755 ~                                 if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,866 [INFO] 15756 |                                     0 as libc::c_int
2025-04-24 04:57:08,866 [INFO] ...
2025-04-24 04:57:08,867 [INFO] 15759 |                                     1 as libc::c_int
2025-04-24 04:57:08,867 [INFO] 15760 ~                                 }
2025-04-24 04:57:08,867 [INFO] |
2025-04-24 04:57:08,867 [INFO] 
2025-04-24 04:57:08,868 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,868 [INFO] --> compat/regex.rs:16750:37
2025-04-24 04:57:08,868 [INFO] |
2025-04-24 04:57:08,869 [INFO] 16750 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,869 [INFO] |                       ^
2025-04-24 04:57:08,869 [INFO] ...
2025-04-24 04:57:08,869 [INFO] 16755 | ...                   })
2025-04-24 04:57:08,870 [INFO] |                        ^
2025-04-24 04:57:08,870 [INFO] |
2025-04-24 04:57:08,870 [INFO] help: remove these parentheses
2025-04-24 04:57:08,871 [INFO] |
2025-04-24 04:57:08,871 [INFO] 16750 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,871 [INFO] 16751 |                                         0 as libc::c_int
2025-04-24 04:57:08,871 [INFO] ...
2025-04-24 04:57:08,872 [INFO] 16754 |                                         1 as libc::c_int
2025-04-24 04:57:08,872 [INFO] 16755 ~                                     }
2025-04-24 04:57:08,872 [INFO] |
2025-04-24 04:57:08,872 [INFO] 
2025-04-24 04:57:08,873 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,873 [INFO] --> compat/regex.rs:17011:29
2025-04-24 04:57:08,873 [INFO] |
2025-04-24 04:57:08,874 [INFO] 17011 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,874 [INFO] |                       ^
2025-04-24 04:57:08,874 [INFO] ...
2025-04-24 04:57:08,874 [INFO] 17016 | ...                   })
2025-04-24 04:57:08,875 [INFO] |                        ^
2025-04-24 04:57:08,875 [INFO] |
2025-04-24 04:57:08,875 [INFO] help: remove these parentheses
2025-04-24 04:57:08,876 [INFO] |
2025-04-24 04:57:08,876 [INFO] 17011 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,876 [INFO] 17012 |                                 0 as libc::c_int
2025-04-24 04:57:08,876 [INFO] ...
2025-04-24 04:57:08,877 [INFO] 17015 |                                 1 as libc::c_int
2025-04-24 04:57:08,877 [INFO] 17016 ~                             }
2025-04-24 04:57:08,877 [INFO] |
2025-04-24 04:57:08,877 [INFO] 
2025-04-24 04:57:08,877 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,878 [INFO] --> compat/regex.rs:17298:29
2025-04-24 04:57:08,878 [INFO] |
2025-04-24 04:57:08,878 [INFO] 17298 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,878 [INFO] |                       ^
2025-04-24 04:57:08,879 [INFO] ...
2025-04-24 04:57:08,879 [INFO] 17303 | ...                   })
2025-04-24 04:57:08,879 [INFO] |                        ^
2025-04-24 04:57:08,879 [INFO] |
2025-04-24 04:57:08,879 [INFO] help: remove these parentheses
2025-04-24 04:57:08,880 [INFO] |
2025-04-24 04:57:08,880 [INFO] 17298 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,880 [INFO] 17299 |                                 0 as libc::c_int
2025-04-24 04:57:08,881 [INFO] ...
2025-04-24 04:57:08,881 [INFO] 17302 |                                 1 as libc::c_int
2025-04-24 04:57:08,881 [INFO] 17303 ~                             }
2025-04-24 04:57:08,881 [INFO] |
2025-04-24 04:57:08,882 [INFO] 
2025-04-24 04:57:08,882 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,882 [INFO] --> compat/regex.rs:17394:29
2025-04-24 04:57:08,882 [INFO] |
2025-04-24 04:57:08,882 [INFO] 17394 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,882 [INFO] |                       ^
2025-04-24 04:57:08,883 [INFO] ...
2025-04-24 04:57:08,883 [INFO] 17399 | ...                   })
2025-04-24 04:57:08,883 [INFO] |                        ^
2025-04-24 04:57:08,883 [INFO] |
2025-04-24 04:57:08,884 [INFO] help: remove these parentheses
2025-04-24 04:57:08,884 [INFO] |
2025-04-24 04:57:08,884 [INFO] 17394 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,884 [INFO] 17395 |                                 0 as libc::c_int
2025-04-24 04:57:08,885 [INFO] ...
2025-04-24 04:57:08,885 [INFO] 17398 |                                 1 as libc::c_int
2025-04-24 04:57:08,885 [INFO] 17399 ~                             }
2025-04-24 04:57:08,886 [INFO] |
2025-04-24 04:57:08,886 [INFO] 
2025-04-24 04:57:08,886 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,886 [INFO] --> compat/regex.rs:17535:29
2025-04-24 04:57:08,887 [INFO] |
2025-04-24 04:57:08,887 [INFO] 17535 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,887 [INFO] |                       ^
2025-04-24 04:57:08,887 [INFO] ...
2025-04-24 04:57:08,888 [INFO] 17541 | ...                   })
2025-04-24 04:57:08,888 [INFO] |                        ^
2025-04-24 04:57:08,888 [INFO] |
2025-04-24 04:57:08,889 [INFO] help: remove these parentheses
2025-04-24 04:57:08,889 [INFO] |
2025-04-24 04:57:08,890 [INFO] 17535 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,890 [INFO] 17536 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,890 [INFO] ...
2025-04-24 04:57:08,890 [INFO] 17540 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,891 [INFO] 17541 ~                             }
2025-04-24 04:57:08,891 [INFO] |
2025-04-24 04:57:08,891 [INFO] 
2025-04-24 04:57:08,892 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,892 [INFO] --> compat/regex.rs:17547:29
2025-04-24 04:57:08,892 [INFO] |
2025-04-24 04:57:08,893 [INFO] 17547 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,893 [INFO] |                       ^
2025-04-24 04:57:08,893 [INFO] ...
2025-04-24 04:57:08,893 [INFO] 17551 | ...                   })
2025-04-24 04:57:08,894 [INFO] |                        ^
2025-04-24 04:57:08,894 [INFO] |
2025-04-24 04:57:08,894 [INFO] help: remove these parentheses
2025-04-24 04:57:08,894 [INFO] |
2025-04-24 04:57:08,895 [INFO] 17547 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,895 [INFO] 17548 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,896 [INFO] 17549 |                             } else {
2025-04-24 04:57:08,896 [INFO] 17550 |                                 *d as libc::c_int
2025-04-24 04:57:08,897 [INFO] 17551 ~                             }
2025-04-24 04:57:08,897 [INFO] |
2025-04-24 04:57:08,897 [INFO] 
2025-04-24 04:57:08,897 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,897 [INFO] --> compat/regex.rs:17574:29
2025-04-24 04:57:08,898 [INFO] |
2025-04-24 04:57:08,898 [INFO] 17574 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,899 [INFO] |                       ^
2025-04-24 04:57:08,899 [INFO] ...
2025-04-24 04:57:08,899 [INFO] 17580 | ...                   })
2025-04-24 04:57:08,899 [INFO] |                        ^
2025-04-24 04:57:08,900 [INFO] |
2025-04-24 04:57:08,900 [INFO] help: remove these parentheses
2025-04-24 04:57:08,900 [INFO] |
2025-04-24 04:57:08,901 [INFO] 17574 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,901 [INFO] 17575 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,901 [INFO] ...
2025-04-24 04:57:08,901 [INFO] 17579 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,902 [INFO] 17580 ~                             }
2025-04-24 04:57:08,902 [INFO] |
2025-04-24 04:57:08,902 [INFO] 
2025-04-24 04:57:08,902 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,902 [INFO] --> compat/regex.rs:17586:29
2025-04-24 04:57:08,903 [INFO] |
2025-04-24 04:57:08,903 [INFO] 17586 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,903 [INFO] |                       ^
2025-04-24 04:57:08,903 [INFO] ...
2025-04-24 04:57:08,904 [INFO] 17590 | ...                   })
2025-04-24 04:57:08,904 [INFO] |                        ^
2025-04-24 04:57:08,904 [INFO] |
2025-04-24 04:57:08,905 [INFO] help: remove these parentheses
2025-04-24 04:57:08,905 [INFO] |
2025-04-24 04:57:08,905 [INFO] 17586 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,906 [INFO] 17587 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,906 [INFO] 17588 |                             } else {
2025-04-24 04:57:08,906 [INFO] 17589 |                                 *d as libc::c_int
2025-04-24 04:57:08,907 [INFO] 17590 ~                             }
2025-04-24 04:57:08,907 [INFO] |
2025-04-24 04:57:08,908 [INFO] 
2025-04-24 04:57:08,908 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,908 [INFO] --> compat/regex.rs:17604:25
2025-04-24 04:57:08,908 [INFO] |
2025-04-24 04:57:08,909 [INFO] 17604 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,909 [INFO] |                         ^
2025-04-24 04:57:08,909 [INFO] ...
2025-04-24 04:57:08,910 [INFO] 17608 |                         })
2025-04-24 04:57:08,910 [INFO] |                          ^
2025-04-24 04:57:08,911 [INFO] |
2025-04-24 04:57:08,911 [INFO] help: remove these parentheses
2025-04-24 04:57:08,911 [INFO] |
2025-04-24 04:57:08,912 [INFO] 17604 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,912 [INFO] 17605 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,912 [INFO] 17606 |                         } else {
2025-04-24 04:57:08,913 [INFO] 17607 |                             *d as libc::c_int
2025-04-24 04:57:08,913 [INFO] 17608 ~                         }
2025-04-24 04:57:08,913 [INFO] |
2025-04-24 04:57:08,914 [INFO] 
2025-04-24 04:57:08,914 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,914 [INFO] --> compat/regex.rs:17617:33
2025-04-24 04:57:08,915 [INFO] |
2025-04-24 04:57:08,915 [INFO] 17617 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,915 [INFO] |                       ^
2025-04-24 04:57:08,916 [INFO] ...
2025-04-24 04:57:08,916 [INFO] 17623 | ...                   })
2025-04-24 04:57:08,916 [INFO] |                        ^
2025-04-24 04:57:08,916 [INFO] |
2025-04-24 04:57:08,917 [INFO] help: remove these parentheses
2025-04-24 04:57:08,917 [INFO] |
2025-04-24 04:57:08,917 [INFO] 17617 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,918 [INFO] 17618 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,918 [INFO] ...
2025-04-24 04:57:08,918 [INFO] 17622 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,919 [INFO] 17623 ~                                 }
2025-04-24 04:57:08,919 [INFO] |
2025-04-24 04:57:08,919 [INFO] 
2025-04-24 04:57:08,919 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,920 [INFO] --> compat/regex.rs:17638:29
2025-04-24 04:57:08,920 [INFO] |
2025-04-24 04:57:08,921 [INFO] 17638 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,921 [INFO] |                       ^
2025-04-24 04:57:08,921 [INFO] ...
2025-04-24 04:57:08,921 [INFO] 17644 | ...                   })
2025-04-24 04:57:08,922 [INFO] |                        ^
2025-04-24 04:57:08,922 [INFO] |
2025-04-24 04:57:08,922 [INFO] help: remove these parentheses
2025-04-24 04:57:08,922 [INFO] |
2025-04-24 04:57:08,923 [INFO] 17638 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,923 [INFO] 17639 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:57:08,924 [INFO] ...
2025-04-24 04:57:08,924 [INFO] 17643 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,924 [INFO] 17644 ~                             }
2025-04-24 04:57:08,925 [INFO] |
2025-04-24 04:57:08,925 [INFO] 
2025-04-24 04:57:08,925 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,926 [INFO] --> compat/regex.rs:17649:29
2025-04-24 04:57:08,926 [INFO] |
2025-04-24 04:57:08,926 [INFO] 17649 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,926 [INFO] |                       ^
2025-04-24 04:57:08,927 [INFO] ...
2025-04-24 04:57:08,927 [INFO] 17653 | ...                   })
2025-04-24 04:57:08,927 [INFO] |                        ^
2025-04-24 04:57:08,928 [INFO] |
2025-04-24 04:57:08,928 [INFO] help: remove these parentheses
2025-04-24 04:57:08,929 [INFO] |
2025-04-24 04:57:08,930 [INFO] 17649 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,930 [INFO] 17650 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,930 [INFO] 17651 |                             } else {
2025-04-24 04:57:08,930 [INFO] 17652 |                                 *d as libc::c_int
2025-04-24 04:57:08,931 [INFO] 17653 ~                             }
2025-04-24 04:57:08,931 [INFO] |
2025-04-24 04:57:08,931 [INFO] 
2025-04-24 04:57:08,932 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,932 [INFO] --> compat/regex.rs:17680:33
2025-04-24 04:57:08,932 [INFO] |
2025-04-24 04:57:08,933 [INFO] 17680 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,933 [INFO] |                       ^
2025-04-24 04:57:08,933 [INFO] ...
2025-04-24 04:57:08,933 [INFO] 17684 | ...                   })
2025-04-24 04:57:08,933 [INFO] |                        ^
2025-04-24 04:57:08,934 [INFO] |
2025-04-24 04:57:08,934 [INFO] help: remove these parentheses
2025-04-24 04:57:08,934 [INFO] |
2025-04-24 04:57:08,934 [INFO] 17680 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,935 [INFO] 17681 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,935 [INFO] 17682 |                                 } else {
2025-04-24 04:57:08,935 [INFO] 17683 |                                     *d as libc::c_int
2025-04-24 04:57:08,935 [INFO] 17684 ~                                 }
2025-04-24 04:57:08,936 [INFO] |
2025-04-24 04:57:08,936 [INFO] 
2025-04-24 04:57:08,936 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,936 [INFO] --> compat/regex.rs:17736:33
2025-04-24 04:57:08,937 [INFO] |
2025-04-24 04:57:08,937 [INFO] 17736 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,937 [INFO] |                       ^
2025-04-24 04:57:08,937 [INFO] ...
2025-04-24 04:57:08,937 [INFO] 17740 | ...                   })
2025-04-24 04:57:08,938 [INFO] |                        ^
2025-04-24 04:57:08,938 [INFO] |
2025-04-24 04:57:08,938 [INFO] help: remove these parentheses
2025-04-24 04:57:08,939 [INFO] |
2025-04-24 04:57:08,939 [INFO] 17736 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:57:08,939 [INFO] 17737 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:57:08,939 [INFO] 17738 |                                 } else {
2025-04-24 04:57:08,940 [INFO] 17739 |                                     *d as libc::c_int
2025-04-24 04:57:08,940 [INFO] 17740 ~                                 }
2025-04-24 04:57:08,940 [INFO] |
2025-04-24 04:57:08,941 [INFO] 
2025-04-24 04:57:08,941 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:57:08,941 [INFO] --> compat/regex.rs:17902:37
2025-04-24 04:57:08,941 [INFO] |
2025-04-24 04:57:08,942 [INFO] 17902 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,942 [INFO] |                       ^
2025-04-24 04:57:08,942 [INFO] ...
2025-04-24 04:57:08,942 [INFO] 17907 | ...                   })
2025-04-24 04:57:08,942 [INFO] |                        ^
2025-04-24 04:57:08,943 [INFO] |
2025-04-24 04:57:08,943 [INFO] help: remove these parentheses
2025-04-24 04:57:08,943 [INFO] |
2025-04-24 04:57:08,943 [INFO] 17902 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:57:08,944 [INFO] 17903 |                                         0 as libc::c_int
2025-04-24 04:57:08,944 [INFO] ...
2025-04-24 04:57:08,944 [INFO] 17906 |                                         1 as libc::c_int
2025-04-24 04:57:08,944 [INFO] 17907 ~                                     }
2025-04-24 04:57:08,945 [INFO] |
2025-04-24 04:57:08,945 [INFO] 
2025-04-24 04:57:08,945 [INFO] warning: unnecessary parentheses around method argument
2025-04-24 04:57:08,946 [INFO] --> compat/regex.rs:18239:13
2025-04-24 04:57:08,946 [INFO] |
2025-04-24 04:57:08,946 [INFO] 18239 |             (if dend == end_match_1 {
2025-04-24 04:57:08,947 [INFO] |             ^
2025-04-24 04:57:08,947 [INFO] ...
2025-04-24 04:57:08,947 [INFO] 18243 |             }),
2025-04-24 04:57:08,947 [INFO] |              ^
2025-04-24 04:57:08,948 [INFO] |
2025-04-24 04:57:08,948 [INFO] help: remove these parentheses
2025-04-24 04:57:08,949 [INFO] |
2025-04-24 04:57:08,949 [INFO] 18239 ~             if dend == end_match_1 {
2025-04-24 04:57:08,949 [INFO] 18240 |                 string1
2025-04-24 04:57:08,950 [INFO] 18241 |             } else {
2025-04-24 04:57:08,950 [INFO] 18242 |                 string2.offset(-(size1 as isize))
2025-04-24 04:57:08,950 [INFO] 18243 ~             },
2025-04-24 04:57:08,950 [INFO] |
2025-04-24 04:57:08,951 [INFO] 
2025-04-24 04:57:08,951 [INFO] warning: unused label
2025-04-24 04:57:08,951 [INFO] --> src/psgen.rs:5277:5
2025-04-24 04:57:08,951 [INFO] |
2025-04-24 04:57:08,952 [INFO] 5277 |     'c_18653: {
2025-04-24 04:57:08,952 [INFO] |     ^^^^^^^^
2025-04-24 04:57:08,952 [INFO] 
2025-04-24 04:57:08,953 [INFO] warning: unused label
2025-04-24 04:57:08,953 [INFO] --> src/psgen.rs:5352:5
2025-04-24 04:57:08,953 [INFO] |
2025-04-24 04:57:08,953 [INFO] 5352 |     'c_8716: {
2025-04-24 04:57:08,954 [INFO] |     ^^^^^^^
2025-04-24 04:57:08,954 [INFO] 
2025-04-24 04:57:08,954 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:57:08,954 [INFO] --> states/prims.rs:691:17
2025-04-24 04:57:08,955 [INFO] |
2025-04-24 04:57:08,955 [INFO] 691 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:57:08,955 [INFO] |                 ^
2025-04-24 04:57:08,956 [INFO] ...
2025-04-24 04:57:08,956 [INFO] 696 |                 }),
2025-04-24 04:57:08,956 [INFO] |                  ^
2025-04-24 04:57:08,957 [INFO] |
2025-04-24 04:57:08,957 [INFO] help: remove these parentheses
2025-04-24 04:57:08,957 [INFO] |
2025-04-24 04:57:08,957 [INFO] 691 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:57:08,957 [INFO] 692 |                     &mut (*n).u.re.compiled
2025-04-24 04:57:08,958 [INFO] ...
2025-04-24 04:57:08,958 [INFO] 695 |                     &mut (*n).u.re.compiled
2025-04-24 04:57:08,958 [INFO] 696 ~                 },
2025-04-24 04:57:08,958 [INFO] |
2025-04-24 04:57:08,959 [INFO] 
2025-04-24 04:57:08,959 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:57:08,959 [INFO] --> states/prims.rs:747:17
2025-04-24 04:57:08,959 [INFO] |
2025-04-24 04:57:08,960 [INFO] 747 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:57:08,960 [INFO] |                 ^
2025-04-24 04:57:08,961 [INFO] ...
2025-04-24 04:57:08,961 [INFO] 752 |                 }),
2025-04-24 04:57:08,961 [INFO] |                  ^
2025-04-24 04:57:08,961 [INFO] |
2025-04-24 04:57:08,962 [INFO] help: remove these parentheses
2025-04-24 04:57:08,962 [INFO] |
2025-04-24 04:57:08,962 [INFO] 747 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:57:08,962 [INFO] 748 |                     &mut (*n).u.re.compiled
2025-04-24 04:57:08,963 [INFO] ...
2025-04-24 04:57:08,963 [INFO] 751 |                     &mut (*n).u.re.compiled
2025-04-24 04:57:08,963 [INFO] 752 ~                 },
2025-04-24 04:57:08,963 [INFO] |
2025-04-24 04:57:08,964 [INFO] 
2025-04-24 04:57:09,145 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,146 [INFO] --> afmlib/afm.rs:10:1
2025-04-24 04:57:09,146 [INFO] |
2025-04-24 04:57:09,146 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:57:09,147 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,147 [INFO] |
2025-04-24 04:57:09,147 [INFO] = note: `#[warn(unused_attributes)]` on by default
2025-04-24 04:57:09,147 [INFO] 
2025-04-24 04:57:09,148 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,148 [INFO] --> afmlib/afmparse.rs:10:1
2025-04-24 04:57:09,148 [INFO] |
2025-04-24 04:57:09,148 [INFO] 10 | #![feature(extern_types, label_break_value)]
2025-04-24 04:57:09,149 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,149 [INFO] 
2025-04-24 04:57:09,149 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,149 [INFO] --> afmlib/deffont.rs:10:1
2025-04-24 04:57:09,149 [INFO] |
2025-04-24 04:57:09,150 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:57:09,150 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,150 [INFO] 
2025-04-24 04:57:09,181 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,181 [INFO] --> src/main.rs:10:1
2025-04-24 04:57:09,181 [INFO] |
2025-04-24 04:57:09,182 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:57:09,182 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,182 [INFO] 
2025-04-24 04:57:09,182 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,183 [INFO] --> src/psgen.rs:10:1
2025-04-24 04:57:09,183 [INFO] |
2025-04-24 04:57:09,183 [INFO] 10 | #![feature(extern_types, label_break_value)]
2025-04-24 04:57:09,183 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,184 [INFO] 
2025-04-24 04:57:09,184 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,184 [INFO] --> src/util.rs:10:1
2025-04-24 04:57:09,185 [INFO] |
2025-04-24 04:57:09,185 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:57:09,185 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,186 [INFO] 
2025-04-24 04:57:09,203 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,203 [INFO] --> states/prims.rs:10:1
2025-04-24 04:57:09,203 [INFO] |
2025-04-24 04:57:09,203 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:57:09,204 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,204 [INFO] 
2025-04-24 04:57:09,204 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,204 [INFO] --> states/process.rs:10:1
2025-04-24 04:57:09,205 [INFO] |
2025-04-24 04:57:09,205 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:57:09,205 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,205 [INFO] 
2025-04-24 04:57:09,206 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:57:09,206 [INFO] --> states/utils.rs:10:1
2025-04-24 04:57:09,206 [INFO] |
2025-04-24 04:57:09,206 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:57:09,206 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,207 [INFO] 
2025-04-24 04:57:09,693 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,694 [INFO] --> compat/regex.rs:15332:15
2025-04-24 04:57:09,694 [INFO] |
2025-04-24 04:57:09,694 [INFO] 15332 |     store_op1(op as libc::c_uint, loc, arg);
2025-04-24 04:57:09,694 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-24 04:57:09,694 [INFO] |     |
2025-04-24 04:57:09,694 [INFO] |     arguments to this function are incorrect
2025-04-24 04:57:09,694 [INFO] |
2025-04-24 04:57:09,695 [INFO] note: function defined here
2025-04-24 04:57:09,695 [INFO] --> compat/regex.rs:15292:22
2025-04-24 04:57:09,695 [INFO] |
2025-04-24 04:57:09,695 [INFO] 15292 | unsafe extern "C" fn store_op1(
2025-04-24 04:57:09,695 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,695 [INFO] 15293 |     mut op: re_opcode_t,
2025-04-24 04:57:09,695 [INFO] |     -------------------
2025-04-24 04:57:09,695 [INFO] 15294 |     mut loc: *mut libc::c_uchar,
2025-04-24 04:57:09,695 [INFO] |     ---------------------------
2025-04-24 04:57:09,696 [INFO] 15295 |     mut arg: libc::c_int,
2025-04-24 04:57:09,696 [INFO] |     --------------------
2025-04-24 04:57:09,696 [INFO] 
2025-04-24 04:57:09,706 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,706 [INFO] --> compat/regex.rs:15348:15
2025-04-24 04:57:09,706 [INFO] |
2025-04-24 04:57:09,706 [INFO] 15348 |     store_op2(op as libc::c_uint, loc, arg1, arg2);
2025-04-24 04:57:09,706 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-24 04:57:09,706 [INFO] |     |
2025-04-24 04:57:09,706 [INFO] |     arguments to this function are incorrect
2025-04-24 04:57:09,706 [INFO] |
2025-04-24 04:57:09,707 [INFO] note: function defined here
2025-04-24 04:57:09,707 [INFO] --> compat/regex.rs:15303:22
2025-04-24 04:57:09,707 [INFO] |
2025-04-24 04:57:09,707 [INFO] 15303 | unsafe extern "C" fn store_op2(
2025-04-24 04:57:09,707 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,707 [INFO] 15304 |     mut op: re_opcode_t,
2025-04-24 04:57:09,707 [INFO] |     -------------------
2025-04-24 04:57:09,708 [INFO] 15305 |     mut loc: *mut libc::c_uchar,
2025-04-24 04:57:09,708 [INFO] |     ---------------------------
2025-04-24 04:57:09,708 [INFO] 15306 |     mut arg1: libc::c_int,
2025-04-24 04:57:09,708 [INFO] |     ---------------------
2025-04-24 04:57:09,708 [INFO] 15307 |     mut arg2: libc::c_int,
2025-04-24 04:57:09,709 [INFO] |     ---------------------
2025-04-24 04:57:09,709 [INFO] 
2025-04-24 04:57:09,729 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,730 [INFO] --> compat/regex.rs:16009:9
2025-04-24 04:57:09,730 [INFO] |
2025-04-24 04:57:09,730 [INFO] 16007 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-24 04:57:09,730 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-24 04:57:09,730 [INFO] 16008 |         bufp,
2025-04-24 04:57:09,730 [INFO] 16009 |         0 as *mut libc::c_void,
2025-04-24 04:57:09,730 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-24 04:57:09,731 [INFO] |
2025-04-24 04:57:09,731 [INFO] = note: expected raw pointer `*const i8`
2025-04-24 04:57:09,731 [INFO] found raw pointer `*mut c_void`
2025-04-24 04:57:09,731 [INFO] note: function defined here
2025-04-24 04:57:09,731 [INFO] --> compat/regex.rs:16042:22
2025-04-24 04:57:09,731 [INFO] |
2025-04-24 04:57:09,732 [INFO] 16042 | unsafe extern "C" fn re_match_2_internal(
2025-04-24 04:57:09,732 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-24 04:57:09,732 [INFO] 16043 |     mut bufp: *mut re_pattern_buffer,
2025-04-24 04:57:09,732 [INFO] |     --------------------------------
2025-04-24 04:57:09,732 [INFO] 16044 |     mut string1: *const libc::c_char,
2025-04-24 04:57:09,733 [INFO] |     --------------------------------
2025-04-24 04:57:09,733 [INFO] 16045 |     mut size1: libc::c_int,
2025-04-24 04:57:09,733 [INFO] |     ----------------------
2025-04-24 04:57:09,733 [INFO] 16046 |     mut string2: *const libc::c_char,
2025-04-24 04:57:09,733 [INFO] |     --------------------------------
2025-04-24 04:57:09,733 [INFO] 16047 |     mut size2: libc::c_int,
2025-04-24 04:57:09,733 [INFO] |     ----------------------
2025-04-24 04:57:09,733 [INFO] 16048 |     mut pos: libc::c_int,
2025-04-24 04:57:09,734 [INFO] |     --------------------
2025-04-24 04:57:09,734 [INFO] 16049 |     mut regs: *mut re_registers,
2025-04-24 04:57:09,734 [INFO] |     ---------------------------
2025-04-24 04:57:09,734 [INFO] 16050 |     mut stop: libc::c_int,
2025-04-24 04:57:09,734 [INFO] |     ---------------------
2025-04-24 04:57:09,735 [INFO] 
2025-04-24 04:57:09,897 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,897 [INFO] --> states/prims.rs:849:9
2025-04-24 04:57:09,898 [INFO] |
2025-04-24 04:57:09,898 [INFO] 847 |     n = match_arg(
2025-04-24 04:57:09,898 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:57:09,898 [INFO] 848 |         prim_name,
2025-04-24 04:57:09,898 [INFO] 849 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:57:09,898 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:09,898 [INFO] |
2025-04-24 04:57:09,898 [INFO] note: function defined here
2025-04-24 04:57:09,899 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:09,899 [INFO] |
2025-04-24 04:57:09,899 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:57:09,899 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,899 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:09,899 [INFO] |     --------------------------------
2025-04-24 04:57:09,899 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:57:09,899 [INFO] |     --------------------
2025-04-24 04:57:09,900 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:09,900 [INFO] |     ----------------------------
2025-04-24 04:57:09,900 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:57:09,900 [INFO] |     -------------------------
2025-04-24 04:57:09,901 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:57:09,901 [INFO] |     -------------------------
2025-04-24 04:57:09,901 [INFO] 
2025-04-24 04:57:09,909 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,910 [INFO] --> states/prims.rs:916:9
2025-04-24 04:57:09,910 [INFO] |
2025-04-24 04:57:09,910 [INFO] 914 |     var = match_arg(
2025-04-24 04:57:09,910 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:09,910 [INFO] 915 |         prim_name,
2025-04-24 04:57:09,910 [INFO] 916 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:09,910 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:09,910 [INFO] |
2025-04-24 04:57:09,911 [INFO] note: function defined here
2025-04-24 04:57:09,911 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:09,911 [INFO] |
2025-04-24 04:57:09,911 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:57:09,911 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,911 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:09,911 [INFO] |     --------------------------------
2025-04-24 04:57:09,912 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:57:09,912 [INFO] |     --------------------
2025-04-24 04:57:09,912 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:09,912 [INFO] |     ----------------------------
2025-04-24 04:57:09,912 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:57:09,912 [INFO] |     -------------------------
2025-04-24 04:57:09,912 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:57:09,912 [INFO] |     -------------------------
2025-04-24 04:57:09,913 [INFO] 
2025-04-24 04:57:09,924 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,924 [INFO] --> states/prims.rs:969:9
2025-04-24 04:57:09,924 [INFO] |
2025-04-24 04:57:09,925 [INFO] 967 |     n = match_arg(
2025-04-24 04:57:09,925 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:57:09,925 [INFO] 968 |         prim_name,
2025-04-24 04:57:09,925 [INFO] 969 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:57:09,925 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:09,925 [INFO] |
2025-04-24 04:57:09,925 [INFO] note: function defined here
2025-04-24 04:57:09,926 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:09,926 [INFO] |
2025-04-24 04:57:09,926 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:57:09,926 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,926 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:09,926 [INFO] |     --------------------------------
2025-04-24 04:57:09,927 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:57:09,927 [INFO] |     --------------------
2025-04-24 04:57:09,927 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:09,927 [INFO] |     ----------------------------
2025-04-24 04:57:09,927 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:57:09,927 [INFO] |     -------------------------
2025-04-24 04:57:09,928 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:57:09,928 [INFO] |     -------------------------
2025-04-24 04:57:09,928 [INFO] 
2025-04-24 04:57:09,937 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,937 [INFO] --> states/prims.rs:1147:9
2025-04-24 04:57:09,938 [INFO] |
2025-04-24 04:57:09,938 [INFO] 1145 |     s = match_arg(
2025-04-24 04:57:09,938 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:57:09,939 [INFO] 1146 |         prim_name,
2025-04-24 04:57:09,939 [INFO] 1147 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:09,939 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:09,939 [INFO] |
2025-04-24 04:57:09,940 [INFO] note: function defined here
2025-04-24 04:57:09,940 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:09,940 [INFO] |
2025-04-24 04:57:09,941 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:09,941 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,941 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:09,942 [INFO] |     --------------------------------
2025-04-24 04:57:09,942 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:09,942 [INFO] |     --------------------
2025-04-24 04:57:09,942 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:09,943 [INFO] |     ----------------------------
2025-04-24 04:57:09,943 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:09,943 [INFO] |     -------------------------
2025-04-24 04:57:09,944 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:09,944 [INFO] |     -------------------------
2025-04-24 04:57:09,944 [INFO] 
2025-04-24 04:57:09,952 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,953 [INFO] --> states/prims.rs:1334:9
2025-04-24 04:57:09,953 [INFO] |
2025-04-24 04:57:09,953 [INFO] 1332 |     start = match_arg(
2025-04-24 04:57:09,953 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:57:09,953 [INFO] 1333 |         prim_name,
2025-04-24 04:57:09,953 [INFO] 1334 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:57:09,954 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:09,954 [INFO] |
2025-04-24 04:57:09,954 [INFO] note: function defined here
2025-04-24 04:57:09,954 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:09,954 [INFO] |
2025-04-24 04:57:09,954 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:09,955 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,955 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:09,955 [INFO] |     --------------------------------
2025-04-24 04:57:09,955 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:09,955 [INFO] |     --------------------
2025-04-24 04:57:09,956 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:09,956 [INFO] |     ----------------------------
2025-04-24 04:57:09,956 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:09,957 [INFO] |     -------------------------
2025-04-24 04:57:09,957 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:09,957 [INFO] |     -------------------------
2025-04-24 04:57:09,958 [INFO] 
2025-04-24 04:57:09,965 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,965 [INFO] --> states/prims.rs:1341:9
2025-04-24 04:57:09,965 [INFO] |
2025-04-24 04:57:09,966 [INFO] 1339 |     end = match_arg(
2025-04-24 04:57:09,966 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:09,966 [INFO] 1340 |         prim_name,
2025-04-24 04:57:09,967 [INFO] 1341 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:57:09,967 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:09,967 [INFO] |
2025-04-24 04:57:09,968 [INFO] note: function defined here
2025-04-24 04:57:09,968 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:09,968 [INFO] |
2025-04-24 04:57:09,968 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:09,969 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,969 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:09,969 [INFO] |     --------------------------------
2025-04-24 04:57:09,970 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:09,970 [INFO] |     --------------------
2025-04-24 04:57:09,970 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:09,971 [INFO] |     ----------------------------
2025-04-24 04:57:09,971 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:09,971 [INFO] |     -------------------------
2025-04-24 04:57:09,971 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:09,971 [INFO] |     -------------------------
2025-04-24 04:57:09,972 [INFO] 
2025-04-24 04:57:09,980 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,980 [INFO] --> states/prims.rs:1468:9
2025-04-24 04:57:09,980 [INFO] |
2025-04-24 04:57:09,980 [INFO] 1466 |     str = match_arg(
2025-04-24 04:57:09,980 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:09,980 [INFO] 1467 |         prim_name,
2025-04-24 04:57:09,980 [INFO] 1468 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:09,981 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:09,981 [INFO] |
2025-04-24 04:57:09,981 [INFO] note: function defined here
2025-04-24 04:57:09,981 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:09,981 [INFO] |
2025-04-24 04:57:09,981 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:09,981 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,981 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:09,982 [INFO] |     --------------------------------
2025-04-24 04:57:09,982 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:09,982 [INFO] |     --------------------
2025-04-24 04:57:09,982 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:09,982 [INFO] |     ----------------------------
2025-04-24 04:57:09,982 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:09,982 [INFO] |     -------------------------
2025-04-24 04:57:09,982 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:09,982 [INFO] |     -------------------------
2025-04-24 04:57:09,982 [INFO] 
2025-04-24 04:57:09,991 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:09,991 [INFO] --> states/prims.rs:1512:9
2025-04-24 04:57:09,992 [INFO] |
2025-04-24 04:57:09,992 [INFO] 1510 |     ch = match_arg(
2025-04-24 04:57:09,992 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:09,992 [INFO] 1511 |         prim_name,
2025-04-24 04:57:09,992 [INFO] 1512 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:57:09,992 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:09,993 [INFO] |
2025-04-24 04:57:09,993 [INFO] note: function defined here
2025-04-24 04:57:09,993 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:09,993 [INFO] |
2025-04-24 04:57:09,993 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:09,993 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:09,994 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:09,994 [INFO] |     --------------------------------
2025-04-24 04:57:09,994 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:09,994 [INFO] |     --------------------
2025-04-24 04:57:09,995 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:09,995 [INFO] |     ----------------------------
2025-04-24 04:57:09,995 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:09,995 [INFO] |     -------------------------
2025-04-24 04:57:09,995 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:09,996 [INFO] |     -------------------------
2025-04-24 04:57:09,996 [INFO] 
2025-04-24 04:57:10,004 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,004 [INFO] --> states/prims.rs:1519:9
2025-04-24 04:57:10,005 [INFO] |
2025-04-24 04:57:10,005 [INFO] 1517 |     st = match_arg(
2025-04-24 04:57:10,005 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,005 [INFO] 1518 |         prim_name,
2025-04-24 04:57:10,006 [INFO] 1519 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,006 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,006 [INFO] |
2025-04-24 04:57:10,006 [INFO] note: function defined here
2025-04-24 04:57:10,006 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,006 [INFO] |
2025-04-24 04:57:10,007 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,007 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,007 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,008 [INFO] |     --------------------------------
2025-04-24 04:57:10,008 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,008 [INFO] |     --------------------
2025-04-24 04:57:10,009 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,009 [INFO] |     ----------------------------
2025-04-24 04:57:10,009 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,010 [INFO] |     -------------------------
2025-04-24 04:57:10,010 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,010 [INFO] |     -------------------------
2025-04-24 04:57:10,010 [INFO] 
2025-04-24 04:57:10,019 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,019 [INFO] --> states/prims.rs:1580:9
2025-04-24 04:57:10,020 [INFO] |
2025-04-24 04:57:10,020 [INFO] 1578 |     str = match_arg(
2025-04-24 04:57:10,020 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:10,020 [INFO] 1579 |         prim_name,
2025-04-24 04:57:10,020 [INFO] 1580 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,020 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,021 [INFO] |
2025-04-24 04:57:10,021 [INFO] note: function defined here
2025-04-24 04:57:10,021 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,021 [INFO] |
2025-04-24 04:57:10,021 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,021 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,022 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,022 [INFO] |     --------------------------------
2025-04-24 04:57:10,022 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,022 [INFO] |     --------------------
2025-04-24 04:57:10,022 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,022 [INFO] |     ----------------------------
2025-04-24 04:57:10,023 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,023 [INFO] |     -------------------------
2025-04-24 04:57:10,023 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,023 [INFO] |     -------------------------
2025-04-24 04:57:10,024 [INFO] 
2025-04-24 04:57:10,036 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,036 [INFO] --> states/prims.rs:1587:9
2025-04-24 04:57:10,036 [INFO] |
2025-04-24 04:57:10,037 [INFO] 1585 |     re = match_arg(
2025-04-24 04:57:10,037 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,037 [INFO] 1586 |         prim_name,
2025-04-24 04:57:10,037 [INFO] 1587 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,037 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,038 [INFO] |
2025-04-24 04:57:10,038 [INFO] note: function defined here
2025-04-24 04:57:10,038 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,038 [INFO] |
2025-04-24 04:57:10,038 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,038 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,039 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,039 [INFO] |     --------------------------------
2025-04-24 04:57:10,039 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,040 [INFO] |     --------------------
2025-04-24 04:57:10,040 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,041 [INFO] |     ----------------------------
2025-04-24 04:57:10,041 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,041 [INFO] |     -------------------------
2025-04-24 04:57:10,042 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,042 [INFO] |     -------------------------
2025-04-24 04:57:10,042 [INFO] 
2025-04-24 04:57:10,050 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,050 [INFO] --> states/prims.rs:1919:9
2025-04-24 04:57:10,050 [INFO] |
2025-04-24 04:57:10,050 [INFO] 1917 |     str = match_arg(
2025-04-24 04:57:10,051 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:10,051 [INFO] 1918 |         prim_name,
2025-04-24 04:57:10,051 [INFO] 1919 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,051 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,051 [INFO] |
2025-04-24 04:57:10,052 [INFO] note: function defined here
2025-04-24 04:57:10,052 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,052 [INFO] |
2025-04-24 04:57:10,052 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,053 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,053 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,053 [INFO] |     --------------------------------
2025-04-24 04:57:10,053 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,054 [INFO] |     --------------------
2025-04-24 04:57:10,054 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,054 [INFO] |     ----------------------------
2025-04-24 04:57:10,054 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,055 [INFO] |     -------------------------
2025-04-24 04:57:10,055 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,055 [INFO] |     -------------------------
2025-04-24 04:57:10,055 [INFO] 
2025-04-24 04:57:10,063 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,064 [INFO] --> states/prims.rs:1926:9
2025-04-24 04:57:10,064 [INFO] |
2025-04-24 04:57:10,064 [INFO] 1924 |     re = match_arg(
2025-04-24 04:57:10,064 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,064 [INFO] 1925 |         prim_name,
2025-04-24 04:57:10,064 [INFO] 1926 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,064 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,064 [INFO] |
2025-04-24 04:57:10,065 [INFO] note: function defined here
2025-04-24 04:57:10,065 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,065 [INFO] |
2025-04-24 04:57:10,065 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,065 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,066 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,066 [INFO] |     --------------------------------
2025-04-24 04:57:10,066 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,066 [INFO] |     --------------------
2025-04-24 04:57:10,066 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,066 [INFO] |     ----------------------------
2025-04-24 04:57:10,066 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,066 [INFO] |     -------------------------
2025-04-24 04:57:10,067 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,067 [INFO] |     -------------------------
2025-04-24 04:57:10,067 [INFO] 
2025-04-24 04:57:10,073 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,073 [INFO] --> states/prims.rs:1933:9
2025-04-24 04:57:10,073 [INFO] |
2025-04-24 04:57:10,074 [INFO] 1931 |     subst = match_arg(
2025-04-24 04:57:10,074 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:57:10,074 [INFO] 1932 |         prim_name,
2025-04-24 04:57:10,074 [INFO] 1933 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,074 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,074 [INFO] |
2025-04-24 04:57:10,075 [INFO] note: function defined here
2025-04-24 04:57:10,075 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,075 [INFO] |
2025-04-24 04:57:10,075 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,075 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,075 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,076 [INFO] |     --------------------------------
2025-04-24 04:57:10,076 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,076 [INFO] |     --------------------
2025-04-24 04:57:10,076 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,076 [INFO] |     ----------------------------
2025-04-24 04:57:10,077 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,077 [INFO] |     -------------------------
2025-04-24 04:57:10,078 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,078 [INFO] |     -------------------------
2025-04-24 04:57:10,078 [INFO] 
2025-04-24 04:57:10,085 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,085 [INFO] --> states/prims.rs:1966:9
2025-04-24 04:57:10,086 [INFO] |
2025-04-24 04:57:10,086 [INFO] 1964 |     str = match_arg(
2025-04-24 04:57:10,086 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:10,086 [INFO] 1965 |         prim_name,
2025-04-24 04:57:10,087 [INFO] 1966 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,087 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,087 [INFO] |
2025-04-24 04:57:10,088 [INFO] note: function defined here
2025-04-24 04:57:10,088 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,088 [INFO] |
2025-04-24 04:57:10,089 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,089 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,089 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,090 [INFO] |     --------------------------------
2025-04-24 04:57:10,090 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,090 [INFO] |     --------------------
2025-04-24 04:57:10,090 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,090 [INFO] |     ----------------------------
2025-04-24 04:57:10,090 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,091 [INFO] |     -------------------------
2025-04-24 04:57:10,091 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,091 [INFO] |     -------------------------
2025-04-24 04:57:10,091 [INFO] 
2025-04-24 04:57:10,097 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,097 [INFO] --> states/prims.rs:1973:9
2025-04-24 04:57:10,098 [INFO] |
2025-04-24 04:57:10,098 [INFO] 1971 |     re = match_arg(
2025-04-24 04:57:10,098 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,098 [INFO] 1972 |         prim_name,
2025-04-24 04:57:10,098 [INFO] 1973 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,098 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,099 [INFO] |
2025-04-24 04:57:10,099 [INFO] note: function defined here
2025-04-24 04:57:10,099 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,099 [INFO] |
2025-04-24 04:57:10,100 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,100 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,100 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,101 [INFO] |     --------------------------------
2025-04-24 04:57:10,101 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,101 [INFO] |     --------------------
2025-04-24 04:57:10,102 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,102 [INFO] |     ----------------------------
2025-04-24 04:57:10,102 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,102 [INFO] |     -------------------------
2025-04-24 04:57:10,102 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,103 [INFO] |     -------------------------
2025-04-24 04:57:10,103 [INFO] 
2025-04-24 04:57:10,110 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,110 [INFO] --> states/prims.rs:1980:9
2025-04-24 04:57:10,110 [INFO] |
2025-04-24 04:57:10,110 [INFO] 1978 |     subst = match_arg(
2025-04-24 04:57:10,110 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:57:10,111 [INFO] 1979 |         prim_name,
2025-04-24 04:57:10,111 [INFO] 1980 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,111 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,111 [INFO] |
2025-04-24 04:57:10,111 [INFO] note: function defined here
2025-04-24 04:57:10,112 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,112 [INFO] |
2025-04-24 04:57:10,112 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,112 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,112 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,112 [INFO] |     --------------------------------
2025-04-24 04:57:10,113 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,113 [INFO] |     --------------------
2025-04-24 04:57:10,113 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,114 [INFO] |     ----------------------------
2025-04-24 04:57:10,114 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,114 [INFO] |     -------------------------
2025-04-24 04:57:10,114 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,114 [INFO] |     -------------------------
2025-04-24 04:57:10,115 [INFO] 
2025-04-24 04:57:10,123 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,124 [INFO] --> states/prims.rs:2016:9
2025-04-24 04:57:10,124 [INFO] |
2025-04-24 04:57:10,124 [INFO] 2014 |     re = match_arg(
2025-04-24 04:57:10,124 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,125 [INFO] 2015 |         prim_name,
2025-04-24 04:57:10,125 [INFO] 2016 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,125 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,125 [INFO] |
2025-04-24 04:57:10,126 [INFO] note: function defined here
2025-04-24 04:57:10,126 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,126 [INFO] |
2025-04-24 04:57:10,126 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,126 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,127 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,127 [INFO] |     --------------------------------
2025-04-24 04:57:10,127 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,127 [INFO] |     --------------------
2025-04-24 04:57:10,127 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,128 [INFO] |     ----------------------------
2025-04-24 04:57:10,128 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,128 [INFO] |     -------------------------
2025-04-24 04:57:10,129 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,129 [INFO] |     -------------------------
2025-04-24 04:57:10,129 [INFO] 
2025-04-24 04:57:10,137 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,137 [INFO] --> states/prims.rs:2023:9
2025-04-24 04:57:10,138 [INFO] |
2025-04-24 04:57:10,138 [INFO] 2021 |     str = match_arg(
2025-04-24 04:57:10,138 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:10,138 [INFO] 2022 |         prim_name,
2025-04-24 04:57:10,139 [INFO] 2023 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,139 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,139 [INFO] |
2025-04-24 04:57:10,140 [INFO] note: function defined here
2025-04-24 04:57:10,140 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,140 [INFO] |
2025-04-24 04:57:10,140 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,140 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,141 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,141 [INFO] |     --------------------------------
2025-04-24 04:57:10,141 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,141 [INFO] |     --------------------
2025-04-24 04:57:10,141 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,142 [INFO] |     ----------------------------
2025-04-24 04:57:10,142 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,142 [INFO] |     -------------------------
2025-04-24 04:57:10,142 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,142 [INFO] |     -------------------------
2025-04-24 04:57:10,143 [INFO] 
2025-04-24 04:57:10,150 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,150 [INFO] --> states/prims.rs:2131:9
2025-04-24 04:57:10,151 [INFO] |
2025-04-24 04:57:10,151 [INFO] 2129 |     fmt = match_arg(
2025-04-24 04:57:10,152 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:10,152 [INFO] 2130 |         prim_name,
2025-04-24 04:57:10,152 [INFO] 2131 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,152 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,152 [INFO] |
2025-04-24 04:57:10,153 [INFO] note: function defined here
2025-04-24 04:57:10,153 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,153 [INFO] |
2025-04-24 04:57:10,153 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,153 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,154 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,154 [INFO] |     --------------------------------
2025-04-24 04:57:10,154 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,154 [INFO] |     --------------------
2025-04-24 04:57:10,154 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,154 [INFO] |     ----------------------------
2025-04-24 04:57:10,155 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,155 [INFO] |     -------------------------
2025-04-24 04:57:10,156 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,156 [INFO] |     -------------------------
2025-04-24 04:57:10,156 [INFO] 
2025-04-24 04:57:10,165 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,165 [INFO] --> states/prims.rs:2423:9
2025-04-24 04:57:10,166 [INFO] |
2025-04-24 04:57:10,166 [INFO] 2421 |     s1 = match_arg(
2025-04-24 04:57:10,166 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,166 [INFO] 2422 |         prim_name,
2025-04-24 04:57:10,166 [INFO] 2423 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,166 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,167 [INFO] |
2025-04-24 04:57:10,167 [INFO] note: function defined here
2025-04-24 04:57:10,167 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,167 [INFO] |
2025-04-24 04:57:10,168 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,168 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,168 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,169 [INFO] |     --------------------------------
2025-04-24 04:57:10,169 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,169 [INFO] |     --------------------
2025-04-24 04:57:10,169 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,170 [INFO] |     ----------------------------
2025-04-24 04:57:10,170 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,170 [INFO] |     -------------------------
2025-04-24 04:57:10,171 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,172 [INFO] |     -------------------------
2025-04-24 04:57:10,172 [INFO] 
2025-04-24 04:57:10,179 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,180 [INFO] --> states/prims.rs:2430:9
2025-04-24 04:57:10,181 [INFO] |
2025-04-24 04:57:10,181 [INFO] 2428 |     s2 = match_arg(
2025-04-24 04:57:10,181 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,181 [INFO] 2429 |         prim_name,
2025-04-24 04:57:10,182 [INFO] 2430 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,182 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,182 [INFO] |
2025-04-24 04:57:10,182 [INFO] note: function defined here
2025-04-24 04:57:10,183 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,183 [INFO] |
2025-04-24 04:57:10,184 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,184 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,185 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,185 [INFO] |     --------------------------------
2025-04-24 04:57:10,185 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,185 [INFO] |     --------------------
2025-04-24 04:57:10,186 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,186 [INFO] |     ----------------------------
2025-04-24 04:57:10,186 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,186 [INFO] |     -------------------------
2025-04-24 04:57:10,187 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,187 [INFO] |     -------------------------
2025-04-24 04:57:10,187 [INFO] 
2025-04-24 04:57:10,193 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,194 [INFO] --> states/prims.rs:2506:9
2025-04-24 04:57:10,194 [INFO] |
2025-04-24 04:57:10,194 [INFO] 2504 |     n = match_arg(
2025-04-24 04:57:10,194 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:57:10,195 [INFO] 2505 |         prim_name,
2025-04-24 04:57:10,195 [INFO] 2506 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,195 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,196 [INFO] |
2025-04-24 04:57:10,196 [INFO] note: function defined here
2025-04-24 04:57:10,196 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,197 [INFO] |
2025-04-24 04:57:10,197 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,197 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,197 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,198 [INFO] |     --------------------------------
2025-04-24 04:57:10,198 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,198 [INFO] |     --------------------
2025-04-24 04:57:10,198 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,199 [INFO] |     ----------------------------
2025-04-24 04:57:10,199 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,199 [INFO] |     -------------------------
2025-04-24 04:57:10,199 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,200 [INFO] |     -------------------------
2025-04-24 04:57:10,200 [INFO] 
2025-04-24 04:57:10,206 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,207 [INFO] --> states/prims.rs:2603:9
2025-04-24 04:57:10,207 [INFO] |
2025-04-24 04:57:10,207 [INFO] 2601 |     s1 = match_arg(
2025-04-24 04:57:10,207 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,208 [INFO] 2602 |         prim_name,
2025-04-24 04:57:10,208 [INFO] 2603 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,208 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,208 [INFO] |
2025-04-24 04:57:10,209 [INFO] note: function defined here
2025-04-24 04:57:10,209 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,209 [INFO] |
2025-04-24 04:57:10,209 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,210 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,210 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,210 [INFO] |     --------------------------------
2025-04-24 04:57:10,210 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,211 [INFO] |     --------------------
2025-04-24 04:57:10,211 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,211 [INFO] |     ----------------------------
2025-04-24 04:57:10,211 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,212 [INFO] |     -------------------------
2025-04-24 04:57:10,212 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,212 [INFO] |     -------------------------
2025-04-24 04:57:10,212 [INFO] 
2025-04-24 04:57:10,220 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,220 [INFO] --> states/prims.rs:2610:9
2025-04-24 04:57:10,220 [INFO] |
2025-04-24 04:57:10,220 [INFO] 2608 |     s2 = match_arg(
2025-04-24 04:57:10,221 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:57:10,221 [INFO] 2609 |         prim_name,
2025-04-24 04:57:10,221 [INFO] 2610 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,221 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,221 [INFO] |
2025-04-24 04:57:10,221 [INFO] note: function defined here
2025-04-24 04:57:10,222 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,222 [INFO] |
2025-04-24 04:57:10,222 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,222 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,222 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,223 [INFO] |     --------------------------------
2025-04-24 04:57:10,223 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,223 [INFO] |     --------------------
2025-04-24 04:57:10,223 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,223 [INFO] |     ----------------------------
2025-04-24 04:57:10,224 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,224 [INFO] |     -------------------------
2025-04-24 04:57:10,224 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,225 [INFO] |     -------------------------
2025-04-24 04:57:10,225 [INFO] 
2025-04-24 04:57:10,232 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,232 [INFO] --> states/prims.rs:2617:9
2025-04-24 04:57:10,233 [INFO] |
2025-04-24 04:57:10,234 [INFO] 2615 |     len = match_arg(
2025-04-24 04:57:10,234 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:10,234 [INFO] 2616 |         prim_name,
2025-04-24 04:57:10,234 [INFO] 2617 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,234 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,235 [INFO] |
2025-04-24 04:57:10,235 [INFO] note: function defined here
2025-04-24 04:57:10,235 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,235 [INFO] |
2025-04-24 04:57:10,236 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,236 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,236 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,236 [INFO] |     --------------------------------
2025-04-24 04:57:10,237 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,237 [INFO] |     --------------------
2025-04-24 04:57:10,237 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,237 [INFO] |     ----------------------------
2025-04-24 04:57:10,237 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,237 [INFO] |     -------------------------
2025-04-24 04:57:10,237 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,238 [INFO] |     -------------------------
2025-04-24 04:57:10,238 [INFO] 
2025-04-24 04:57:10,243 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,243 [INFO] --> states/prims.rs:2697:9
2025-04-24 04:57:10,243 [INFO] |
2025-04-24 04:57:10,244 [INFO] 2695 |     str = match_arg(
2025-04-24 04:57:10,244 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:10,244 [INFO] 2696 |         prim_name,
2025-04-24 04:57:10,244 [INFO] 2697 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,245 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,245 [INFO] |
2025-04-24 04:57:10,245 [INFO] note: function defined here
2025-04-24 04:57:10,245 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,245 [INFO] |
2025-04-24 04:57:10,245 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,245 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,245 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,245 [INFO] |     --------------------------------
2025-04-24 04:57:10,245 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,245 [INFO] |     --------------------
2025-04-24 04:57:10,246 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,246 [INFO] |     ----------------------------
2025-04-24 04:57:10,246 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,246 [INFO] |     -------------------------
2025-04-24 04:57:10,246 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,247 [INFO] |     -------------------------
2025-04-24 04:57:10,247 [INFO] 
2025-04-24 04:57:10,255 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,255 [INFO] --> states/prims.rs:2704:9
2025-04-24 04:57:10,255 [INFO] |
2025-04-24 04:57:10,255 [INFO] 2702 |     start = match_arg(
2025-04-24 04:57:10,255 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:57:10,256 [INFO] 2703 |         prim_name,
2025-04-24 04:57:10,256 [INFO] 2704 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,256 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,256 [INFO] |
2025-04-24 04:57:10,256 [INFO] note: function defined here
2025-04-24 04:57:10,257 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,257 [INFO] |
2025-04-24 04:57:10,257 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,257 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,258 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,258 [INFO] |     --------------------------------
2025-04-24 04:57:10,258 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,258 [INFO] |     --------------------
2025-04-24 04:57:10,258 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,258 [INFO] |     ----------------------------
2025-04-24 04:57:10,259 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,259 [INFO] |     -------------------------
2025-04-24 04:57:10,259 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,259 [INFO] |     -------------------------
2025-04-24 04:57:10,260 [INFO] 
2025-04-24 04:57:10,272 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,272 [INFO] --> states/prims.rs:2711:9
2025-04-24 04:57:10,273 [INFO] |
2025-04-24 04:57:10,273 [INFO] 2709 |     end = match_arg(
2025-04-24 04:57:10,273 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:57:10,273 [INFO] 2710 |         prim_name,
2025-04-24 04:57:10,274 [INFO] 2711 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,274 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:57:10,274 [INFO] |
2025-04-24 04:57:10,275 [INFO] note: function defined here
2025-04-24 04:57:10,275 [INFO] --> states/prims.rs:574:22
2025-04-24 04:57:10,275 [INFO] |
2025-04-24 04:57:10,275 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:57:10,276 [INFO] |                      ^^^^^^^^^
2025-04-24 04:57:10,276 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:57:10,276 [INFO] |     --------------------------------
2025-04-24 04:57:10,277 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:57:10,277 [INFO] |     --------------------
2025-04-24 04:57:10,277 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:57:10,277 [INFO] |     ----------------------------
2025-04-24 04:57:10,277 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:57:10,278 [INFO] |     -------------------------
2025-04-24 04:57:10,278 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:57:10,278 [INFO] |     -------------------------
2025-04-24 04:57:10,278 [INFO] 
2025-04-24 04:57:10,297 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,297 [INFO] --> states/utils.rs:928:21
2025-04-24 04:57:10,298 [INFO] |
2025-04-24 04:57:10,298 [INFO] 928 |     n2 = node_alloc((*n).type_0 as libc::c_uint);
2025-04-24 04:57:10,298 [INFO] |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,298 [INFO] |          |
2025-04-24 04:57:10,299 [INFO] |          arguments to this function are incorrect
2025-04-24 04:57:10,299 [INFO] |
2025-04-24 04:57:10,299 [INFO] note: function defined here
2025-04-24 04:57:10,300 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,300 [INFO] |
2025-04-24 04:57:10,300 [INFO] 909 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,300 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,300 [INFO] 
2025-04-24 04:57:10,311 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,311 [INFO] --> states/utils.rs:1020:20
2025-04-24 04:57:10,311 [INFO] |
2025-04-24 04:57:10,311 [INFO] 1020 |     n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:57:10,312 [INFO] |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,312 [INFO] |         |
2025-04-24 04:57:10,313 [INFO] |         arguments to this function are incorrect
2025-04-24 04:57:10,313 [INFO] |
2025-04-24 04:57:10,313 [INFO] note: function defined here
2025-04-24 04:57:10,313 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,313 [INFO] |
2025-04-24 04:57:10,313 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,313 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,314 [INFO] 
2025-04-24 04:57:10,323 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,323 [INFO] --> states/utils.rs:1322:28
2025-04-24 04:57:10,323 [INFO] |
2025-04-24 04:57:10,324 [INFO] 1322 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:57:10,324 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,324 [INFO] |                 |
2025-04-24 04:57:10,324 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:57:10,324 [INFO] |
2025-04-24 04:57:10,325 [INFO] note: function defined here
2025-04-24 04:57:10,325 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,325 [INFO] |
2025-04-24 04:57:10,326 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,326 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,326 [INFO] 
2025-04-24 04:57:10,334 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,334 [INFO] --> states/utils.rs:1350:28
2025-04-24 04:57:10,335 [INFO] |
2025-04-24 04:57:10,335 [INFO] 1350 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:57:10,335 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,335 [INFO] |                 |
2025-04-24 04:57:10,335 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:57:10,336 [INFO] |
2025-04-24 04:57:10,336 [INFO] note: function defined here
2025-04-24 04:57:10,336 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,336 [INFO] |
2025-04-24 04:57:10,336 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,338 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,338 [INFO] 
2025-04-24 04:57:10,346 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,346 [INFO] --> states/utils.rs:1375:28
2025-04-24 04:57:10,346 [INFO] |
2025-04-24 04:57:10,346 [INFO] 1375 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:57:10,347 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,347 [INFO] |                 |
2025-04-24 04:57:10,347 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:57:10,347 [INFO] |
2025-04-24 04:57:10,347 [INFO] note: function defined here
2025-04-24 04:57:10,348 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,348 [INFO] |
2025-04-24 04:57:10,348 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,349 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,349 [INFO] 
2025-04-24 04:57:10,359 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,359 [INFO] --> states/utils.rs:1466:32
2025-04-24 04:57:10,359 [INFO] |
2025-04-24 04:57:10,359 [INFO] 1466 |                 n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:57:10,359 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,360 [INFO] |                     |
2025-04-24 04:57:10,360 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:57:10,360 [INFO] |
2025-04-24 04:57:10,361 [INFO] note: function defined here
2025-04-24 04:57:10,361 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,361 [INFO] |
2025-04-24 04:57:10,361 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,361 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,362 [INFO] 
2025-04-24 04:57:10,371 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,371 [INFO] --> states/utils.rs:1531:32
2025-04-24 04:57:10,372 [INFO] |
2025-04-24 04:57:10,372 [INFO] 1531 |                 n = node_alloc(NodeType::nREAL as libc::c_int as libc::c_uint);
2025-04-24 04:57:10,372 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,372 [INFO] |                     |
2025-04-24 04:57:10,372 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:57:10,373 [INFO] |
2025-04-24 04:57:10,373 [INFO] note: function defined here
2025-04-24 04:57:10,373 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,374 [INFO] |
2025-04-24 04:57:10,374 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,374 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,374 [INFO] 
2025-04-24 04:57:10,383 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,384 [INFO] --> states/utils.rs:1637:28
2025-04-24 04:57:10,384 [INFO] |
2025-04-24 04:57:10,384 [INFO] 1637 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:57:10,384 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,384 [INFO] |                 |
2025-04-24 04:57:10,384 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:57:10,384 [INFO] |
2025-04-24 04:57:10,384 [INFO] note: function defined here
2025-04-24 04:57:10,384 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,385 [INFO] |
2025-04-24 04:57:10,385 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,385 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,385 [INFO] 
2025-04-24 04:57:10,394 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,394 [INFO] --> states/utils.rs:1776:25
2025-04-24 04:57:10,394 [INFO] |
2025-04-24 04:57:10,394 [INFO] 1773 |                     n2 = calculate_binary(
2025-04-24 04:57:10,395 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:57:10,395 [INFO] ...
2025-04-24 04:57:10,395 [INFO] 1776 |                         ExprType::ePLUS as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,395 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:57:10,395 [INFO] |
2025-04-24 04:57:10,396 [INFO] note: function defined here
2025-04-24 04:57:10,396 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:57:10,396 [INFO] |
2025-04-24 04:57:10,396 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:57:10,397 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:57:10,397 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:57:10,397 [INFO] |     ----------------
2025-04-24 04:57:10,397 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:57:10,398 [INFO] |     ----------------
2025-04-24 04:57:10,398 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:57:10,399 [INFO] |     --------------------
2025-04-24 04:57:10,399 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:57:10,399 [INFO] |     ---------------------------
2025-04-24 04:57:10,399 [INFO] 
2025-04-24 04:57:10,407 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,407 [INFO] --> states/utils.rs:1784:25
2025-04-24 04:57:10,407 [INFO] |
2025-04-24 04:57:10,407 [INFO] 1781 |                     n2 = calculate_binary(
2025-04-24 04:57:10,407 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:57:10,408 [INFO] ...
2025-04-24 04:57:10,408 [INFO] 1784 |                         ExprType::eMINUS as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,408 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:57:10,408 [INFO] |
2025-04-24 04:57:10,408 [INFO] note: function defined here
2025-04-24 04:57:10,409 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:57:10,409 [INFO] |
2025-04-24 04:57:10,409 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:57:10,409 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:57:10,409 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:57:10,410 [INFO] |     ----------------
2025-04-24 04:57:10,410 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:57:10,410 [INFO] |     ----------------
2025-04-24 04:57:10,410 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:57:10,410 [INFO] |     --------------------
2025-04-24 04:57:10,410 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:57:10,411 [INFO] |     ---------------------------
2025-04-24 04:57:10,411 [INFO] 
2025-04-24 04:57:10,420 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,420 [INFO] --> states/utils.rs:1792:25
2025-04-24 04:57:10,420 [INFO] |
2025-04-24 04:57:10,420 [INFO] 1789 |                     n2 = calculate_binary(
2025-04-24 04:57:10,420 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:57:10,420 [INFO] ...
2025-04-24 04:57:10,421 [INFO] 1792 |                         ExprType::eMULT as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,421 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:57:10,421 [INFO] |
2025-04-24 04:57:10,421 [INFO] note: function defined here
2025-04-24 04:57:10,421 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:57:10,421 [INFO] |
2025-04-24 04:57:10,422 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:57:10,422 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:57:10,422 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:57:10,422 [INFO] |     ----------------
2025-04-24 04:57:10,422 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:57:10,422 [INFO] |     ----------------
2025-04-24 04:57:10,423 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:57:10,423 [INFO] |     --------------------
2025-04-24 04:57:10,423 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:57:10,423 [INFO] |     ---------------------------
2025-04-24 04:57:10,423 [INFO] 
2025-04-24 04:57:10,432 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,432 [INFO] --> states/utils.rs:1800:25
2025-04-24 04:57:10,432 [INFO] |
2025-04-24 04:57:10,433 [INFO] 1797 |                     n2 = calculate_binary(
2025-04-24 04:57:10,433 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:57:10,433 [INFO] ...
2025-04-24 04:57:10,433 [INFO] 1800 |                         ExprType::eDIV as libc::c_int as libc::c_uint,
2025-04-24 04:57:10,433 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:57:10,434 [INFO] |
2025-04-24 04:57:10,434 [INFO] note: function defined here
2025-04-24 04:57:10,434 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:57:10,434 [INFO] |
2025-04-24 04:57:10,434 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:57:10,434 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:57:10,435 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:57:10,435 [INFO] |     ----------------
2025-04-24 04:57:10,435 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:57:10,435 [INFO] |     ----------------
2025-04-24 04:57:10,435 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:57:10,435 [INFO] |     --------------------
2025-04-24 04:57:10,436 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:57:10,436 [INFO] |     ---------------------------
2025-04-24 04:57:10,437 [INFO] 
2025-04-24 04:57:10,445 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,445 [INFO] --> states/utils.rs:1821:17
2025-04-24 04:57:10,445 [INFO] |
2025-04-24 04:57:10,445 [INFO] 1818 |               n = calculate_binary(
2025-04-24 04:57:10,445 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-24 04:57:10,446 [INFO] ...
2025-04-24 04:57:10,446 [INFO] 1821 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-24 04:57:10,446 [INFO] 1822 | |                     == ExprType::ePOSTFIXADD as libc::c_int as libc::c_uint
2025-04-24 04:57:10,446 [INFO] 1823 | |                 {
2025-04-24 04:57:10,446 [INFO] 1824 | |                     ExprType::ePLUS as libc::c_int
2025-04-24 04:57:10,447 [INFO] 1825 | |                 } else {
2025-04-24 04:57:10,447 [INFO] 1826 | |                     ExprType::eMINUS as libc::c_int
2025-04-24 04:57:10,447 [INFO] 1827 | |                 }) as libc::c_uint,
2025-04-24 04:57:10,447 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:57:10,448 [INFO] |
2025-04-24 04:57:10,448 [INFO] note: function defined here
2025-04-24 04:57:10,448 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:57:10,448 [INFO] |
2025-04-24 04:57:10,448 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:57:10,449 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:57:10,449 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:57:10,450 [INFO] |     ----------------
2025-04-24 04:57:10,450 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:57:10,450 [INFO] |     ----------------
2025-04-24 04:57:10,450 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:57:10,451 [INFO] |     --------------------
2025-04-24 04:57:10,451 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:57:10,451 [INFO] |     ---------------------------
2025-04-24 04:57:10,452 [INFO] 
2025-04-24 04:57:10,458 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,459 [INFO] --> states/utils.rs:1840:17
2025-04-24 04:57:10,459 [INFO] |
2025-04-24 04:57:10,459 [INFO] 1837 |               n = calculate_binary(
2025-04-24 04:57:10,459 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-24 04:57:10,460 [INFO] ...
2025-04-24 04:57:10,460 [INFO] 1840 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-24 04:57:10,460 [INFO] 1841 | |                     == ExprType::ePREFIXADD as libc::c_int as libc::c_uint
2025-04-24 04:57:10,461 [INFO] 1842 | |                 {
2025-04-24 04:57:10,461 [INFO] 1843 | |                     ExprType::ePLUS as libc::c_int
2025-04-24 04:57:10,461 [INFO] 1844 | |                 } else {
2025-04-24 04:57:10,461 [INFO] 1845 | |                     ExprType::eMINUS as libc::c_int
2025-04-24 04:57:10,462 [INFO] 1846 | |                 }) as libc::c_uint,
2025-04-24 04:57:10,462 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:57:10,462 [INFO] |
2025-04-24 04:57:10,462 [INFO] note: function defined here
2025-04-24 04:57:10,462 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:57:10,462 [INFO] |
2025-04-24 04:57:10,463 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:57:10,463 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:57:10,463 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:57:10,463 [INFO] |     ----------------
2025-04-24 04:57:10,463 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:57:10,464 [INFO] |     ----------------
2025-04-24 04:57:10,464 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:57:10,464 [INFO] |     --------------------
2025-04-24 04:57:10,465 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:57:10,465 [INFO] |     ---------------------------
2025-04-24 04:57:10,465 [INFO] 
2025-04-24 04:57:10,473 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,473 [INFO] --> states/utils.rs:2039:32
2025-04-24 04:57:10,473 [INFO] |
2025-04-24 04:57:10,473 [INFO] 2039 |                 l = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:57:10,474 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:57:10,474 [INFO] |                     |
2025-04-24 04:57:10,474 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:57:10,474 [INFO] |
2025-04-24 04:57:10,474 [INFO] note: function defined here
2025-04-24 04:57:10,475 [INFO] --> states/utils.rs:909:26
2025-04-24 04:57:10,475 [INFO] |
2025-04-24 04:57:10,475 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:57:10,475 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:57:10,476 [INFO] 
2025-04-24 04:57:10,484 [INFO] error[E0308]: mismatched types
2025-04-24 04:57:10,485 [INFO] --> states/utils.rs:2085:40
2025-04-24 04:57:10,485 [INFO] |
2025-04-24 04:57:10,485 [INFO] 2085 |             n = calculate_binary(l, r, (*expr).type_0 as libc::c_uint, (*expr).linenum);
2025-04-24 04:57:10,485 [INFO] |                 ----------------       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:57:10,486 [INFO] |                 |
2025-04-24 04:57:10,486 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:57:10,486 [INFO] |
2025-04-24 04:57:10,486 [INFO] note: function defined here
2025-04-24 04:57:10,488 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:57:10,488 [INFO] |
2025-04-24 04:57:10,489 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:57:10,489 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:57:10,489 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:57:10,489 [INFO] |     ----------------
2025-04-24 04:57:10,489 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:57:10,490 [INFO] |     ----------------
2025-04-24 04:57:10,490 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:57:10,490 [INFO] |     --------------------
2025-04-24 04:57:10,490 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:57:10,491 [INFO] |     ---------------------------
2025-04-24 04:57:10,491 [INFO] 
2025-04-24 04:57:10,494 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-24 04:57:10,504 [INFO] warning: `c2rust_out` (lib) generated 33 warnings
2025-04-24 04:57:10,504 [INFO] error: could not compile `c2rust_out` due to 48 previous errors; 33 warnings emitted
2025-04-24 04:57:10,505 [ERROR] cargo build failed with code 101
2025-04-24 04:59:23,161 [INFO] Running: c2rust transpile -e compile_commands.json
2025-04-24 04:59:28,041 [INFO] c2rust transpile succeeded
2025-04-24 04:59:28,042 [INFO] Running: cargo build
2025-04-24 04:59:28,288 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-24 04:59:29,063 [INFO] warning: unused label
2025-04-24 04:59:29,063 [INFO] --> afmlib/afmparse.rs:1309:9
2025-04-24 04:59:29,063 [INFO] |
2025-04-24 04:59:29,063 [INFO] 1309 |         'c_3699: {
2025-04-24 04:59:29,064 [INFO] |         ^^^^^^^
2025-04-24 04:59:29,064 [INFO] |
2025-04-24 04:59:29,064 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-24 04:59:29,064 [INFO] 
2025-04-24 04:59:29,067 [INFO] warning: unused import: `::libc`
2025-04-24 04:59:29,067 [INFO] --> compat/getopt.rs:1:5
2025-04-24 04:59:29,067 [INFO] |
2025-04-24 04:59:29,067 [INFO] 1 | use ::libc;
2025-04-24 04:59:29,067 [INFO] |     ^^^^^^
2025-04-24 04:59:29,067 [INFO] |
2025-04-24 04:59:29,068 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-24 04:59:29,068 [INFO] 
2025-04-24 04:59:29,068 [INFO] warning: unused import: `::libc`
2025-04-24 04:59:29,068 [INFO] --> compat/getopt1.rs:1:5
2025-04-24 04:59:29,068 [INFO] |
2025-04-24 04:59:29,069 [INFO] 1 | use ::libc;
2025-04-24 04:59:29,069 [INFO] |     ^^^^^^
2025-04-24 04:59:29,069 [INFO] 
2025-04-24 04:59:29,072 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,073 [INFO] --> compat/regex.rs:15502:33
2025-04-24 04:59:29,073 [INFO] |
2025-04-24 04:59:29,073 [INFO] 15502 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,074 [INFO] |                       ^
2025-04-24 04:59:29,074 [INFO] ...
2025-04-24 04:59:29,074 [INFO] 15507 | ...                   })
2025-04-24 04:59:29,074 [INFO] |                        ^
2025-04-24 04:59:29,074 [INFO] |
2025-04-24 04:59:29,075 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-24 04:59:29,075 [INFO] help: remove these parentheses
2025-04-24 04:59:29,075 [INFO] |
2025-04-24 04:59:29,075 [INFO] 15502 ~                                 if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,076 [INFO] 15503 |                                     0 as libc::c_int
2025-04-24 04:59:29,076 [INFO] ...
2025-04-24 04:59:29,076 [INFO] 15506 |                                     1 as libc::c_int
2025-04-24 04:59:29,076 [INFO] 15507 ~                                 }
2025-04-24 04:59:29,076 [INFO] |
2025-04-24 04:59:29,077 [INFO] 
2025-04-24 04:59:29,077 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,077 [INFO] --> compat/regex.rs:16491:37
2025-04-24 04:59:29,077 [INFO] |
2025-04-24 04:59:29,077 [INFO] 16491 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,077 [INFO] |                       ^
2025-04-24 04:59:29,078 [INFO] ...
2025-04-24 04:59:29,078 [INFO] 16496 | ...                   })
2025-04-24 04:59:29,078 [INFO] |                        ^
2025-04-24 04:59:29,078 [INFO] |
2025-04-24 04:59:29,078 [INFO] help: remove these parentheses
2025-04-24 04:59:29,078 [INFO] |
2025-04-24 04:59:29,079 [INFO] 16491 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,079 [INFO] 16492 |                                         0 as libc::c_int
2025-04-24 04:59:29,079 [INFO] ...
2025-04-24 04:59:29,079 [INFO] 16495 |                                         1 as libc::c_int
2025-04-24 04:59:29,080 [INFO] 16496 ~                                     }
2025-04-24 04:59:29,080 [INFO] |
2025-04-24 04:59:29,080 [INFO] 
2025-04-24 04:59:29,080 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,080 [INFO] --> compat/regex.rs:16753:29
2025-04-24 04:59:29,081 [INFO] |
2025-04-24 04:59:29,081 [INFO] 16753 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,081 [INFO] |                       ^
2025-04-24 04:59:29,081 [INFO] ...
2025-04-24 04:59:29,081 [INFO] 16758 | ...                   })
2025-04-24 04:59:29,082 [INFO] |                        ^
2025-04-24 04:59:29,082 [INFO] |
2025-04-24 04:59:29,082 [INFO] help: remove these parentheses
2025-04-24 04:59:29,082 [INFO] |
2025-04-24 04:59:29,082 [INFO] 16753 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,083 [INFO] 16754 |                                 0 as libc::c_int
2025-04-24 04:59:29,083 [INFO] ...
2025-04-24 04:59:29,083 [INFO] 16757 |                                 1 as libc::c_int
2025-04-24 04:59:29,083 [INFO] 16758 ~                             }
2025-04-24 04:59:29,083 [INFO] |
2025-04-24 04:59:29,084 [INFO] 
2025-04-24 04:59:29,084 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,084 [INFO] --> compat/regex.rs:17041:29
2025-04-24 04:59:29,085 [INFO] |
2025-04-24 04:59:29,085 [INFO] 17041 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,085 [INFO] |                       ^
2025-04-24 04:59:29,085 [INFO] ...
2025-04-24 04:59:29,086 [INFO] 17046 | ...                   })
2025-04-24 04:59:29,086 [INFO] |                        ^
2025-04-24 04:59:29,086 [INFO] |
2025-04-24 04:59:29,086 [INFO] help: remove these parentheses
2025-04-24 04:59:29,086 [INFO] |
2025-04-24 04:59:29,086 [INFO] 17041 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,087 [INFO] 17042 |                                 0 as libc::c_int
2025-04-24 04:59:29,087 [INFO] ...
2025-04-24 04:59:29,088 [INFO] 17045 |                                 1 as libc::c_int
2025-04-24 04:59:29,088 [INFO] 17046 ~                             }
2025-04-24 04:59:29,088 [INFO] |
2025-04-24 04:59:29,088 [INFO] 
2025-04-24 04:59:29,089 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,089 [INFO] --> compat/regex.rs:17138:29
2025-04-24 04:59:29,090 [INFO] |
2025-04-24 04:59:29,090 [INFO] 17138 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,090 [INFO] |                       ^
2025-04-24 04:59:29,090 [INFO] ...
2025-04-24 04:59:29,091 [INFO] 17143 | ...                   })
2025-04-24 04:59:29,091 [INFO] |                        ^
2025-04-24 04:59:29,091 [INFO] |
2025-04-24 04:59:29,091 [INFO] help: remove these parentheses
2025-04-24 04:59:29,092 [INFO] |
2025-04-24 04:59:29,092 [INFO] 17138 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,092 [INFO] 17139 |                                 0 as libc::c_int
2025-04-24 04:59:29,092 [INFO] ...
2025-04-24 04:59:29,093 [INFO] 17142 |                                 1 as libc::c_int
2025-04-24 04:59:29,093 [INFO] 17143 ~                             }
2025-04-24 04:59:29,093 [INFO] |
2025-04-24 04:59:29,093 [INFO] 
2025-04-24 04:59:29,094 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,094 [INFO] --> compat/regex.rs:17294:29
2025-04-24 04:59:29,094 [INFO] |
2025-04-24 04:59:29,094 [INFO] 17294 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,095 [INFO] |                       ^
2025-04-24 04:59:29,095 [INFO] ...
2025-04-24 04:59:29,095 [INFO] 17300 | ...                   })
2025-04-24 04:59:29,095 [INFO] |                        ^
2025-04-24 04:59:29,096 [INFO] |
2025-04-24 04:59:29,096 [INFO] help: remove these parentheses
2025-04-24 04:59:29,096 [INFO] |
2025-04-24 04:59:29,096 [INFO] 17294 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,096 [INFO] 17295 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,097 [INFO] ...
2025-04-24 04:59:29,097 [INFO] 17299 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,097 [INFO] 17300 ~                             }
2025-04-24 04:59:29,097 [INFO] |
2025-04-24 04:59:29,098 [INFO] 
2025-04-24 04:59:29,098 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,098 [INFO] --> compat/regex.rs:17306:29
2025-04-24 04:59:29,098 [INFO] |
2025-04-24 04:59:29,099 [INFO] 17306 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,099 [INFO] |                       ^
2025-04-24 04:59:29,099 [INFO] ...
2025-04-24 04:59:29,099 [INFO] 17310 | ...                   })
2025-04-24 04:59:29,100 [INFO] |                        ^
2025-04-24 04:59:29,100 [INFO] |
2025-04-24 04:59:29,100 [INFO] help: remove these parentheses
2025-04-24 04:59:29,100 [INFO] |
2025-04-24 04:59:29,101 [INFO] 17306 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,101 [INFO] 17307 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,101 [INFO] 17308 |                             } else {
2025-04-24 04:59:29,101 [INFO] 17309 |                                 *d as libc::c_int
2025-04-24 04:59:29,101 [INFO] 17310 ~                             }
2025-04-24 04:59:29,102 [INFO] |
2025-04-24 04:59:29,102 [INFO] 
2025-04-24 04:59:29,102 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,102 [INFO] --> compat/regex.rs:17333:29
2025-04-24 04:59:29,102 [INFO] |
2025-04-24 04:59:29,102 [INFO] 17333 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,103 [INFO] |                       ^
2025-04-24 04:59:29,103 [INFO] ...
2025-04-24 04:59:29,103 [INFO] 17339 | ...                   })
2025-04-24 04:59:29,104 [INFO] |                        ^
2025-04-24 04:59:29,104 [INFO] |
2025-04-24 04:59:29,104 [INFO] help: remove these parentheses
2025-04-24 04:59:29,104 [INFO] |
2025-04-24 04:59:29,104 [INFO] 17333 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,105 [INFO] 17334 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,105 [INFO] ...
2025-04-24 04:59:29,105 [INFO] 17338 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,105 [INFO] 17339 ~                             }
2025-04-24 04:59:29,106 [INFO] |
2025-04-24 04:59:29,106 [INFO] 
2025-04-24 04:59:29,106 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,106 [INFO] --> compat/regex.rs:17345:29
2025-04-24 04:59:29,106 [INFO] |
2025-04-24 04:59:29,107 [INFO] 17345 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,107 [INFO] |                       ^
2025-04-24 04:59:29,108 [INFO] ...
2025-04-24 04:59:29,108 [INFO] 17349 | ...                   })
2025-04-24 04:59:29,108 [INFO] |                        ^
2025-04-24 04:59:29,108 [INFO] |
2025-04-24 04:59:29,108 [INFO] help: remove these parentheses
2025-04-24 04:59:29,109 [INFO] |
2025-04-24 04:59:29,110 [INFO] 17345 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,110 [INFO] 17346 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,110 [INFO] 17347 |                             } else {
2025-04-24 04:59:29,111 [INFO] 17348 |                                 *d as libc::c_int
2025-04-24 04:59:29,111 [INFO] 17349 ~                             }
2025-04-24 04:59:29,111 [INFO] |
2025-04-24 04:59:29,111 [INFO] 
2025-04-24 04:59:29,111 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,112 [INFO] --> compat/regex.rs:17363:25
2025-04-24 04:59:29,112 [INFO] |
2025-04-24 04:59:29,112 [INFO] 17363 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,112 [INFO] |                         ^
2025-04-24 04:59:29,113 [INFO] ...
2025-04-24 04:59:29,113 [INFO] 17367 |                         })
2025-04-24 04:59:29,113 [INFO] |                          ^
2025-04-24 04:59:29,113 [INFO] |
2025-04-24 04:59:29,113 [INFO] help: remove these parentheses
2025-04-24 04:59:29,114 [INFO] |
2025-04-24 04:59:29,114 [INFO] 17363 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,114 [INFO] 17364 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,114 [INFO] 17365 |                         } else {
2025-04-24 04:59:29,114 [INFO] 17366 |                             *d as libc::c_int
2025-04-24 04:59:29,115 [INFO] 17367 ~                         }
2025-04-24 04:59:29,115 [INFO] |
2025-04-24 04:59:29,115 [INFO] 
2025-04-24 04:59:29,115 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,116 [INFO] --> compat/regex.rs:17376:33
2025-04-24 04:59:29,116 [INFO] |
2025-04-24 04:59:29,116 [INFO] 17376 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,116 [INFO] |                       ^
2025-04-24 04:59:29,117 [INFO] ...
2025-04-24 04:59:29,117 [INFO] 17382 | ...                   })
2025-04-24 04:59:29,117 [INFO] |                        ^
2025-04-24 04:59:29,117 [INFO] |
2025-04-24 04:59:29,117 [INFO] help: remove these parentheses
2025-04-24 04:59:29,118 [INFO] |
2025-04-24 04:59:29,118 [INFO] 17376 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,118 [INFO] 17377 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,118 [INFO] ...
2025-04-24 04:59:29,118 [INFO] 17381 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,118 [INFO] 17382 ~                                 }
2025-04-24 04:59:29,119 [INFO] |
2025-04-24 04:59:29,119 [INFO] 
2025-04-24 04:59:29,119 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,119 [INFO] --> compat/regex.rs:17397:29
2025-04-24 04:59:29,119 [INFO] |
2025-04-24 04:59:29,120 [INFO] 17397 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,120 [INFO] |                       ^
2025-04-24 04:59:29,120 [INFO] ...
2025-04-24 04:59:29,120 [INFO] 17403 | ...                   })
2025-04-24 04:59:29,121 [INFO] |                        ^
2025-04-24 04:59:29,121 [INFO] |
2025-04-24 04:59:29,121 [INFO] help: remove these parentheses
2025-04-24 04:59:29,122 [INFO] |
2025-04-24 04:59:29,122 [INFO] 17397 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,122 [INFO] 17398 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:29,123 [INFO] ...
2025-04-24 04:59:29,123 [INFO] 17402 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,123 [INFO] 17403 ~                             }
2025-04-24 04:59:29,123 [INFO] |
2025-04-24 04:59:29,124 [INFO] 
2025-04-24 04:59:29,124 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,124 [INFO] --> compat/regex.rs:17408:29
2025-04-24 04:59:29,125 [INFO] |
2025-04-24 04:59:29,125 [INFO] 17408 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,125 [INFO] |                       ^
2025-04-24 04:59:29,126 [INFO] ...
2025-04-24 04:59:29,126 [INFO] 17412 | ...                   })
2025-04-24 04:59:29,126 [INFO] |                        ^
2025-04-24 04:59:29,126 [INFO] |
2025-04-24 04:59:29,126 [INFO] help: remove these parentheses
2025-04-24 04:59:29,127 [INFO] |
2025-04-24 04:59:29,127 [INFO] 17408 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,127 [INFO] 17409 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,127 [INFO] 17410 |                             } else {
2025-04-24 04:59:29,128 [INFO] 17411 |                                 *d as libc::c_int
2025-04-24 04:59:29,128 [INFO] 17412 ~                             }
2025-04-24 04:59:29,128 [INFO] |
2025-04-24 04:59:29,129 [INFO] 
2025-04-24 04:59:29,129 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,129 [INFO] --> compat/regex.rs:17439:33
2025-04-24 04:59:29,129 [INFO] |
2025-04-24 04:59:29,130 [INFO] 17439 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,130 [INFO] |                       ^
2025-04-24 04:59:29,130 [INFO] ...
2025-04-24 04:59:29,130 [INFO] 17443 | ...                   })
2025-04-24 04:59:29,131 [INFO] |                        ^
2025-04-24 04:59:29,131 [INFO] |
2025-04-24 04:59:29,131 [INFO] help: remove these parentheses
2025-04-24 04:59:29,132 [INFO] |
2025-04-24 04:59:29,132 [INFO] 17439 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,132 [INFO] 17440 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,132 [INFO] 17441 |                                 } else {
2025-04-24 04:59:29,132 [INFO] 17442 |                                     *d as libc::c_int
2025-04-24 04:59:29,132 [INFO] 17443 ~                                 }
2025-04-24 04:59:29,133 [INFO] |
2025-04-24 04:59:29,133 [INFO] 
2025-04-24 04:59:29,133 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,133 [INFO] --> compat/regex.rs:17495:33
2025-04-24 04:59:29,134 [INFO] |
2025-04-24 04:59:29,134 [INFO] 17495 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,134 [INFO] |                       ^
2025-04-24 04:59:29,134 [INFO] ...
2025-04-24 04:59:29,135 [INFO] 17499 | ...                   })
2025-04-24 04:59:29,135 [INFO] |                        ^
2025-04-24 04:59:29,135 [INFO] |
2025-04-24 04:59:29,135 [INFO] help: remove these parentheses
2025-04-24 04:59:29,135 [INFO] |
2025-04-24 04:59:29,136 [INFO] 17495 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:29,136 [INFO] 17496 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:29,137 [INFO] 17497 |                                 } else {
2025-04-24 04:59:29,137 [INFO] 17498 |                                     *d as libc::c_int
2025-04-24 04:59:29,137 [INFO] 17499 ~                                 }
2025-04-24 04:59:29,137 [INFO] |
2025-04-24 04:59:29,137 [INFO] 
2025-04-24 04:59:29,137 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:29,138 [INFO] --> compat/regex.rs:17661:37
2025-04-24 04:59:29,138 [INFO] |
2025-04-24 04:59:29,138 [INFO] 17661 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,138 [INFO] |                       ^
2025-04-24 04:59:29,138 [INFO] ...
2025-04-24 04:59:29,138 [INFO] 17666 | ...                   })
2025-04-24 04:59:29,139 [INFO] |                        ^
2025-04-24 04:59:29,139 [INFO] |
2025-04-24 04:59:29,139 [INFO] help: remove these parentheses
2025-04-24 04:59:29,139 [INFO] |
2025-04-24 04:59:29,139 [INFO] 17661 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:59:29,140 [INFO] 17662 |                                         0 as libc::c_int
2025-04-24 04:59:29,140 [INFO] ...
2025-04-24 04:59:29,140 [INFO] 17665 |                                         1 as libc::c_int
2025-04-24 04:59:29,140 [INFO] 17666 ~                                     }
2025-04-24 04:59:29,141 [INFO] |
2025-04-24 04:59:29,141 [INFO] 
2025-04-24 04:59:29,141 [INFO] warning: unnecessary parentheses around method argument
2025-04-24 04:59:29,141 [INFO] --> compat/regex.rs:18011:13
2025-04-24 04:59:29,142 [INFO] |
2025-04-24 04:59:29,142 [INFO] 18011 |             (if dend == end_match_1 {
2025-04-24 04:59:29,142 [INFO] |             ^
2025-04-24 04:59:29,142 [INFO] ...
2025-04-24 04:59:29,143 [INFO] 18015 |             }),
2025-04-24 04:59:29,143 [INFO] |              ^
2025-04-24 04:59:29,143 [INFO] |
2025-04-24 04:59:29,143 [INFO] help: remove these parentheses
2025-04-24 04:59:29,144 [INFO] |
2025-04-24 04:59:29,144 [INFO] 18011 ~             if dend == end_match_1 {
2025-04-24 04:59:29,144 [INFO] 18012 |                 string1
2025-04-24 04:59:29,145 [INFO] 18013 |             } else {
2025-04-24 04:59:29,145 [INFO] 18014 |                 string2.offset(-(size1 as isize))
2025-04-24 04:59:29,145 [INFO] 18015 ~             },
2025-04-24 04:59:29,146 [INFO] |
2025-04-24 04:59:29,146 [INFO] 
2025-04-24 04:59:29,146 [INFO] warning: unused label
2025-04-24 04:59:29,146 [INFO] --> src/psgen.rs:4554:5
2025-04-24 04:59:29,146 [INFO] |
2025-04-24 04:59:29,146 [INFO] 4554 |     'c_18653: {
2025-04-24 04:59:29,147 [INFO] |     ^^^^^^^^
2025-04-24 04:59:29,147 [INFO] 
2025-04-24 04:59:29,147 [INFO] warning: unused label
2025-04-24 04:59:29,148 [INFO] --> src/psgen.rs:4629:5
2025-04-24 04:59:29,148 [INFO] |
2025-04-24 04:59:29,148 [INFO] 4629 |     'c_8716: {
2025-04-24 04:59:29,148 [INFO] |     ^^^^^^^
2025-04-24 04:59:29,149 [INFO] 
2025-04-24 04:59:29,149 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:59:29,149 [INFO] --> states/prims.rs:467:17
2025-04-24 04:59:29,150 [INFO] |
2025-04-24 04:59:29,150 [INFO] 467 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:59:29,150 [INFO] |                 ^
2025-04-24 04:59:29,150 [INFO] ...
2025-04-24 04:59:29,151 [INFO] 472 |                 }),
2025-04-24 04:59:29,151 [INFO] |                  ^
2025-04-24 04:59:29,151 [INFO] |
2025-04-24 04:59:29,151 [INFO] help: remove these parentheses
2025-04-24 04:59:29,151 [INFO] |
2025-04-24 04:59:29,152 [INFO] 467 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:59:29,152 [INFO] 468 |                     &mut (*n).u.re.compiled
2025-04-24 04:59:29,152 [INFO] ...
2025-04-24 04:59:29,152 [INFO] 471 |                     &mut (*n).u.re.compiled
2025-04-24 04:59:29,153 [INFO] 472 ~                 },
2025-04-24 04:59:29,153 [INFO] |
2025-04-24 04:59:29,153 [INFO] 
2025-04-24 04:59:29,153 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:59:29,154 [INFO] --> states/prims.rs:523:17
2025-04-24 04:59:29,154 [INFO] |
2025-04-24 04:59:29,154 [INFO] 523 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:59:29,154 [INFO] |                 ^
2025-04-24 04:59:29,155 [INFO] ...
2025-04-24 04:59:29,155 [INFO] 528 |                 }),
2025-04-24 04:59:29,155 [INFO] |                  ^
2025-04-24 04:59:29,156 [INFO] |
2025-04-24 04:59:29,156 [INFO] help: remove these parentheses
2025-04-24 04:59:29,156 [INFO] |
2025-04-24 04:59:29,156 [INFO] 523 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:59:29,157 [INFO] 524 |                     &mut (*n).u.re.compiled
2025-04-24 04:59:29,157 [INFO] ...
2025-04-24 04:59:29,157 [INFO] 527 |                     &mut (*n).u.re.compiled
2025-04-24 04:59:29,157 [INFO] 528 ~                 },
2025-04-24 04:59:29,157 [INFO] |
2025-04-24 04:59:29,158 [INFO] 
2025-04-24 04:59:29,792 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:29,793 [INFO] --> compat/regex.rs:15755:9
2025-04-24 04:59:29,793 [INFO] |
2025-04-24 04:59:29,793 [INFO] 15753 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-24 04:59:29,793 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-24 04:59:29,793 [INFO] 15754 |         bufp,
2025-04-24 04:59:29,793 [INFO] 15755 |         0 as *mut libc::c_void,
2025-04-24 04:59:29,793 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-24 04:59:29,794 [INFO] |
2025-04-24 04:59:29,794 [INFO] = note: expected raw pointer `*const i8`
2025-04-24 04:59:29,794 [INFO] found raw pointer `*mut c_void`
2025-04-24 04:59:29,794 [INFO] note: function defined here
2025-04-24 04:59:29,794 [INFO] --> compat/regex.rs:15788:22
2025-04-24 04:59:29,794 [INFO] |
2025-04-24 04:59:29,794 [INFO] 15788 | unsafe extern "C" fn re_match_2_internal(
2025-04-24 04:59:29,795 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:29,795 [INFO] 15789 |     mut bufp: *mut re_pattern_buffer,
2025-04-24 04:59:29,795 [INFO] |     --------------------------------
2025-04-24 04:59:29,795 [INFO] 15790 |     mut string1: *const libc::c_char,
2025-04-24 04:59:29,795 [INFO] |     --------------------------------
2025-04-24 04:59:29,795 [INFO] 15791 |     mut size1: libc::c_int,
2025-04-24 04:59:29,796 [INFO] |     ----------------------
2025-04-24 04:59:29,796 [INFO] 15792 |     mut string2: *const libc::c_char,
2025-04-24 04:59:29,796 [INFO] |     --------------------------------
2025-04-24 04:59:29,796 [INFO] 15793 |     mut size2: libc::c_int,
2025-04-24 04:59:29,797 [INFO] |     ----------------------
2025-04-24 04:59:29,797 [INFO] 15794 |     mut pos: libc::c_int,
2025-04-24 04:59:29,797 [INFO] |     --------------------
2025-04-24 04:59:29,797 [INFO] 15795 |     mut regs: *mut re_registers,
2025-04-24 04:59:29,798 [INFO] |     ---------------------------
2025-04-24 04:59:29,798 [INFO] 15796 |     mut stop: libc::c_int,
2025-04-24 04:59:29,798 [INFO] |     ---------------------
2025-04-24 04:59:29,798 [INFO] 
2025-04-24 04:59:29,991 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-24 04:59:30,002 [INFO] warning: `c2rust_out` (lib) generated 24 warnings
2025-04-24 04:59:30,003 [INFO] error: could not compile `c2rust_out` due to previous error; 24 warnings emitted
2025-04-24 04:59:30,005 [ERROR] cargo build failed with code 101
2025-04-24 04:59:30,015 [INFO] Running: cargo build
2025-04-24 04:59:30,252 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-04-24 04:59:30,756 [INFO] warning: unused label
2025-04-24 04:59:30,756 [INFO] --> afmlib/afmparse.rs:1620:9
2025-04-24 04:59:30,756 [INFO] |
2025-04-24 04:59:30,756 [INFO] 1620 |         'c_3699: {
2025-04-24 04:59:30,757 [INFO] |         ^^^^^^^
2025-04-24 04:59:30,757 [INFO] |
2025-04-24 04:59:30,757 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-04-24 04:59:30,757 [INFO] 
2025-04-24 04:59:30,760 [INFO] warning: unused import: `::libc`
2025-04-24 04:59:30,760 [INFO] --> compat/getopt.rs:1:5
2025-04-24 04:59:30,760 [INFO] |
2025-04-24 04:59:30,761 [INFO] 1 | use ::libc;
2025-04-24 04:59:30,761 [INFO] |     ^^^^^^
2025-04-24 04:59:30,761 [INFO] |
2025-04-24 04:59:30,761 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-04-24 04:59:30,762 [INFO] 
2025-04-24 04:59:30,762 [INFO] warning: unused import: `::libc`
2025-04-24 04:59:30,762 [INFO] --> compat/getopt1.rs:1:5
2025-04-24 04:59:30,762 [INFO] |
2025-04-24 04:59:30,762 [INFO] 1 | use ::libc;
2025-04-24 04:59:30,763 [INFO] |     ^^^^^^
2025-04-24 04:59:30,763 [INFO] 
2025-04-24 04:59:30,767 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,767 [INFO] --> compat/regex.rs:15755:33
2025-04-24 04:59:30,767 [INFO] |
2025-04-24 04:59:30,767 [INFO] 15755 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,767 [INFO] |                       ^
2025-04-24 04:59:30,768 [INFO] ...
2025-04-24 04:59:30,768 [INFO] 15760 | ...                   })
2025-04-24 04:59:30,768 [INFO] |                        ^
2025-04-24 04:59:30,768 [INFO] |
2025-04-24 04:59:30,768 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-04-24 04:59:30,769 [INFO] help: remove these parentheses
2025-04-24 04:59:30,769 [INFO] |
2025-04-24 04:59:30,769 [INFO] 15755 ~                                 if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,769 [INFO] 15756 |                                     0 as libc::c_int
2025-04-24 04:59:30,770 [INFO] ...
2025-04-24 04:59:30,770 [INFO] 15759 |                                     1 as libc::c_int
2025-04-24 04:59:30,770 [INFO] 15760 ~                                 }
2025-04-24 04:59:30,770 [INFO] |
2025-04-24 04:59:30,770 [INFO] 
2025-04-24 04:59:30,770 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,770 [INFO] --> compat/regex.rs:16750:37
2025-04-24 04:59:30,771 [INFO] |
2025-04-24 04:59:30,771 [INFO] 16750 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,771 [INFO] |                       ^
2025-04-24 04:59:30,771 [INFO] ...
2025-04-24 04:59:30,772 [INFO] 16755 | ...                   })
2025-04-24 04:59:30,772 [INFO] |                        ^
2025-04-24 04:59:30,773 [INFO] |
2025-04-24 04:59:30,774 [INFO] help: remove these parentheses
2025-04-24 04:59:30,775 [INFO] |
2025-04-24 04:59:30,775 [INFO] 16750 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,775 [INFO] 16751 |                                         0 as libc::c_int
2025-04-24 04:59:30,775 [INFO] ...
2025-04-24 04:59:30,775 [INFO] 16754 |                                         1 as libc::c_int
2025-04-24 04:59:30,776 [INFO] 16755 ~                                     }
2025-04-24 04:59:30,776 [INFO] |
2025-04-24 04:59:30,777 [INFO] 
2025-04-24 04:59:30,777 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,777 [INFO] --> compat/regex.rs:17011:29
2025-04-24 04:59:30,778 [INFO] |
2025-04-24 04:59:30,778 [INFO] 17011 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,778 [INFO] |                       ^
2025-04-24 04:59:30,778 [INFO] ...
2025-04-24 04:59:30,779 [INFO] 17016 | ...                   })
2025-04-24 04:59:30,779 [INFO] |                        ^
2025-04-24 04:59:30,779 [INFO] |
2025-04-24 04:59:30,779 [INFO] help: remove these parentheses
2025-04-24 04:59:30,779 [INFO] |
2025-04-24 04:59:30,780 [INFO] 17011 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,780 [INFO] 17012 |                                 0 as libc::c_int
2025-04-24 04:59:30,780 [INFO] ...
2025-04-24 04:59:30,780 [INFO] 17015 |                                 1 as libc::c_int
2025-04-24 04:59:30,780 [INFO] 17016 ~                             }
2025-04-24 04:59:30,781 [INFO] |
2025-04-24 04:59:30,781 [INFO] 
2025-04-24 04:59:30,781 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,781 [INFO] --> compat/regex.rs:17298:29
2025-04-24 04:59:30,782 [INFO] |
2025-04-24 04:59:30,782 [INFO] 17298 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,782 [INFO] |                       ^
2025-04-24 04:59:30,782 [INFO] ...
2025-04-24 04:59:30,782 [INFO] 17303 | ...                   })
2025-04-24 04:59:30,782 [INFO] |                        ^
2025-04-24 04:59:30,783 [INFO] |
2025-04-24 04:59:30,783 [INFO] help: remove these parentheses
2025-04-24 04:59:30,783 [INFO] |
2025-04-24 04:59:30,783 [INFO] 17298 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,783 [INFO] 17299 |                                 0 as libc::c_int
2025-04-24 04:59:30,783 [INFO] ...
2025-04-24 04:59:30,784 [INFO] 17302 |                                 1 as libc::c_int
2025-04-24 04:59:30,784 [INFO] 17303 ~                             }
2025-04-24 04:59:30,784 [INFO] |
2025-04-24 04:59:30,784 [INFO] 
2025-04-24 04:59:30,784 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,784 [INFO] --> compat/regex.rs:17394:29
2025-04-24 04:59:30,785 [INFO] |
2025-04-24 04:59:30,785 [INFO] 17394 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,785 [INFO] |                       ^
2025-04-24 04:59:30,785 [INFO] ...
2025-04-24 04:59:30,785 [INFO] 17399 | ...                   })
2025-04-24 04:59:30,786 [INFO] |                        ^
2025-04-24 04:59:30,786 [INFO] |
2025-04-24 04:59:30,786 [INFO] help: remove these parentheses
2025-04-24 04:59:30,786 [INFO] |
2025-04-24 04:59:30,786 [INFO] 17394 ~                             if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,787 [INFO] 17395 |                                 0 as libc::c_int
2025-04-24 04:59:30,787 [INFO] ...
2025-04-24 04:59:30,787 [INFO] 17398 |                                 1 as libc::c_int
2025-04-24 04:59:30,787 [INFO] 17399 ~                             }
2025-04-24 04:59:30,787 [INFO] |
2025-04-24 04:59:30,787 [INFO] 
2025-04-24 04:59:30,788 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,788 [INFO] --> compat/regex.rs:17535:29
2025-04-24 04:59:30,788 [INFO] |
2025-04-24 04:59:30,788 [INFO] 17535 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,788 [INFO] |                       ^
2025-04-24 04:59:30,789 [INFO] ...
2025-04-24 04:59:30,789 [INFO] 17541 | ...                   })
2025-04-24 04:59:30,789 [INFO] |                        ^
2025-04-24 04:59:30,789 [INFO] |
2025-04-24 04:59:30,789 [INFO] help: remove these parentheses
2025-04-24 04:59:30,789 [INFO] |
2025-04-24 04:59:30,790 [INFO] 17535 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,790 [INFO] 17536 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,790 [INFO] ...
2025-04-24 04:59:30,790 [INFO] 17540 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,790 [INFO] 17541 ~                             }
2025-04-24 04:59:30,790 [INFO] |
2025-04-24 04:59:30,791 [INFO] 
2025-04-24 04:59:30,791 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,791 [INFO] --> compat/regex.rs:17547:29
2025-04-24 04:59:30,791 [INFO] |
2025-04-24 04:59:30,792 [INFO] 17547 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,792 [INFO] |                       ^
2025-04-24 04:59:30,792 [INFO] ...
2025-04-24 04:59:30,792 [INFO] 17551 | ...                   })
2025-04-24 04:59:30,793 [INFO] |                        ^
2025-04-24 04:59:30,793 [INFO] |
2025-04-24 04:59:30,793 [INFO] help: remove these parentheses
2025-04-24 04:59:30,793 [INFO] |
2025-04-24 04:59:30,793 [INFO] 17547 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,793 [INFO] 17548 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,794 [INFO] 17549 |                             } else {
2025-04-24 04:59:30,794 [INFO] 17550 |                                 *d as libc::c_int
2025-04-24 04:59:30,794 [INFO] 17551 ~                             }
2025-04-24 04:59:30,795 [INFO] |
2025-04-24 04:59:30,795 [INFO] 
2025-04-24 04:59:30,795 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,795 [INFO] --> compat/regex.rs:17574:29
2025-04-24 04:59:30,795 [INFO] |
2025-04-24 04:59:30,796 [INFO] 17574 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,796 [INFO] |                       ^
2025-04-24 04:59:30,797 [INFO] ...
2025-04-24 04:59:30,797 [INFO] 17580 | ...                   })
2025-04-24 04:59:30,797 [INFO] |                        ^
2025-04-24 04:59:30,798 [INFO] |
2025-04-24 04:59:30,798 [INFO] help: remove these parentheses
2025-04-24 04:59:30,798 [INFO] |
2025-04-24 04:59:30,798 [INFO] 17574 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,798 [INFO] 17575 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,799 [INFO] ...
2025-04-24 04:59:30,799 [INFO] 17579 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,799 [INFO] 17580 ~                             }
2025-04-24 04:59:30,799 [INFO] |
2025-04-24 04:59:30,799 [INFO] 
2025-04-24 04:59:30,800 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,800 [INFO] --> compat/regex.rs:17586:29
2025-04-24 04:59:30,800 [INFO] |
2025-04-24 04:59:30,800 [INFO] 17586 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,801 [INFO] |                       ^
2025-04-24 04:59:30,801 [INFO] ...
2025-04-24 04:59:30,801 [INFO] 17590 | ...                   })
2025-04-24 04:59:30,801 [INFO] |                        ^
2025-04-24 04:59:30,802 [INFO] |
2025-04-24 04:59:30,802 [INFO] help: remove these parentheses
2025-04-24 04:59:30,802 [INFO] |
2025-04-24 04:59:30,802 [INFO] 17586 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,803 [INFO] 17587 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,803 [INFO] 17588 |                             } else {
2025-04-24 04:59:30,803 [INFO] 17589 |                                 *d as libc::c_int
2025-04-24 04:59:30,803 [INFO] 17590 ~                             }
2025-04-24 04:59:30,804 [INFO] |
2025-04-24 04:59:30,804 [INFO] 
2025-04-24 04:59:30,804 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,804 [INFO] --> compat/regex.rs:17604:25
2025-04-24 04:59:30,804 [INFO] |
2025-04-24 04:59:30,805 [INFO] 17604 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,805 [INFO] |                         ^
2025-04-24 04:59:30,805 [INFO] ...
2025-04-24 04:59:30,805 [INFO] 17608 |                         })
2025-04-24 04:59:30,806 [INFO] |                          ^
2025-04-24 04:59:30,806 [INFO] |
2025-04-24 04:59:30,806 [INFO] help: remove these parentheses
2025-04-24 04:59:30,806 [INFO] |
2025-04-24 04:59:30,806 [INFO] 17604 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,807 [INFO] 17605 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,807 [INFO] 17606 |                         } else {
2025-04-24 04:59:30,807 [INFO] 17607 |                             *d as libc::c_int
2025-04-24 04:59:30,807 [INFO] 17608 ~                         }
2025-04-24 04:59:30,808 [INFO] |
2025-04-24 04:59:30,808 [INFO] 
2025-04-24 04:59:30,808 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,808 [INFO] --> compat/regex.rs:17617:33
2025-04-24 04:59:30,809 [INFO] |
2025-04-24 04:59:30,809 [INFO] 17617 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,809 [INFO] |                       ^
2025-04-24 04:59:30,809 [INFO] ...
2025-04-24 04:59:30,809 [INFO] 17623 | ...                   })
2025-04-24 04:59:30,809 [INFO] |                        ^
2025-04-24 04:59:30,810 [INFO] |
2025-04-24 04:59:30,810 [INFO] help: remove these parentheses
2025-04-24 04:59:30,810 [INFO] |
2025-04-24 04:59:30,810 [INFO] 17617 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,810 [INFO] 17618 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,810 [INFO] ...
2025-04-24 04:59:30,811 [INFO] 17622 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,811 [INFO] 17623 ~                                 }
2025-04-24 04:59:30,811 [INFO] |
2025-04-24 04:59:30,811 [INFO] 
2025-04-24 04:59:30,811 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,812 [INFO] --> compat/regex.rs:17638:29
2025-04-24 04:59:30,812 [INFO] |
2025-04-24 04:59:30,812 [INFO] 17638 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,812 [INFO] |                       ^
2025-04-24 04:59:30,813 [INFO] ...
2025-04-24 04:59:30,813 [INFO] 17644 | ...                   })
2025-04-24 04:59:30,813 [INFO] |                        ^
2025-04-24 04:59:30,813 [INFO] |
2025-04-24 04:59:30,813 [INFO] help: remove these parentheses
2025-04-24 04:59:30,813 [INFO] |
2025-04-24 04:59:30,814 [INFO] 17638 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,814 [INFO] 17639 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-04-24 04:59:30,814 [INFO] ...
2025-04-24 04:59:30,814 [INFO] 17643 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,815 [INFO] 17644 ~                             }
2025-04-24 04:59:30,815 [INFO] |
2025-04-24 04:59:30,815 [INFO] 
2025-04-24 04:59:30,815 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,815 [INFO] --> compat/regex.rs:17649:29
2025-04-24 04:59:30,816 [INFO] |
2025-04-24 04:59:30,816 [INFO] 17649 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,816 [INFO] |                       ^
2025-04-24 04:59:30,817 [INFO] ...
2025-04-24 04:59:30,817 [INFO] 17653 | ...                   })
2025-04-24 04:59:30,818 [INFO] |                        ^
2025-04-24 04:59:30,818 [INFO] |
2025-04-24 04:59:30,818 [INFO] help: remove these parentheses
2025-04-24 04:59:30,818 [INFO] |
2025-04-24 04:59:30,818 [INFO] 17649 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,819 [INFO] 17650 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,819 [INFO] 17651 |                             } else {
2025-04-24 04:59:30,819 [INFO] 17652 |                                 *d as libc::c_int
2025-04-24 04:59:30,819 [INFO] 17653 ~                             }
2025-04-24 04:59:30,819 [INFO] |
2025-04-24 04:59:30,819 [INFO] 
2025-04-24 04:59:30,820 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,820 [INFO] --> compat/regex.rs:17680:33
2025-04-24 04:59:30,820 [INFO] |
2025-04-24 04:59:30,820 [INFO] 17680 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,821 [INFO] |                       ^
2025-04-24 04:59:30,821 [INFO] ...
2025-04-24 04:59:30,821 [INFO] 17684 | ...                   })
2025-04-24 04:59:30,821 [INFO] |                        ^
2025-04-24 04:59:30,822 [INFO] |
2025-04-24 04:59:30,822 [INFO] help: remove these parentheses
2025-04-24 04:59:30,822 [INFO] |
2025-04-24 04:59:30,822 [INFO] 17680 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,823 [INFO] 17681 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,823 [INFO] 17682 |                                 } else {
2025-04-24 04:59:30,823 [INFO] 17683 |                                     *d as libc::c_int
2025-04-24 04:59:30,823 [INFO] 17684 ~                                 }
2025-04-24 04:59:30,823 [INFO] |
2025-04-24 04:59:30,824 [INFO] 
2025-04-24 04:59:30,824 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,824 [INFO] --> compat/regex.rs:17736:33
2025-04-24 04:59:30,824 [INFO] |
2025-04-24 04:59:30,825 [INFO] 17736 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,825 [INFO] |                       ^
2025-04-24 04:59:30,825 [INFO] ...
2025-04-24 04:59:30,825 [INFO] 17740 | ...                   })
2025-04-24 04:59:30,825 [INFO] |                        ^
2025-04-24 04:59:30,826 [INFO] |
2025-04-24 04:59:30,826 [INFO] help: remove these parentheses
2025-04-24 04:59:30,826 [INFO] |
2025-04-24 04:59:30,826 [INFO] 17736 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-04-24 04:59:30,826 [INFO] 17737 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-04-24 04:59:30,827 [INFO] 17738 |                                 } else {
2025-04-24 04:59:30,827 [INFO] 17739 |                                     *d as libc::c_int
2025-04-24 04:59:30,827 [INFO] 17740 ~                                 }
2025-04-24 04:59:30,827 [INFO] |
2025-04-24 04:59:30,828 [INFO] 
2025-04-24 04:59:30,828 [INFO] warning: unnecessary parentheses around block return value
2025-04-24 04:59:30,828 [INFO] --> compat/regex.rs:17902:37
2025-04-24 04:59:30,828 [INFO] |
2025-04-24 04:59:30,828 [INFO] 17902 | ...                   (if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,829 [INFO] |                       ^
2025-04-24 04:59:30,829 [INFO] ...
2025-04-24 04:59:30,829 [INFO] 17907 | ...                   })
2025-04-24 04:59:30,829 [INFO] |                        ^
2025-04-24 04:59:30,829 [INFO] |
2025-04-24 04:59:30,830 [INFO] help: remove these parentheses
2025-04-24 04:59:30,830 [INFO] |
2025-04-24 04:59:30,830 [INFO] 17902 ~                                     if (fail_stack.stack).is_null() {
2025-04-24 04:59:30,830 [INFO] 17903 |                                         0 as libc::c_int
2025-04-24 04:59:30,830 [INFO] ...
2025-04-24 04:59:30,831 [INFO] 17906 |                                         1 as libc::c_int
2025-04-24 04:59:30,831 [INFO] 17907 ~                                     }
2025-04-24 04:59:30,831 [INFO] |
2025-04-24 04:59:30,831 [INFO] 
2025-04-24 04:59:30,831 [INFO] warning: unnecessary parentheses around method argument
2025-04-24 04:59:30,831 [INFO] --> compat/regex.rs:18239:13
2025-04-24 04:59:30,832 [INFO] |
2025-04-24 04:59:30,832 [INFO] 18239 |             (if dend == end_match_1 {
2025-04-24 04:59:30,832 [INFO] |             ^
2025-04-24 04:59:30,833 [INFO] ...
2025-04-24 04:59:30,833 [INFO] 18243 |             }),
2025-04-24 04:59:30,833 [INFO] |              ^
2025-04-24 04:59:30,833 [INFO] |
2025-04-24 04:59:30,833 [INFO] help: remove these parentheses
2025-04-24 04:59:30,834 [INFO] |
2025-04-24 04:59:30,834 [INFO] 18239 ~             if dend == end_match_1 {
2025-04-24 04:59:30,834 [INFO] 18240 |                 string1
2025-04-24 04:59:30,834 [INFO] 18241 |             } else {
2025-04-24 04:59:30,834 [INFO] 18242 |                 string2.offset(-(size1 as isize))
2025-04-24 04:59:30,834 [INFO] 18243 ~             },
2025-04-24 04:59:30,835 [INFO] |
2025-04-24 04:59:30,835 [INFO] 
2025-04-24 04:59:30,835 [INFO] warning: unused label
2025-04-24 04:59:30,835 [INFO] --> src/psgen.rs:5277:5
2025-04-24 04:59:30,835 [INFO] |
2025-04-24 04:59:30,835 [INFO] 5277 |     'c_18653: {
2025-04-24 04:59:30,836 [INFO] |     ^^^^^^^^
2025-04-24 04:59:30,836 [INFO] 
2025-04-24 04:59:30,836 [INFO] warning: unused label
2025-04-24 04:59:30,837 [INFO] --> src/psgen.rs:5352:5
2025-04-24 04:59:30,837 [INFO] |
2025-04-24 04:59:30,837 [INFO] 5352 |     'c_8716: {
2025-04-24 04:59:30,837 [INFO] |     ^^^^^^^
2025-04-24 04:59:30,838 [INFO] 
2025-04-24 04:59:30,838 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:59:30,838 [INFO] --> states/prims.rs:691:17
2025-04-24 04:59:30,838 [INFO] |
2025-04-24 04:59:30,839 [INFO] 691 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:59:30,839 [INFO] |                 ^
2025-04-24 04:59:30,839 [INFO] ...
2025-04-24 04:59:30,839 [INFO] 696 |                 }),
2025-04-24 04:59:30,839 [INFO] |                  ^
2025-04-24 04:59:30,840 [INFO] |
2025-04-24 04:59:30,840 [INFO] help: remove these parentheses
2025-04-24 04:59:30,840 [INFO] |
2025-04-24 04:59:30,840 [INFO] 691 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:59:30,841 [INFO] 692 |                     &mut (*n).u.re.compiled
2025-04-24 04:59:30,841 [INFO] ...
2025-04-24 04:59:30,841 [INFO] 695 |                     &mut (*n).u.re.compiled
2025-04-24 04:59:30,841 [INFO] 696 ~                 },
2025-04-24 04:59:30,842 [INFO] |
2025-04-24 04:59:30,842 [INFO] 
2025-04-24 04:59:30,842 [INFO] warning: unnecessary parentheses around function argument
2025-04-24 04:59:30,842 [INFO] --> states/prims.rs:747:17
2025-04-24 04:59:30,843 [INFO] |
2025-04-24 04:59:30,843 [INFO] 747 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:59:30,843 [INFO] |                 ^
2025-04-24 04:59:30,843 [INFO] ...
2025-04-24 04:59:30,844 [INFO] 752 |                 }),
2025-04-24 04:59:30,844 [INFO] |                  ^
2025-04-24 04:59:30,844 [INFO] |
2025-04-24 04:59:30,844 [INFO] help: remove these parentheses
2025-04-24 04:59:30,844 [INFO] |
2025-04-24 04:59:30,845 [INFO] 747 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-04-24 04:59:30,845 [INFO] 748 |                     &mut (*n).u.re.compiled
2025-04-24 04:59:30,845 [INFO] ...
2025-04-24 04:59:30,846 [INFO] 751 |                     &mut (*n).u.re.compiled
2025-04-24 04:59:30,846 [INFO] 752 ~                 },
2025-04-24 04:59:30,846 [INFO] |
2025-04-24 04:59:30,846 [INFO] 
2025-04-24 04:59:31,026 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,026 [INFO] --> afmlib/afm.rs:10:1
2025-04-24 04:59:31,026 [INFO] |
2025-04-24 04:59:31,026 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:59:31,026 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,027 [INFO] |
2025-04-24 04:59:31,027 [INFO] = note: `#[warn(unused_attributes)]` on by default
2025-04-24 04:59:31,027 [INFO] 
2025-04-24 04:59:31,027 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,027 [INFO] --> afmlib/afmparse.rs:10:1
2025-04-24 04:59:31,027 [INFO] |
2025-04-24 04:59:31,027 [INFO] 10 | #![feature(extern_types, label_break_value)]
2025-04-24 04:59:31,028 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,028 [INFO] 
2025-04-24 04:59:31,028 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,028 [INFO] --> afmlib/deffont.rs:10:1
2025-04-24 04:59:31,029 [INFO] |
2025-04-24 04:59:31,029 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:59:31,029 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,029 [INFO] 
2025-04-24 04:59:31,055 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,055 [INFO] --> src/main.rs:10:1
2025-04-24 04:59:31,056 [INFO] |
2025-04-24 04:59:31,056 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:59:31,056 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,056 [INFO] 
2025-04-24 04:59:31,056 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,056 [INFO] --> src/psgen.rs:10:1
2025-04-24 04:59:31,057 [INFO] |
2025-04-24 04:59:31,057 [INFO] 10 | #![feature(extern_types, label_break_value)]
2025-04-24 04:59:31,057 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,057 [INFO] 
2025-04-24 04:59:31,057 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,058 [INFO] --> src/util.rs:10:1
2025-04-24 04:59:31,058 [INFO] |
2025-04-24 04:59:31,058 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:59:31,058 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,058 [INFO] 
2025-04-24 04:59:31,076 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,076 [INFO] --> states/prims.rs:10:1
2025-04-24 04:59:31,077 [INFO] |
2025-04-24 04:59:31,077 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:59:31,077 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,077 [INFO] 
2025-04-24 04:59:31,077 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,077 [INFO] --> states/process.rs:10:1
2025-04-24 04:59:31,077 [INFO] |
2025-04-24 04:59:31,077 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:59:31,078 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,078 [INFO] 
2025-04-24 04:59:31,078 [INFO] warning: crate-level attribute should be in the root module
2025-04-24 04:59:31,078 [INFO] --> states/utils.rs:10:1
2025-04-24 04:59:31,078 [INFO] |
2025-04-24 04:59:31,078 [INFO] 10 | #![feature(extern_types)]
2025-04-24 04:59:31,078 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,078 [INFO] 
2025-04-24 04:59:31,528 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,528 [INFO] --> compat/regex.rs:15332:15
2025-04-24 04:59:31,529 [INFO] |
2025-04-24 04:59:31,529 [INFO] 15332 |     store_op1(op as libc::c_uint, loc, arg);
2025-04-24 04:59:31,529 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-24 04:59:31,529 [INFO] |     |
2025-04-24 04:59:31,529 [INFO] |     arguments to this function are incorrect
2025-04-24 04:59:31,529 [INFO] |
2025-04-24 04:59:31,529 [INFO] note: function defined here
2025-04-24 04:59:31,530 [INFO] --> compat/regex.rs:15292:22
2025-04-24 04:59:31,530 [INFO] |
2025-04-24 04:59:31,530 [INFO] 15292 | unsafe extern "C" fn store_op1(
2025-04-24 04:59:31,530 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,530 [INFO] 15293 |     mut op: re_opcode_t,
2025-04-24 04:59:31,530 [INFO] |     -------------------
2025-04-24 04:59:31,530 [INFO] 15294 |     mut loc: *mut libc::c_uchar,
2025-04-24 04:59:31,530 [INFO] |     ---------------------------
2025-04-24 04:59:31,531 [INFO] 15295 |     mut arg: libc::c_int,
2025-04-24 04:59:31,531 [INFO] |     --------------------
2025-04-24 04:59:31,531 [INFO] 
2025-04-24 04:59:31,543 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,543 [INFO] --> compat/regex.rs:15348:15
2025-04-24 04:59:31,544 [INFO] |
2025-04-24 04:59:31,544 [INFO] 15348 |     store_op2(op as libc::c_uint, loc, arg1, arg2);
2025-04-24 04:59:31,544 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-04-24 04:59:31,544 [INFO] |     |
2025-04-24 04:59:31,544 [INFO] |     arguments to this function are incorrect
2025-04-24 04:59:31,544 [INFO] |
2025-04-24 04:59:31,545 [INFO] note: function defined here
2025-04-24 04:59:31,545 [INFO] --> compat/regex.rs:15303:22
2025-04-24 04:59:31,545 [INFO] |
2025-04-24 04:59:31,545 [INFO] 15303 | unsafe extern "C" fn store_op2(
2025-04-24 04:59:31,545 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,545 [INFO] 15304 |     mut op: re_opcode_t,
2025-04-24 04:59:31,545 [INFO] |     -------------------
2025-04-24 04:59:31,545 [INFO] 15305 |     mut loc: *mut libc::c_uchar,
2025-04-24 04:59:31,546 [INFO] |     ---------------------------
2025-04-24 04:59:31,546 [INFO] 15306 |     mut arg1: libc::c_int,
2025-04-24 04:59:31,546 [INFO] |     ---------------------
2025-04-24 04:59:31,546 [INFO] 15307 |     mut arg2: libc::c_int,
2025-04-24 04:59:31,546 [INFO] |     ---------------------
2025-04-24 04:59:31,546 [INFO] 
2025-04-24 04:59:31,567 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,567 [INFO] --> compat/regex.rs:16009:9
2025-04-24 04:59:31,567 [INFO] |
2025-04-24 04:59:31,567 [INFO] 16007 |     let mut result: libc::c_int = re_match_2_internal(
2025-04-24 04:59:31,567 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-04-24 04:59:31,567 [INFO] 16008 |         bufp,
2025-04-24 04:59:31,568 [INFO] 16009 |         0 as *mut libc::c_void,
2025-04-24 04:59:31,568 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-04-24 04:59:31,568 [INFO] |
2025-04-24 04:59:31,568 [INFO] = note: expected raw pointer `*const i8`
2025-04-24 04:59:31,568 [INFO] found raw pointer `*mut c_void`
2025-04-24 04:59:31,568 [INFO] note: function defined here
2025-04-24 04:59:31,568 [INFO] --> compat/regex.rs:16042:22
2025-04-24 04:59:31,569 [INFO] |
2025-04-24 04:59:31,569 [INFO] 16042 | unsafe extern "C" fn re_match_2_internal(
2025-04-24 04:59:31,569 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-04-24 04:59:31,569 [INFO] 16043 |     mut bufp: *mut re_pattern_buffer,
2025-04-24 04:59:31,569 [INFO] |     --------------------------------
2025-04-24 04:59:31,569 [INFO] 16044 |     mut string1: *const libc::c_char,
2025-04-24 04:59:31,569 [INFO] |     --------------------------------
2025-04-24 04:59:31,570 [INFO] 16045 |     mut size1: libc::c_int,
2025-04-24 04:59:31,570 [INFO] |     ----------------------
2025-04-24 04:59:31,570 [INFO] 16046 |     mut string2: *const libc::c_char,
2025-04-24 04:59:31,570 [INFO] |     --------------------------------
2025-04-24 04:59:31,570 [INFO] 16047 |     mut size2: libc::c_int,
2025-04-24 04:59:31,570 [INFO] |     ----------------------
2025-04-24 04:59:31,570 [INFO] 16048 |     mut pos: libc::c_int,
2025-04-24 04:59:31,570 [INFO] |     --------------------
2025-04-24 04:59:31,571 [INFO] 16049 |     mut regs: *mut re_registers,
2025-04-24 04:59:31,571 [INFO] |     ---------------------------
2025-04-24 04:59:31,571 [INFO] 16050 |     mut stop: libc::c_int,
2025-04-24 04:59:31,571 [INFO] |     ---------------------
2025-04-24 04:59:31,571 [INFO] 
2025-04-24 04:59:31,734 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,734 [INFO] --> states/prims.rs:849:9
2025-04-24 04:59:31,734 [INFO] |
2025-04-24 04:59:31,735 [INFO] 847 |     n = match_arg(
2025-04-24 04:59:31,735 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:59:31,735 [INFO] 848 |         prim_name,
2025-04-24 04:59:31,735 [INFO] 849 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,735 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,735 [INFO] |
2025-04-24 04:59:31,735 [INFO] note: function defined here
2025-04-24 04:59:31,735 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,736 [INFO] |
2025-04-24 04:59:31,736 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,736 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,736 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,736 [INFO] |     --------------------------------
2025-04-24 04:59:31,736 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:59:31,737 [INFO] |     --------------------
2025-04-24 04:59:31,737 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,737 [INFO] |     ----------------------------
2025-04-24 04:59:31,737 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:59:31,737 [INFO] |     -------------------------
2025-04-24 04:59:31,737 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,738 [INFO] |     -------------------------
2025-04-24 04:59:31,738 [INFO] 
2025-04-24 04:59:31,748 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,749 [INFO] --> states/prims.rs:916:9
2025-04-24 04:59:31,749 [INFO] |
2025-04-24 04:59:31,749 [INFO] 914 |     var = match_arg(
2025-04-24 04:59:31,749 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:31,749 [INFO] 915 |         prim_name,
2025-04-24 04:59:31,749 [INFO] 916 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,749 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,749 [INFO] |
2025-04-24 04:59:31,750 [INFO] note: function defined here
2025-04-24 04:59:31,750 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,750 [INFO] |
2025-04-24 04:59:31,750 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,750 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,750 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,750 [INFO] |     --------------------------------
2025-04-24 04:59:31,750 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:59:31,751 [INFO] |     --------------------
2025-04-24 04:59:31,751 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,751 [INFO] |     ----------------------------
2025-04-24 04:59:31,751 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:59:31,751 [INFO] |     -------------------------
2025-04-24 04:59:31,751 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,751 [INFO] |     -------------------------
2025-04-24 04:59:31,752 [INFO] 
2025-04-24 04:59:31,761 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,761 [INFO] --> states/prims.rs:969:9
2025-04-24 04:59:31,761 [INFO] |
2025-04-24 04:59:31,761 [INFO] 967 |     n = match_arg(
2025-04-24 04:59:31,761 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:59:31,762 [INFO] 968 |         prim_name,
2025-04-24 04:59:31,762 [INFO] 969 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,762 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,762 [INFO] |
2025-04-24 04:59:31,762 [INFO] note: function defined here
2025-04-24 04:59:31,762 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,762 [INFO] |
2025-04-24 04:59:31,762 [INFO] 574 | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,762 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,762 [INFO] 575 |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,762 [INFO] |     --------------------------------
2025-04-24 04:59:31,762 [INFO] 576 |     mut type_0: NodeType,
2025-04-24 04:59:31,762 [INFO] |     --------------------
2025-04-24 04:59:31,763 [INFO] 577 |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,763 [INFO] |     ----------------------------
2025-04-24 04:59:31,763 [INFO] 578 |     mut env: *mut Environment,
2025-04-24 04:59:31,763 [INFO] |     -------------------------
2025-04-24 04:59:31,763 [INFO] 579 |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,764 [INFO] |     -------------------------
2025-04-24 04:59:31,764 [INFO] 
2025-04-24 04:59:31,777 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,777 [INFO] --> states/prims.rs:1147:9
2025-04-24 04:59:31,777 [INFO] |
2025-04-24 04:59:31,777 [INFO] 1145 |     s = match_arg(
2025-04-24 04:59:31,778 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:59:31,778 [INFO] 1146 |         prim_name,
2025-04-24 04:59:31,778 [INFO] 1147 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,779 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,779 [INFO] |
2025-04-24 04:59:31,779 [INFO] note: function defined here
2025-04-24 04:59:31,779 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,780 [INFO] |
2025-04-24 04:59:31,780 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,780 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,781 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,781 [INFO] |     --------------------------------
2025-04-24 04:59:31,781 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,782 [INFO] |     --------------------
2025-04-24 04:59:31,782 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,782 [INFO] |     ----------------------------
2025-04-24 04:59:31,783 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,783 [INFO] |     -------------------------
2025-04-24 04:59:31,783 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,783 [INFO] |     -------------------------
2025-04-24 04:59:31,784 [INFO] 
2025-04-24 04:59:31,794 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,794 [INFO] --> states/prims.rs:1334:9
2025-04-24 04:59:31,794 [INFO] |
2025-04-24 04:59:31,795 [INFO] 1332 |     start = match_arg(
2025-04-24 04:59:31,795 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:59:31,795 [INFO] 1333 |         prim_name,
2025-04-24 04:59:31,795 [INFO] 1334 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,796 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,796 [INFO] |
2025-04-24 04:59:31,796 [INFO] note: function defined here
2025-04-24 04:59:31,796 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,797 [INFO] |
2025-04-24 04:59:31,797 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,797 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,798 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,798 [INFO] |     --------------------------------
2025-04-24 04:59:31,798 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,799 [INFO] |     --------------------
2025-04-24 04:59:31,799 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,799 [INFO] |     ----------------------------
2025-04-24 04:59:31,799 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,800 [INFO] |     -------------------------
2025-04-24 04:59:31,800 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,801 [INFO] |     -------------------------
2025-04-24 04:59:31,801 [INFO] 
2025-04-24 04:59:31,811 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,811 [INFO] --> states/prims.rs:1341:9
2025-04-24 04:59:31,811 [INFO] |
2025-04-24 04:59:31,812 [INFO] 1339 |     end = match_arg(
2025-04-24 04:59:31,812 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:31,812 [INFO] 1340 |         prim_name,
2025-04-24 04:59:31,812 [INFO] 1341 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,812 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,813 [INFO] |
2025-04-24 04:59:31,813 [INFO] note: function defined here
2025-04-24 04:59:31,813 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,813 [INFO] |
2025-04-24 04:59:31,814 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,814 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,814 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,814 [INFO] |     --------------------------------
2025-04-24 04:59:31,814 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,815 [INFO] |     --------------------
2025-04-24 04:59:31,815 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,815 [INFO] |     ----------------------------
2025-04-24 04:59:31,815 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,815 [INFO] |     -------------------------
2025-04-24 04:59:31,816 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,816 [INFO] |     -------------------------
2025-04-24 04:59:31,816 [INFO] 
2025-04-24 04:59:31,826 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,826 [INFO] --> states/prims.rs:1468:9
2025-04-24 04:59:31,827 [INFO] |
2025-04-24 04:59:31,827 [INFO] 1466 |     str = match_arg(
2025-04-24 04:59:31,827 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:31,827 [INFO] 1467 |         prim_name,
2025-04-24 04:59:31,828 [INFO] 1468 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,828 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,828 [INFO] |
2025-04-24 04:59:31,829 [INFO] note: function defined here
2025-04-24 04:59:31,829 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,829 [INFO] |
2025-04-24 04:59:31,830 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,830 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,830 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,830 [INFO] |     --------------------------------
2025-04-24 04:59:31,831 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,831 [INFO] |     --------------------
2025-04-24 04:59:31,831 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,832 [INFO] |     ----------------------------
2025-04-24 04:59:31,832 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,832 [INFO] |     -------------------------
2025-04-24 04:59:31,832 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,833 [INFO] |     -------------------------
2025-04-24 04:59:31,833 [INFO] 
2025-04-24 04:59:31,842 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,842 [INFO] --> states/prims.rs:1512:9
2025-04-24 04:59:31,842 [INFO] |
2025-04-24 04:59:31,842 [INFO] 1510 |     ch = match_arg(
2025-04-24 04:59:31,842 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:31,843 [INFO] 1511 |         prim_name,
2025-04-24 04:59:31,843 [INFO] 1512 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,843 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,843 [INFO] |
2025-04-24 04:59:31,843 [INFO] note: function defined here
2025-04-24 04:59:31,844 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,844 [INFO] |
2025-04-24 04:59:31,844 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,845 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,845 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,845 [INFO] |     --------------------------------
2025-04-24 04:59:31,845 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,845 [INFO] |     --------------------
2025-04-24 04:59:31,846 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,846 [INFO] |     ----------------------------
2025-04-24 04:59:31,846 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,846 [INFO] |     -------------------------
2025-04-24 04:59:31,847 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,847 [INFO] |     -------------------------
2025-04-24 04:59:31,847 [INFO] 
2025-04-24 04:59:31,857 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,857 [INFO] --> states/prims.rs:1519:9
2025-04-24 04:59:31,857 [INFO] |
2025-04-24 04:59:31,857 [INFO] 1517 |     st = match_arg(
2025-04-24 04:59:31,857 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:31,857 [INFO] 1518 |         prim_name,
2025-04-24 04:59:31,858 [INFO] 1519 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,858 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,858 [INFO] |
2025-04-24 04:59:31,858 [INFO] note: function defined here
2025-04-24 04:59:31,858 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,859 [INFO] |
2025-04-24 04:59:31,859 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,859 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,859 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,859 [INFO] |     --------------------------------
2025-04-24 04:59:31,859 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,860 [INFO] |     --------------------
2025-04-24 04:59:31,860 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,860 [INFO] |     ----------------------------
2025-04-24 04:59:31,861 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,861 [INFO] |     -------------------------
2025-04-24 04:59:31,861 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,862 [INFO] |     -------------------------
2025-04-24 04:59:31,862 [INFO] 
2025-04-24 04:59:31,871 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,871 [INFO] --> states/prims.rs:1580:9
2025-04-24 04:59:31,872 [INFO] |
2025-04-24 04:59:31,872 [INFO] 1578 |     str = match_arg(
2025-04-24 04:59:31,872 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:31,872 [INFO] 1579 |         prim_name,
2025-04-24 04:59:31,872 [INFO] 1580 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,873 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,873 [INFO] |
2025-04-24 04:59:31,873 [INFO] note: function defined here
2025-04-24 04:59:31,873 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,873 [INFO] |
2025-04-24 04:59:31,873 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,874 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,874 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,874 [INFO] |     --------------------------------
2025-04-24 04:59:31,874 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,874 [INFO] |     --------------------
2025-04-24 04:59:31,875 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,875 [INFO] |     ----------------------------
2025-04-24 04:59:31,875 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,875 [INFO] |     -------------------------
2025-04-24 04:59:31,875 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,876 [INFO] |     -------------------------
2025-04-24 04:59:31,876 [INFO] 
2025-04-24 04:59:31,892 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,893 [INFO] --> states/prims.rs:1587:9
2025-04-24 04:59:31,893 [INFO] |
2025-04-24 04:59:31,893 [INFO] 1585 |     re = match_arg(
2025-04-24 04:59:31,893 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:31,893 [INFO] 1586 |         prim_name,
2025-04-24 04:59:31,893 [INFO] 1587 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,894 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,894 [INFO] |
2025-04-24 04:59:31,894 [INFO] note: function defined here
2025-04-24 04:59:31,894 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,894 [INFO] |
2025-04-24 04:59:31,894 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,895 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,895 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,895 [INFO] |     --------------------------------
2025-04-24 04:59:31,895 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,895 [INFO] |     --------------------
2025-04-24 04:59:31,896 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,896 [INFO] |     ----------------------------
2025-04-24 04:59:31,896 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,897 [INFO] |     -------------------------
2025-04-24 04:59:31,897 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,897 [INFO] |     -------------------------
2025-04-24 04:59:31,898 [INFO] 
2025-04-24 04:59:31,908 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,909 [INFO] --> states/prims.rs:1919:9
2025-04-24 04:59:31,909 [INFO] |
2025-04-24 04:59:31,909 [INFO] 1917 |     str = match_arg(
2025-04-24 04:59:31,909 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:31,909 [INFO] 1918 |         prim_name,
2025-04-24 04:59:31,909 [INFO] 1919 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,910 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,910 [INFO] |
2025-04-24 04:59:31,910 [INFO] note: function defined here
2025-04-24 04:59:31,910 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,910 [INFO] |
2025-04-24 04:59:31,911 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,911 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,911 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,911 [INFO] |     --------------------------------
2025-04-24 04:59:31,912 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,912 [INFO] |     --------------------
2025-04-24 04:59:31,912 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,913 [INFO] |     ----------------------------
2025-04-24 04:59:31,913 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,913 [INFO] |     -------------------------
2025-04-24 04:59:31,913 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,914 [INFO] |     -------------------------
2025-04-24 04:59:31,914 [INFO] 
2025-04-24 04:59:31,923 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,923 [INFO] --> states/prims.rs:1926:9
2025-04-24 04:59:31,923 [INFO] |
2025-04-24 04:59:31,923 [INFO] 1924 |     re = match_arg(
2025-04-24 04:59:31,924 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:31,924 [INFO] 1925 |         prim_name,
2025-04-24 04:59:31,924 [INFO] 1926 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,924 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,924 [INFO] |
2025-04-24 04:59:31,925 [INFO] note: function defined here
2025-04-24 04:59:31,925 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,925 [INFO] |
2025-04-24 04:59:31,925 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,926 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,926 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,926 [INFO] |     --------------------------------
2025-04-24 04:59:31,926 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,926 [INFO] |     --------------------
2025-04-24 04:59:31,927 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,927 [INFO] |     ----------------------------
2025-04-24 04:59:31,927 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,927 [INFO] |     -------------------------
2025-04-24 04:59:31,927 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,927 [INFO] |     -------------------------
2025-04-24 04:59:31,928 [INFO] 
2025-04-24 04:59:31,938 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,938 [INFO] --> states/prims.rs:1933:9
2025-04-24 04:59:31,939 [INFO] |
2025-04-24 04:59:31,939 [INFO] 1931 |     subst = match_arg(
2025-04-24 04:59:31,939 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:59:31,939 [INFO] 1932 |         prim_name,
2025-04-24 04:59:31,940 [INFO] 1933 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,940 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,940 [INFO] |
2025-04-24 04:59:31,941 [INFO] note: function defined here
2025-04-24 04:59:31,941 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,941 [INFO] |
2025-04-24 04:59:31,942 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,942 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,942 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,943 [INFO] |     --------------------------------
2025-04-24 04:59:31,943 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,943 [INFO] |     --------------------
2025-04-24 04:59:31,943 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,944 [INFO] |     ----------------------------
2025-04-24 04:59:31,944 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,945 [INFO] |     -------------------------
2025-04-24 04:59:31,945 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,945 [INFO] |     -------------------------
2025-04-24 04:59:31,946 [INFO] 
2025-04-24 04:59:31,955 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,955 [INFO] --> states/prims.rs:1966:9
2025-04-24 04:59:31,956 [INFO] |
2025-04-24 04:59:31,956 [INFO] 1964 |     str = match_arg(
2025-04-24 04:59:31,956 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:31,956 [INFO] 1965 |         prim_name,
2025-04-24 04:59:31,957 [INFO] 1966 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,957 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,957 [INFO] |
2025-04-24 04:59:31,958 [INFO] note: function defined here
2025-04-24 04:59:31,958 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,958 [INFO] |
2025-04-24 04:59:31,958 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,959 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,959 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,959 [INFO] |     --------------------------------
2025-04-24 04:59:31,960 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,960 [INFO] |     --------------------
2025-04-24 04:59:31,960 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,961 [INFO] |     ----------------------------
2025-04-24 04:59:31,961 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,961 [INFO] |     -------------------------
2025-04-24 04:59:31,962 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,962 [INFO] |     -------------------------
2025-04-24 04:59:31,962 [INFO] 
2025-04-24 04:59:31,970 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,970 [INFO] --> states/prims.rs:1973:9
2025-04-24 04:59:31,971 [INFO] |
2025-04-24 04:59:31,971 [INFO] 1971 |     re = match_arg(
2025-04-24 04:59:31,971 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:31,971 [INFO] 1972 |         prim_name,
2025-04-24 04:59:31,972 [INFO] 1973 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,972 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,972 [INFO] |
2025-04-24 04:59:31,973 [INFO] note: function defined here
2025-04-24 04:59:31,973 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,973 [INFO] |
2025-04-24 04:59:31,973 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,974 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,974 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,974 [INFO] |     --------------------------------
2025-04-24 04:59:31,975 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,975 [INFO] |     --------------------
2025-04-24 04:59:31,975 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,976 [INFO] |     ----------------------------
2025-04-24 04:59:31,976 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,976 [INFO] |     -------------------------
2025-04-24 04:59:31,977 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,977 [INFO] |     -------------------------
2025-04-24 04:59:31,977 [INFO] 
2025-04-24 04:59:31,987 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:31,987 [INFO] --> states/prims.rs:1980:9
2025-04-24 04:59:31,987 [INFO] |
2025-04-24 04:59:31,988 [INFO] 1978 |     subst = match_arg(
2025-04-24 04:59:31,989 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:59:31,989 [INFO] 1979 |         prim_name,
2025-04-24 04:59:31,989 [INFO] 1980 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:31,990 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:31,990 [INFO] |
2025-04-24 04:59:31,990 [INFO] note: function defined here
2025-04-24 04:59:31,990 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:31,990 [INFO] |
2025-04-24 04:59:31,991 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:31,991 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:31,991 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:31,991 [INFO] |     --------------------------------
2025-04-24 04:59:31,992 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:31,992 [INFO] |     --------------------
2025-04-24 04:59:31,992 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:31,993 [INFO] |     ----------------------------
2025-04-24 04:59:31,993 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:31,993 [INFO] |     -------------------------
2025-04-24 04:59:31,994 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:31,994 [INFO] |     -------------------------
2025-04-24 04:59:31,994 [INFO] 
2025-04-24 04:59:32,004 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,005 [INFO] --> states/prims.rs:2016:9
2025-04-24 04:59:32,005 [INFO] |
2025-04-24 04:59:32,005 [INFO] 2014 |     re = match_arg(
2025-04-24 04:59:32,005 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:32,006 [INFO] 2015 |         prim_name,
2025-04-24 04:59:32,006 [INFO] 2016 |         NodeType::nREGEXP as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,006 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,006 [INFO] |
2025-04-24 04:59:32,007 [INFO] note: function defined here
2025-04-24 04:59:32,007 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,007 [INFO] |
2025-04-24 04:59:32,007 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,007 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,008 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,008 [INFO] |     --------------------------------
2025-04-24 04:59:32,008 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,009 [INFO] |     --------------------
2025-04-24 04:59:32,009 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,009 [INFO] |     ----------------------------
2025-04-24 04:59:32,010 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,010 [INFO] |     -------------------------
2025-04-24 04:59:32,010 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,011 [INFO] |     -------------------------
2025-04-24 04:59:32,011 [INFO] 
2025-04-24 04:59:32,021 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,022 [INFO] --> states/prims.rs:2023:9
2025-04-24 04:59:32,022 [INFO] |
2025-04-24 04:59:32,022 [INFO] 2021 |     str = match_arg(
2025-04-24 04:59:32,022 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:32,023 [INFO] 2022 |         prim_name,
2025-04-24 04:59:32,023 [INFO] 2023 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,023 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,023 [INFO] |
2025-04-24 04:59:32,024 [INFO] note: function defined here
2025-04-24 04:59:32,024 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,024 [INFO] |
2025-04-24 04:59:32,024 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,024 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,025 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,025 [INFO] |     --------------------------------
2025-04-24 04:59:32,025 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,025 [INFO] |     --------------------
2025-04-24 04:59:32,026 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,026 [INFO] |     ----------------------------
2025-04-24 04:59:32,026 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,027 [INFO] |     -------------------------
2025-04-24 04:59:32,027 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,027 [INFO] |     -------------------------
2025-04-24 04:59:32,028 [INFO] 
2025-04-24 04:59:32,042 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,042 [INFO] --> states/prims.rs:2131:9
2025-04-24 04:59:32,042 [INFO] |
2025-04-24 04:59:32,042 [INFO] 2129 |     fmt = match_arg(
2025-04-24 04:59:32,043 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:32,043 [INFO] 2130 |         prim_name,
2025-04-24 04:59:32,043 [INFO] 2131 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,043 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,043 [INFO] |
2025-04-24 04:59:32,044 [INFO] note: function defined here
2025-04-24 04:59:32,044 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,044 [INFO] |
2025-04-24 04:59:32,044 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,045 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,045 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,045 [INFO] |     --------------------------------
2025-04-24 04:59:32,045 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,045 [INFO] |     --------------------
2025-04-24 04:59:32,046 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,046 [INFO] |     ----------------------------
2025-04-24 04:59:32,046 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,046 [INFO] |     -------------------------
2025-04-24 04:59:32,047 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,047 [INFO] |     -------------------------
2025-04-24 04:59:32,047 [INFO] 
2025-04-24 04:59:32,066 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,066 [INFO] --> states/prims.rs:2423:9
2025-04-24 04:59:32,067 [INFO] |
2025-04-24 04:59:32,067 [INFO] 2421 |     s1 = match_arg(
2025-04-24 04:59:32,067 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:32,067 [INFO] 2422 |         prim_name,
2025-04-24 04:59:32,067 [INFO] 2423 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,067 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,068 [INFO] |
2025-04-24 04:59:32,068 [INFO] note: function defined here
2025-04-24 04:59:32,068 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,068 [INFO] |
2025-04-24 04:59:32,069 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,069 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,069 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,069 [INFO] |     --------------------------------
2025-04-24 04:59:32,069 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,070 [INFO] |     --------------------
2025-04-24 04:59:32,070 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,070 [INFO] |     ----------------------------
2025-04-24 04:59:32,070 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,070 [INFO] |     -------------------------
2025-04-24 04:59:32,071 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,071 [INFO] |     -------------------------
2025-04-24 04:59:32,071 [INFO] 
2025-04-24 04:59:32,085 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,085 [INFO] --> states/prims.rs:2430:9
2025-04-24 04:59:32,086 [INFO] |
2025-04-24 04:59:32,086 [INFO] 2428 |     s2 = match_arg(
2025-04-24 04:59:32,086 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:32,087 [INFO] 2429 |         prim_name,
2025-04-24 04:59:32,087 [INFO] 2430 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,087 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,088 [INFO] |
2025-04-24 04:59:32,088 [INFO] note: function defined here
2025-04-24 04:59:32,089 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,089 [INFO] |
2025-04-24 04:59:32,089 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,091 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,091 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,091 [INFO] |     --------------------------------
2025-04-24 04:59:32,091 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,092 [INFO] |     --------------------
2025-04-24 04:59:32,092 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,093 [INFO] |     ----------------------------
2025-04-24 04:59:32,093 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,093 [INFO] |     -------------------------
2025-04-24 04:59:32,093 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,093 [INFO] |     -------------------------
2025-04-24 04:59:32,094 [INFO] 
2025-04-24 04:59:32,107 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,107 [INFO] --> states/prims.rs:2506:9
2025-04-24 04:59:32,108 [INFO] |
2025-04-24 04:59:32,108 [INFO] 2504 |     n = match_arg(
2025-04-24 04:59:32,108 [INFO] |         --------- arguments to this function are incorrect
2025-04-24 04:59:32,108 [INFO] 2505 |         prim_name,
2025-04-24 04:59:32,108 [INFO] 2506 |         NodeType::nVOID as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,108 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,109 [INFO] |
2025-04-24 04:59:32,109 [INFO] note: function defined here
2025-04-24 04:59:32,109 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,109 [INFO] |
2025-04-24 04:59:32,109 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,109 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,110 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,110 [INFO] |     --------------------------------
2025-04-24 04:59:32,110 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,110 [INFO] |     --------------------
2025-04-24 04:59:32,110 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,110 [INFO] |     ----------------------------
2025-04-24 04:59:32,110 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,111 [INFO] |     -------------------------
2025-04-24 04:59:32,111 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,111 [INFO] |     -------------------------
2025-04-24 04:59:32,111 [INFO] 
2025-04-24 04:59:32,128 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,128 [INFO] --> states/prims.rs:2603:9
2025-04-24 04:59:32,128 [INFO] |
2025-04-24 04:59:32,128 [INFO] 2601 |     s1 = match_arg(
2025-04-24 04:59:32,128 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:32,129 [INFO] 2602 |         prim_name,
2025-04-24 04:59:32,129 [INFO] 2603 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,129 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,129 [INFO] |
2025-04-24 04:59:32,129 [INFO] note: function defined here
2025-04-24 04:59:32,129 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,130 [INFO] |
2025-04-24 04:59:32,130 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,130 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,130 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,130 [INFO] |     --------------------------------
2025-04-24 04:59:32,131 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,131 [INFO] |     --------------------
2025-04-24 04:59:32,131 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,131 [INFO] |     ----------------------------
2025-04-24 04:59:32,131 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,132 [INFO] |     -------------------------
2025-04-24 04:59:32,132 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,132 [INFO] |     -------------------------
2025-04-24 04:59:32,132 [INFO] 
2025-04-24 04:59:32,148 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,148 [INFO] --> states/prims.rs:2610:9
2025-04-24 04:59:32,148 [INFO] |
2025-04-24 04:59:32,148 [INFO] 2608 |     s2 = match_arg(
2025-04-24 04:59:32,149 [INFO] |          --------- arguments to this function are incorrect
2025-04-24 04:59:32,149 [INFO] 2609 |         prim_name,
2025-04-24 04:59:32,149 [INFO] 2610 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,149 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,150 [INFO] |
2025-04-24 04:59:32,150 [INFO] note: function defined here
2025-04-24 04:59:32,150 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,150 [INFO] |
2025-04-24 04:59:32,151 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,151 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,151 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,151 [INFO] |     --------------------------------
2025-04-24 04:59:32,152 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,152 [INFO] |     --------------------
2025-04-24 04:59:32,152 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,153 [INFO] |     ----------------------------
2025-04-24 04:59:32,153 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,153 [INFO] |     -------------------------
2025-04-24 04:59:32,154 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,154 [INFO] |     -------------------------
2025-04-24 04:59:32,155 [INFO] 
2025-04-24 04:59:32,163 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,164 [INFO] --> states/prims.rs:2617:9
2025-04-24 04:59:32,164 [INFO] |
2025-04-24 04:59:32,165 [INFO] 2615 |     len = match_arg(
2025-04-24 04:59:32,165 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:32,165 [INFO] 2616 |         prim_name,
2025-04-24 04:59:32,166 [INFO] 2617 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,166 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,166 [INFO] |
2025-04-24 04:59:32,166 [INFO] note: function defined here
2025-04-24 04:59:32,166 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,167 [INFO] |
2025-04-24 04:59:32,167 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,167 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,167 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,167 [INFO] |     --------------------------------
2025-04-24 04:59:32,167 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,168 [INFO] |     --------------------
2025-04-24 04:59:32,168 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,168 [INFO] |     ----------------------------
2025-04-24 04:59:32,168 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,169 [INFO] |     -------------------------
2025-04-24 04:59:32,169 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,169 [INFO] |     -------------------------
2025-04-24 04:59:32,169 [INFO] 
2025-04-24 04:59:32,183 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,183 [INFO] --> states/prims.rs:2697:9
2025-04-24 04:59:32,184 [INFO] |
2025-04-24 04:59:32,184 [INFO] 2695 |     str = match_arg(
2025-04-24 04:59:32,184 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:32,184 [INFO] 2696 |         prim_name,
2025-04-24 04:59:32,185 [INFO] 2697 |         NodeType::nSTRING as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,185 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,185 [INFO] |
2025-04-24 04:59:32,185 [INFO] note: function defined here
2025-04-24 04:59:32,185 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,185 [INFO] |
2025-04-24 04:59:32,186 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,186 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,186 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,186 [INFO] |     --------------------------------
2025-04-24 04:59:32,186 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,186 [INFO] |     --------------------
2025-04-24 04:59:32,187 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,187 [INFO] |     ----------------------------
2025-04-24 04:59:32,187 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,187 [INFO] |     -------------------------
2025-04-24 04:59:32,187 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,188 [INFO] |     -------------------------
2025-04-24 04:59:32,188 [INFO] 
2025-04-24 04:59:32,202 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,203 [INFO] --> states/prims.rs:2704:9
2025-04-24 04:59:32,203 [INFO] |
2025-04-24 04:59:32,203 [INFO] 2702 |     start = match_arg(
2025-04-24 04:59:32,203 [INFO] |             --------- arguments to this function are incorrect
2025-04-24 04:59:32,203 [INFO] 2703 |         prim_name,
2025-04-24 04:59:32,204 [INFO] 2704 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,204 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,204 [INFO] |
2025-04-24 04:59:32,205 [INFO] note: function defined here
2025-04-24 04:59:32,205 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,205 [INFO] |
2025-04-24 04:59:32,206 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,206 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,206 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,206 [INFO] |     --------------------------------
2025-04-24 04:59:32,207 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,207 [INFO] |     --------------------
2025-04-24 04:59:32,207 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,207 [INFO] |     ----------------------------
2025-04-24 04:59:32,207 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,208 [INFO] |     -------------------------
2025-04-24 04:59:32,208 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,208 [INFO] |     -------------------------
2025-04-24 04:59:32,208 [INFO] 
2025-04-24 04:59:32,232 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,232 [INFO] --> states/prims.rs:2711:9
2025-04-24 04:59:32,232 [INFO] |
2025-04-24 04:59:32,232 [INFO] 2709 |     end = match_arg(
2025-04-24 04:59:32,233 [INFO] |           --------- arguments to this function are incorrect
2025-04-24 04:59:32,233 [INFO] 2710 |         prim_name,
2025-04-24 04:59:32,233 [INFO] 2711 |         NodeType::nINTEGER as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,233 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-04-24 04:59:32,233 [INFO] |
2025-04-24 04:59:32,233 [INFO] note: function defined here
2025-04-24 04:59:32,234 [INFO] --> states/prims.rs:574:22
2025-04-24 04:59:32,234 [INFO] |
2025-04-24 04:59:32,234 [INFO] 574  | unsafe extern "C" fn match_arg(
2025-04-24 04:59:32,234 [INFO] |                      ^^^^^^^^^
2025-04-24 04:59:32,235 [INFO] 575  |     mut prim_name: *mut libc::c_char,
2025-04-24 04:59:32,235 [INFO] |     --------------------------------
2025-04-24 04:59:32,235 [INFO] 576  |     mut type_0: NodeType,
2025-04-24 04:59:32,236 [INFO] |     --------------------
2025-04-24 04:59:32,236 [INFO] 577  |     mut argp: *mut *mut ListItem,
2025-04-24 04:59:32,236 [INFO] |     ----------------------------
2025-04-24 04:59:32,237 [INFO] 578  |     mut env: *mut Environment,
2025-04-24 04:59:32,237 [INFO] |     -------------------------
2025-04-24 04:59:32,237 [INFO] 579  |     mut linenum: libc::c_uint,
2025-04-24 04:59:32,238 [INFO] |     -------------------------
2025-04-24 04:59:32,238 [INFO] 
2025-04-24 04:59:32,259 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,259 [INFO] --> states/utils.rs:928:21
2025-04-24 04:59:32,260 [INFO] |
2025-04-24 04:59:32,260 [INFO] 928 |     n2 = node_alloc((*n).type_0 as libc::c_uint);
2025-04-24 04:59:32,260 [INFO] |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,260 [INFO] |          |
2025-04-24 04:59:32,261 [INFO] |          arguments to this function are incorrect
2025-04-24 04:59:32,261 [INFO] |
2025-04-24 04:59:32,261 [INFO] note: function defined here
2025-04-24 04:59:32,262 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,262 [INFO] |
2025-04-24 04:59:32,262 [INFO] 909 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,262 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,263 [INFO] 
2025-04-24 04:59:32,271 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,272 [INFO] --> states/utils.rs:1020:20
2025-04-24 04:59:32,272 [INFO] |
2025-04-24 04:59:32,272 [INFO] 1020 |     n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:59:32,272 [INFO] |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,273 [INFO] |         |
2025-04-24 04:59:32,273 [INFO] |         arguments to this function are incorrect
2025-04-24 04:59:32,274 [INFO] |
2025-04-24 04:59:32,274 [INFO] note: function defined here
2025-04-24 04:59:32,274 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,275 [INFO] |
2025-04-24 04:59:32,275 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,275 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,276 [INFO] 
2025-04-24 04:59:32,285 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,285 [INFO] --> states/utils.rs:1322:28
2025-04-24 04:59:32,286 [INFO] |
2025-04-24 04:59:32,286 [INFO] 1322 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:59:32,286 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,286 [INFO] |                 |
2025-04-24 04:59:32,287 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:59:32,287 [INFO] |
2025-04-24 04:59:32,287 [INFO] note: function defined here
2025-04-24 04:59:32,288 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,288 [INFO] |
2025-04-24 04:59:32,288 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,289 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,289 [INFO] 
2025-04-24 04:59:32,297 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,298 [INFO] --> states/utils.rs:1350:28
2025-04-24 04:59:32,298 [INFO] |
2025-04-24 04:59:32,298 [INFO] 1350 |             n = node_alloc(NodeType::nSTRING as libc::c_int as libc::c_uint);
2025-04-24 04:59:32,298 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,299 [INFO] |                 |
2025-04-24 04:59:32,299 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:59:32,300 [INFO] |
2025-04-24 04:59:32,300 [INFO] note: function defined here
2025-04-24 04:59:32,300 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,300 [INFO] |
2025-04-24 04:59:32,301 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,301 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,301 [INFO] 
2025-04-24 04:59:32,312 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,313 [INFO] --> states/utils.rs:1375:28
2025-04-24 04:59:32,313 [INFO] |
2025-04-24 04:59:32,313 [INFO] 1375 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:59:32,314 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,314 [INFO] |                 |
2025-04-24 04:59:32,314 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:59:32,314 [INFO] |
2025-04-24 04:59:32,315 [INFO] note: function defined here
2025-04-24 04:59:32,315 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,315 [INFO] |
2025-04-24 04:59:32,315 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,316 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,316 [INFO] 
2025-04-24 04:59:32,325 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,326 [INFO] --> states/utils.rs:1466:32
2025-04-24 04:59:32,326 [INFO] |
2025-04-24 04:59:32,326 [INFO] 1466 |                 n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:59:32,326 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,327 [INFO] |                     |
2025-04-24 04:59:32,327 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:59:32,327 [INFO] |
2025-04-24 04:59:32,328 [INFO] note: function defined here
2025-04-24 04:59:32,328 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,328 [INFO] |
2025-04-24 04:59:32,329 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,329 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,329 [INFO] 
2025-04-24 04:59:32,339 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,340 [INFO] --> states/utils.rs:1531:32
2025-04-24 04:59:32,340 [INFO] |
2025-04-24 04:59:32,340 [INFO] 1531 |                 n = node_alloc(NodeType::nREAL as libc::c_int as libc::c_uint);
2025-04-24 04:59:32,340 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,341 [INFO] |                     |
2025-04-24 04:59:32,341 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:59:32,341 [INFO] |
2025-04-24 04:59:32,341 [INFO] note: function defined here
2025-04-24 04:59:32,342 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,342 [INFO] |
2025-04-24 04:59:32,342 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,343 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,343 [INFO] 
2025-04-24 04:59:32,353 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,353 [INFO] --> states/utils.rs:1637:28
2025-04-24 04:59:32,354 [INFO] |
2025-04-24 04:59:32,354 [INFO] 1637 |             n = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:59:32,354 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,354 [INFO] |                 |
2025-04-24 04:59:32,355 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:59:32,355 [INFO] |
2025-04-24 04:59:32,355 [INFO] note: function defined here
2025-04-24 04:59:32,356 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,356 [INFO] |
2025-04-24 04:59:32,356 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,357 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,357 [INFO] 
2025-04-24 04:59:32,366 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,367 [INFO] --> states/utils.rs:1776:25
2025-04-24 04:59:32,367 [INFO] |
2025-04-24 04:59:32,368 [INFO] 1773 |                     n2 = calculate_binary(
2025-04-24 04:59:32,368 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:59:32,368 [INFO] ...
2025-04-24 04:59:32,368 [INFO] 1776 |                         ExprType::ePLUS as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,369 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:59:32,369 [INFO] |
2025-04-24 04:59:32,369 [INFO] note: function defined here
2025-04-24 04:59:32,370 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:59:32,370 [INFO] |
2025-04-24 04:59:32,370 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:59:32,370 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:59:32,371 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:59:32,371 [INFO] |     ----------------
2025-04-24 04:59:32,371 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:59:32,371 [INFO] |     ----------------
2025-04-24 04:59:32,371 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:59:32,372 [INFO] |     --------------------
2025-04-24 04:59:32,372 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:59:32,372 [INFO] |     ---------------------------
2025-04-24 04:59:32,373 [INFO] 
2025-04-24 04:59:32,383 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,384 [INFO] --> states/utils.rs:1784:25
2025-04-24 04:59:32,384 [INFO] |
2025-04-24 04:59:32,384 [INFO] 1781 |                     n2 = calculate_binary(
2025-04-24 04:59:32,384 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:59:32,385 [INFO] ...
2025-04-24 04:59:32,385 [INFO] 1784 |                         ExprType::eMINUS as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,385 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:59:32,385 [INFO] |
2025-04-24 04:59:32,386 [INFO] note: function defined here
2025-04-24 04:59:32,386 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:59:32,386 [INFO] |
2025-04-24 04:59:32,386 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:59:32,386 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:59:32,387 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:59:32,387 [INFO] |     ----------------
2025-04-24 04:59:32,387 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:59:32,388 [INFO] |     ----------------
2025-04-24 04:59:32,388 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:59:32,388 [INFO] |     --------------------
2025-04-24 04:59:32,389 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:59:32,389 [INFO] |     ---------------------------
2025-04-24 04:59:32,390 [INFO] 
2025-04-24 04:59:32,399 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,399 [INFO] --> states/utils.rs:1792:25
2025-04-24 04:59:32,399 [INFO] |
2025-04-24 04:59:32,399 [INFO] 1789 |                     n2 = calculate_binary(
2025-04-24 04:59:32,400 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:59:32,400 [INFO] ...
2025-04-24 04:59:32,400 [INFO] 1792 |                         ExprType::eMULT as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,400 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:59:32,401 [INFO] |
2025-04-24 04:59:32,401 [INFO] note: function defined here
2025-04-24 04:59:32,401 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:59:32,401 [INFO] |
2025-04-24 04:59:32,402 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:59:32,402 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:59:32,402 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:59:32,403 [INFO] |     ----------------
2025-04-24 04:59:32,403 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:59:32,403 [INFO] |     ----------------
2025-04-24 04:59:32,404 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:59:32,404 [INFO] |     --------------------
2025-04-24 04:59:32,404 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:59:32,405 [INFO] |     ---------------------------
2025-04-24 04:59:32,405 [INFO] 
2025-04-24 04:59:32,415 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,415 [INFO] --> states/utils.rs:1800:25
2025-04-24 04:59:32,415 [INFO] |
2025-04-24 04:59:32,415 [INFO] 1797 |                     n2 = calculate_binary(
2025-04-24 04:59:32,416 [INFO] |                          ---------------- arguments to this function are incorrect
2025-04-24 04:59:32,416 [INFO] ...
2025-04-24 04:59:32,416 [INFO] 1800 |                         ExprType::eDIV as libc::c_int as libc::c_uint,
2025-04-24 04:59:32,416 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:59:32,417 [INFO] |
2025-04-24 04:59:32,417 [INFO] note: function defined here
2025-04-24 04:59:32,417 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:59:32,417 [INFO] |
2025-04-24 04:59:32,418 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:59:32,418 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:59:32,418 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:59:32,418 [INFO] |     ----------------
2025-04-24 04:59:32,418 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:59:32,419 [INFO] |     ----------------
2025-04-24 04:59:32,419 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:59:32,419 [INFO] |     --------------------
2025-04-24 04:59:32,419 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:59:32,420 [INFO] |     ---------------------------
2025-04-24 04:59:32,421 [INFO] 
2025-04-24 04:59:32,431 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,432 [INFO] --> states/utils.rs:1821:17
2025-04-24 04:59:32,432 [INFO] |
2025-04-24 04:59:32,432 [INFO] 1818 |               n = calculate_binary(
2025-04-24 04:59:32,433 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-24 04:59:32,433 [INFO] ...
2025-04-24 04:59:32,433 [INFO] 1821 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-24 04:59:32,434 [INFO] 1822 | |                     == ExprType::ePOSTFIXADD as libc::c_int as libc::c_uint
2025-04-24 04:59:32,434 [INFO] 1823 | |                 {
2025-04-24 04:59:32,434 [INFO] 1824 | |                     ExprType::ePLUS as libc::c_int
2025-04-24 04:59:32,434 [INFO] 1825 | |                 } else {
2025-04-24 04:59:32,434 [INFO] 1826 | |                     ExprType::eMINUS as libc::c_int
2025-04-24 04:59:32,435 [INFO] 1827 | |                 }) as libc::c_uint,
2025-04-24 04:59:32,435 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:59:32,435 [INFO] |
2025-04-24 04:59:32,436 [INFO] note: function defined here
2025-04-24 04:59:32,436 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:59:32,436 [INFO] |
2025-04-24 04:59:32,437 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:59:32,437 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:59:32,437 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:59:32,437 [INFO] |     ----------------
2025-04-24 04:59:32,438 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:59:32,438 [INFO] |     ----------------
2025-04-24 04:59:32,439 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:59:32,439 [INFO] |     --------------------
2025-04-24 04:59:32,439 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:59:32,439 [INFO] |     ---------------------------
2025-04-24 04:59:32,440 [INFO] 
2025-04-24 04:59:32,448 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,448 [INFO] --> states/utils.rs:1840:17
2025-04-24 04:59:32,448 [INFO] |
2025-04-24 04:59:32,449 [INFO] 1837 |               n = calculate_binary(
2025-04-24 04:59:32,449 [INFO] |                   ---------------- arguments to this function are incorrect
2025-04-24 04:59:32,449 [INFO] ...
2025-04-24 04:59:32,449 [INFO] 1840 | /                 (if (*expr).type_0 as libc::c_uint
2025-04-24 04:59:32,450 [INFO] 1841 | |                     == ExprType::ePREFIXADD as libc::c_int as libc::c_uint
2025-04-24 04:59:32,450 [INFO] 1842 | |                 {
2025-04-24 04:59:32,450 [INFO] 1843 | |                     ExprType::ePLUS as libc::c_int
2025-04-24 04:59:32,451 [INFO] 1844 | |                 } else {
2025-04-24 04:59:32,451 [INFO] 1845 | |                     ExprType::eMINUS as libc::c_int
2025-04-24 04:59:32,451 [INFO] 1846 | |                 }) as libc::c_uint,
2025-04-24 04:59:32,451 [INFO] | |__________________________________^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:59:32,452 [INFO] |
2025-04-24 04:59:32,452 [INFO] note: function defined here
2025-04-24 04:59:32,452 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:59:32,453 [INFO] |
2025-04-24 04:59:32,453 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:59:32,453 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:59:32,454 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:59:32,454 [INFO] |     ----------------
2025-04-24 04:59:32,455 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:59:32,455 [INFO] |     ----------------
2025-04-24 04:59:32,455 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:59:32,455 [INFO] |     --------------------
2025-04-24 04:59:32,456 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:59:32,456 [INFO] |     ---------------------------
2025-04-24 04:59:32,456 [INFO] 
2025-04-24 04:59:32,468 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,468 [INFO] --> states/utils.rs:2039:32
2025-04-24 04:59:32,468 [INFO] |
2025-04-24 04:59:32,468 [INFO] 2039 |                 l = node_alloc(NodeType::nINTEGER as libc::c_int as libc::c_uint);
2025-04-24 04:59:32,469 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-04-24 04:59:32,469 [INFO] |                     |
2025-04-24 04:59:32,469 [INFO] |                     arguments to this function are incorrect
2025-04-24 04:59:32,470 [INFO] |
2025-04-24 04:59:32,470 [INFO] note: function defined here
2025-04-24 04:59:32,470 [INFO] --> states/utils.rs:909:26
2025-04-24 04:59:32,470 [INFO] |
2025-04-24 04:59:32,471 [INFO] 909  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-04-24 04:59:32,471 [INFO] |                          ^^^^^^^^^^ --------------------
2025-04-24 04:59:32,471 [INFO] 
2025-04-24 04:59:32,483 [INFO] error[E0308]: mismatched types
2025-04-24 04:59:32,483 [INFO] --> states/utils.rs:2085:40
2025-04-24 04:59:32,483 [INFO] |
2025-04-24 04:59:32,484 [INFO] 2085 |             n = calculate_binary(l, r, (*expr).type_0 as libc::c_uint, (*expr).linenum);
2025-04-24 04:59:32,484 [INFO] |                 ----------------       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-04-24 04:59:32,484 [INFO] |                 |
2025-04-24 04:59:32,485 [INFO] |                 arguments to this function are incorrect
2025-04-24 04:59:32,485 [INFO] |
2025-04-24 04:59:32,485 [INFO] note: function defined here
2025-04-24 04:59:32,485 [INFO] --> states/utils.rs:1453:22
2025-04-24 04:59:32,486 [INFO] |
2025-04-24 04:59:32,486 [INFO] 1453 | unsafe extern "C" fn calculate_binary(
2025-04-24 04:59:32,486 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-04-24 04:59:32,486 [INFO] 1454 |     mut l: *mut Node,
2025-04-24 04:59:32,486 [INFO] |     ----------------
2025-04-24 04:59:32,487 [INFO] 1455 |     mut r: *mut Node,
2025-04-24 04:59:32,487 [INFO] |     ----------------
2025-04-24 04:59:32,487 [INFO] 1456 |     mut type_0: ExprType,
2025-04-24 04:59:32,488 [INFO] |     --------------------
2025-04-24 04:59:32,488 [INFO] 1457 |     mut linenum_0: libc::c_uint,
2025-04-24 04:59:32,488 [INFO] |     ---------------------------
2025-04-24 04:59:32,488 [INFO] 
2025-04-24 04:59:32,498 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-04-24 04:59:32,509 [INFO] warning: `c2rust_out` (lib) generated 33 warnings
2025-04-24 04:59:32,509 [INFO] error: could not compile `c2rust_out` due to 48 previous errors; 33 warnings emitted
2025-04-24 04:59:32,509 [ERROR] cargo build failed with code 101
2025-05-04 05:27:35,296 [INFO] Running: c2rust transpile -e compile_commands.json
2025-05-04 05:27:40,635 [INFO] c2rust transpile succeeded
2025-05-04 05:27:40,636 [INFO] Running: cargo build
2025-05-04 05:27:40,900 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-05-04 05:27:41,757 [INFO] warning: unused label
2025-05-04 05:27:41,757 [INFO] --> afmlib/afmparse.rs:1309:9
2025-05-04 05:27:41,757 [INFO] |
2025-05-04 05:27:41,757 [INFO] 1309 |         'c_3699: {
2025-05-04 05:27:41,758 [INFO] |         ^^^^^^^
2025-05-04 05:27:41,758 [INFO] |
2025-05-04 05:27:41,758 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-05-04 05:27:41,758 [INFO] 
2025-05-04 05:27:41,760 [INFO] warning: unused import: `::libc`
2025-05-04 05:27:41,761 [INFO] --> compat/getopt.rs:1:5
2025-05-04 05:27:41,761 [INFO] |
2025-05-04 05:27:41,761 [INFO] 1 | use ::libc;
2025-05-04 05:27:41,761 [INFO] |     ^^^^^^
2025-05-04 05:27:41,761 [INFO] |
2025-05-04 05:27:41,761 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-05-04 05:27:41,761 [INFO] 
2025-05-04 05:27:41,762 [INFO] warning: unused import: `::libc`
2025-05-04 05:27:41,762 [INFO] --> compat/getopt1.rs:1:5
2025-05-04 05:27:41,762 [INFO] |
2025-05-04 05:27:41,762 [INFO] 1 | use ::libc;
2025-05-04 05:27:41,762 [INFO] |     ^^^^^^
2025-05-04 05:27:41,762 [INFO] 
2025-05-04 05:27:41,768 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,768 [INFO] --> compat/regex.rs:15502:33
2025-05-04 05:27:41,768 [INFO] |
2025-05-04 05:27:41,768 [INFO] 15502 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,768 [INFO] |                       ^
2025-05-04 05:27:41,769 [INFO] ...
2025-05-04 05:27:41,769 [INFO] 15507 | ...                   })
2025-05-04 05:27:41,769 [INFO] |                        ^
2025-05-04 05:27:41,770 [INFO] |
2025-05-04 05:27:41,770 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-05-04 05:27:41,770 [INFO] help: remove these parentheses
2025-05-04 05:27:41,770 [INFO] |
2025-05-04 05:27:41,770 [INFO] 15502 ~                                 if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,770 [INFO] 15503 |                                     0 as libc::c_int
2025-05-04 05:27:41,770 [INFO] ...
2025-05-04 05:27:41,771 [INFO] 15506 |                                     1 as libc::c_int
2025-05-04 05:27:41,771 [INFO] 15507 ~                                 }
2025-05-04 05:27:41,771 [INFO] |
2025-05-04 05:27:41,771 [INFO] 
2025-05-04 05:27:41,771 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,771 [INFO] --> compat/regex.rs:16491:37
2025-05-04 05:27:41,773 [INFO] |
2025-05-04 05:27:41,773 [INFO] 16491 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,773 [INFO] |                       ^
2025-05-04 05:27:41,773 [INFO] ...
2025-05-04 05:27:41,773 [INFO] 16496 | ...                   })
2025-05-04 05:27:41,774 [INFO] |                        ^
2025-05-04 05:27:41,774 [INFO] |
2025-05-04 05:27:41,774 [INFO] help: remove these parentheses
2025-05-04 05:27:41,774 [INFO] |
2025-05-04 05:27:41,775 [INFO] 16491 ~                                     if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,775 [INFO] 16492 |                                         0 as libc::c_int
2025-05-04 05:27:41,775 [INFO] ...
2025-05-04 05:27:41,775 [INFO] 16495 |                                         1 as libc::c_int
2025-05-04 05:27:41,775 [INFO] 16496 ~                                     }
2025-05-04 05:27:41,776 [INFO] |
2025-05-04 05:27:41,776 [INFO] 
2025-05-04 05:27:41,776 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,776 [INFO] --> compat/regex.rs:16753:29
2025-05-04 05:27:41,776 [INFO] |
2025-05-04 05:27:41,777 [INFO] 16753 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,777 [INFO] |                       ^
2025-05-04 05:27:41,777 [INFO] ...
2025-05-04 05:27:41,777 [INFO] 16758 | ...                   })
2025-05-04 05:27:41,777 [INFO] |                        ^
2025-05-04 05:27:41,777 [INFO] |
2025-05-04 05:27:41,778 [INFO] help: remove these parentheses
2025-05-04 05:27:41,778 [INFO] |
2025-05-04 05:27:41,778 [INFO] 16753 ~                             if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,778 [INFO] 16754 |                                 0 as libc::c_int
2025-05-04 05:27:41,778 [INFO] ...
2025-05-04 05:27:41,778 [INFO] 16757 |                                 1 as libc::c_int
2025-05-04 05:27:41,778 [INFO] 16758 ~                             }
2025-05-04 05:27:41,778 [INFO] |
2025-05-04 05:27:41,778 [INFO] 
2025-05-04 05:27:41,779 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,779 [INFO] --> compat/regex.rs:17041:29
2025-05-04 05:27:41,779 [INFO] |
2025-05-04 05:27:41,779 [INFO] 17041 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,780 [INFO] |                       ^
2025-05-04 05:27:41,780 [INFO] ...
2025-05-04 05:27:41,780 [INFO] 17046 | ...                   })
2025-05-04 05:27:41,780 [INFO] |                        ^
2025-05-04 05:27:41,781 [INFO] |
2025-05-04 05:27:41,781 [INFO] help: remove these parentheses
2025-05-04 05:27:41,781 [INFO] |
2025-05-04 05:27:41,781 [INFO] 17041 ~                             if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,781 [INFO] 17042 |                                 0 as libc::c_int
2025-05-04 05:27:41,781 [INFO] ...
2025-05-04 05:27:41,781 [INFO] 17045 |                                 1 as libc::c_int
2025-05-04 05:27:41,781 [INFO] 17046 ~                             }
2025-05-04 05:27:41,781 [INFO] |
2025-05-04 05:27:41,781 [INFO] 
2025-05-04 05:27:41,782 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,782 [INFO] --> compat/regex.rs:17138:29
2025-05-04 05:27:41,782 [INFO] |
2025-05-04 05:27:41,782 [INFO] 17138 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,782 [INFO] |                       ^
2025-05-04 05:27:41,782 [INFO] ...
2025-05-04 05:27:41,782 [INFO] 17143 | ...                   })
2025-05-04 05:27:41,782 [INFO] |                        ^
2025-05-04 05:27:41,782 [INFO] |
2025-05-04 05:27:41,782 [INFO] help: remove these parentheses
2025-05-04 05:27:41,782 [INFO] |
2025-05-04 05:27:41,782 [INFO] 17138 ~                             if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,782 [INFO] 17139 |                                 0 as libc::c_int
2025-05-04 05:27:41,782 [INFO] ...
2025-05-04 05:27:41,782 [INFO] 17142 |                                 1 as libc::c_int
2025-05-04 05:27:41,782 [INFO] 17143 ~                             }
2025-05-04 05:27:41,783 [INFO] |
2025-05-04 05:27:41,783 [INFO] 
2025-05-04 05:27:41,783 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,783 [INFO] --> compat/regex.rs:17294:29
2025-05-04 05:27:41,783 [INFO] |
2025-05-04 05:27:41,783 [INFO] 17294 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,783 [INFO] |                       ^
2025-05-04 05:27:41,783 [INFO] ...
2025-05-04 05:27:41,783 [INFO] 17300 | ...                   })
2025-05-04 05:27:41,783 [INFO] |                        ^
2025-05-04 05:27:41,783 [INFO] |
2025-05-04 05:27:41,783 [INFO] help: remove these parentheses
2025-05-04 05:27:41,784 [INFO] |
2025-05-04 05:27:41,784 [INFO] 17294 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,784 [INFO] 17295 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,784 [INFO] ...
2025-05-04 05:27:41,784 [INFO] 17299 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,784 [INFO] 17300 ~                             }
2025-05-04 05:27:41,784 [INFO] |
2025-05-04 05:27:41,784 [INFO] 
2025-05-04 05:27:41,785 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,785 [INFO] --> compat/regex.rs:17306:29
2025-05-04 05:27:41,785 [INFO] |
2025-05-04 05:27:41,785 [INFO] 17306 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,785 [INFO] |                       ^
2025-05-04 05:27:41,785 [INFO] ...
2025-05-04 05:27:41,785 [INFO] 17310 | ...                   })
2025-05-04 05:27:41,785 [INFO] |                        ^
2025-05-04 05:27:41,785 [INFO] |
2025-05-04 05:27:41,785 [INFO] help: remove these parentheses
2025-05-04 05:27:41,785 [INFO] |
2025-05-04 05:27:41,786 [INFO] 17306 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,786 [INFO] 17307 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,786 [INFO] 17308 |                             } else {
2025-05-04 05:27:41,787 [INFO] 17309 |                                 *d as libc::c_int
2025-05-04 05:27:41,787 [INFO] 17310 ~                             }
2025-05-04 05:27:41,787 [INFO] |
2025-05-04 05:27:41,787 [INFO] 
2025-05-04 05:27:41,787 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,788 [INFO] --> compat/regex.rs:17333:29
2025-05-04 05:27:41,788 [INFO] |
2025-05-04 05:27:41,788 [INFO] 17333 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,788 [INFO] |                       ^
2025-05-04 05:27:41,788 [INFO] ...
2025-05-04 05:27:41,788 [INFO] 17339 | ...                   })
2025-05-04 05:27:41,788 [INFO] |                        ^
2025-05-04 05:27:41,788 [INFO] |
2025-05-04 05:27:41,789 [INFO] help: remove these parentheses
2025-05-04 05:27:41,789 [INFO] |
2025-05-04 05:27:41,789 [INFO] 17333 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,789 [INFO] 17334 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,789 [INFO] ...
2025-05-04 05:27:41,789 [INFO] 17338 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,789 [INFO] 17339 ~                             }
2025-05-04 05:27:41,790 [INFO] |
2025-05-04 05:27:41,790 [INFO] 
2025-05-04 05:27:41,790 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,790 [INFO] --> compat/regex.rs:17345:29
2025-05-04 05:27:41,790 [INFO] |
2025-05-04 05:27:41,790 [INFO] 17345 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,791 [INFO] |                       ^
2025-05-04 05:27:41,791 [INFO] ...
2025-05-04 05:27:41,791 [INFO] 17349 | ...                   })
2025-05-04 05:27:41,791 [INFO] |                        ^
2025-05-04 05:27:41,791 [INFO] |
2025-05-04 05:27:41,791 [INFO] help: remove these parentheses
2025-05-04 05:27:41,791 [INFO] |
2025-05-04 05:27:41,792 [INFO] 17345 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,792 [INFO] 17346 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,792 [INFO] 17347 |                             } else {
2025-05-04 05:27:41,792 [INFO] 17348 |                                 *d as libc::c_int
2025-05-04 05:27:41,792 [INFO] 17349 ~                             }
2025-05-04 05:27:41,792 [INFO] |
2025-05-04 05:27:41,792 [INFO] 
2025-05-04 05:27:41,793 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,793 [INFO] --> compat/regex.rs:17363:25
2025-05-04 05:27:41,793 [INFO] |
2025-05-04 05:27:41,793 [INFO] 17363 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,793 [INFO] |                         ^
2025-05-04 05:27:41,793 [INFO] ...
2025-05-04 05:27:41,793 [INFO] 17367 |                         })
2025-05-04 05:27:41,794 [INFO] |                          ^
2025-05-04 05:27:41,794 [INFO] |
2025-05-04 05:27:41,794 [INFO] help: remove these parentheses
2025-05-04 05:27:41,794 [INFO] |
2025-05-04 05:27:41,794 [INFO] 17363 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,794 [INFO] 17364 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,795 [INFO] 17365 |                         } else {
2025-05-04 05:27:41,795 [INFO] 17366 |                             *d as libc::c_int
2025-05-04 05:27:41,795 [INFO] 17367 ~                         }
2025-05-04 05:27:41,795 [INFO] |
2025-05-04 05:27:41,796 [INFO] 
2025-05-04 05:27:41,796 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,796 [INFO] --> compat/regex.rs:17376:33
2025-05-04 05:27:41,796 [INFO] |
2025-05-04 05:27:41,797 [INFO] 17376 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,797 [INFO] |                       ^
2025-05-04 05:27:41,797 [INFO] ...
2025-05-04 05:27:41,799 [INFO] 17382 | ...                   })
2025-05-04 05:27:41,799 [INFO] |                        ^
2025-05-04 05:27:41,799 [INFO] |
2025-05-04 05:27:41,799 [INFO] help: remove these parentheses
2025-05-04 05:27:41,799 [INFO] |
2025-05-04 05:27:41,799 [INFO] 17376 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,799 [INFO] 17377 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,799 [INFO] ...
2025-05-04 05:27:41,799 [INFO] 17381 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,799 [INFO] 17382 ~                                 }
2025-05-04 05:27:41,800 [INFO] |
2025-05-04 05:27:41,800 [INFO] 
2025-05-04 05:27:41,800 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,800 [INFO] --> compat/regex.rs:17397:29
2025-05-04 05:27:41,800 [INFO] |
2025-05-04 05:27:41,800 [INFO] 17397 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,801 [INFO] |                       ^
2025-05-04 05:27:41,801 [INFO] ...
2025-05-04 05:27:41,802 [INFO] 17403 | ...                   })
2025-05-04 05:27:41,802 [INFO] |                        ^
2025-05-04 05:27:41,802 [INFO] |
2025-05-04 05:27:41,802 [INFO] help: remove these parentheses
2025-05-04 05:27:41,802 [INFO] |
2025-05-04 05:27:41,802 [INFO] 17397 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,802 [INFO] 17398 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:41,802 [INFO] ...
2025-05-04 05:27:41,802 [INFO] 17402 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,802 [INFO] 17403 ~                             }
2025-05-04 05:27:41,802 [INFO] |
2025-05-04 05:27:41,803 [INFO] 
2025-05-04 05:27:41,803 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,803 [INFO] --> compat/regex.rs:17408:29
2025-05-04 05:27:41,803 [INFO] |
2025-05-04 05:27:41,803 [INFO] 17408 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,803 [INFO] |                       ^
2025-05-04 05:27:41,803 [INFO] ...
2025-05-04 05:27:41,804 [INFO] 17412 | ...                   })
2025-05-04 05:27:41,804 [INFO] |                        ^
2025-05-04 05:27:41,804 [INFO] |
2025-05-04 05:27:41,804 [INFO] help: remove these parentheses
2025-05-04 05:27:41,804 [INFO] |
2025-05-04 05:27:41,805 [INFO] 17408 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,805 [INFO] 17409 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,805 [INFO] 17410 |                             } else {
2025-05-04 05:27:41,806 [INFO] 17411 |                                 *d as libc::c_int
2025-05-04 05:27:41,806 [INFO] 17412 ~                             }
2025-05-04 05:27:41,806 [INFO] |
2025-05-04 05:27:41,806 [INFO] 
2025-05-04 05:27:41,806 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,807 [INFO] --> compat/regex.rs:17439:33
2025-05-04 05:27:41,807 [INFO] |
2025-05-04 05:27:41,807 [INFO] 17439 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,808 [INFO] |                       ^
2025-05-04 05:27:41,808 [INFO] ...
2025-05-04 05:27:41,808 [INFO] 17443 | ...                   })
2025-05-04 05:27:41,808 [INFO] |                        ^
2025-05-04 05:27:41,808 [INFO] |
2025-05-04 05:27:41,808 [INFO] help: remove these parentheses
2025-05-04 05:27:41,808 [INFO] |
2025-05-04 05:27:41,808 [INFO] 17439 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,808 [INFO] 17440 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,808 [INFO] 17441 |                                 } else {
2025-05-04 05:27:41,808 [INFO] 17442 |                                     *d as libc::c_int
2025-05-04 05:27:41,808 [INFO] 17443 ~                                 }
2025-05-04 05:27:41,808 [INFO] |
2025-05-04 05:27:41,808 [INFO] 
2025-05-04 05:27:41,808 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,808 [INFO] --> compat/regex.rs:17495:33
2025-05-04 05:27:41,809 [INFO] |
2025-05-04 05:27:41,809 [INFO] 17495 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,810 [INFO] |                       ^
2025-05-04 05:27:41,810 [INFO] ...
2025-05-04 05:27:41,810 [INFO] 17499 | ...                   })
2025-05-04 05:27:41,810 [INFO] |                        ^
2025-05-04 05:27:41,810 [INFO] |
2025-05-04 05:27:41,810 [INFO] help: remove these parentheses
2025-05-04 05:27:41,810 [INFO] |
2025-05-04 05:27:41,810 [INFO] 17495 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:41,810 [INFO] 17496 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:41,811 [INFO] 17497 |                                 } else {
2025-05-04 05:27:41,811 [INFO] 17498 |                                     *d as libc::c_int
2025-05-04 05:27:41,811 [INFO] 17499 ~                                 }
2025-05-04 05:27:41,811 [INFO] |
2025-05-04 05:27:41,811 [INFO] 
2025-05-04 05:27:41,811 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:41,812 [INFO] --> compat/regex.rs:17661:37
2025-05-04 05:27:41,812 [INFO] |
2025-05-04 05:27:41,812 [INFO] 17661 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,812 [INFO] |                       ^
2025-05-04 05:27:41,813 [INFO] ...
2025-05-04 05:27:41,813 [INFO] 17666 | ...                   })
2025-05-04 05:27:41,813 [INFO] |                        ^
2025-05-04 05:27:41,813 [INFO] |
2025-05-04 05:27:41,813 [INFO] help: remove these parentheses
2025-05-04 05:27:41,813 [INFO] |
2025-05-04 05:27:41,813 [INFO] 17661 ~                                     if (fail_stack.stack).is_null() {
2025-05-04 05:27:41,813 [INFO] 17662 |                                         0 as libc::c_int
2025-05-04 05:27:41,813 [INFO] ...
2025-05-04 05:27:41,813 [INFO] 17665 |                                         1 as libc::c_int
2025-05-04 05:27:41,813 [INFO] 17666 ~                                     }
2025-05-04 05:27:41,814 [INFO] |
2025-05-04 05:27:41,814 [INFO] 
2025-05-04 05:27:41,814 [INFO] warning: unnecessary parentheses around method argument
2025-05-04 05:27:41,815 [INFO] --> compat/regex.rs:18011:13
2025-05-04 05:27:41,815 [INFO] |
2025-05-04 05:27:41,815 [INFO] 18011 |             (if dend == end_match_1 {
2025-05-04 05:27:41,815 [INFO] |             ^
2025-05-04 05:27:41,815 [INFO] ...
2025-05-04 05:27:41,815 [INFO] 18015 |             }),
2025-05-04 05:27:41,815 [INFO] |              ^
2025-05-04 05:27:41,815 [INFO] |
2025-05-04 05:27:41,815 [INFO] help: remove these parentheses
2025-05-04 05:27:41,815 [INFO] |
2025-05-04 05:27:41,816 [INFO] 18011 ~             if dend == end_match_1 {
2025-05-04 05:27:41,816 [INFO] 18012 |                 string1
2025-05-04 05:27:41,816 [INFO] 18013 |             } else {
2025-05-04 05:27:41,816 [INFO] 18014 |                 string2.offset(-(size1 as isize))
2025-05-04 05:27:41,816 [INFO] 18015 ~             },
2025-05-04 05:27:41,816 [INFO] |
2025-05-04 05:27:41,816 [INFO] 
2025-05-04 05:27:41,816 [INFO] warning: unused label
2025-05-04 05:27:41,817 [INFO] --> src/psgen.rs:4554:5
2025-05-04 05:27:41,817 [INFO] |
2025-05-04 05:27:41,817 [INFO] 4554 |     'c_18653: {
2025-05-04 05:27:41,817 [INFO] |     ^^^^^^^^
2025-05-04 05:27:41,817 [INFO] 
2025-05-04 05:27:41,817 [INFO] warning: unused label
2025-05-04 05:27:41,817 [INFO] --> src/psgen.rs:4629:5
2025-05-04 05:27:41,817 [INFO] |
2025-05-04 05:27:41,817 [INFO] 4629 |     'c_8716: {
2025-05-04 05:27:41,817 [INFO] |     ^^^^^^^
2025-05-04 05:27:41,817 [INFO] 
2025-05-04 05:27:41,817 [INFO] warning: unnecessary parentheses around function argument
2025-05-04 05:27:41,817 [INFO] --> states/prims.rs:467:17
2025-05-04 05:27:41,818 [INFO] |
2025-05-04 05:27:41,818 [INFO] 467 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-05-04 05:27:41,818 [INFO] |                 ^
2025-05-04 05:27:41,818 [INFO] ...
2025-05-04 05:27:41,818 [INFO] 472 |                 }),
2025-05-04 05:27:41,818 [INFO] |                  ^
2025-05-04 05:27:41,818 [INFO] |
2025-05-04 05:27:41,818 [INFO] help: remove these parentheses
2025-05-04 05:27:41,818 [INFO] |
2025-05-04 05:27:41,818 [INFO] 467 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-05-04 05:27:41,818 [INFO] 468 |                     &mut (*n).u.re.compiled
2025-05-04 05:27:41,818 [INFO] ...
2025-05-04 05:27:41,818 [INFO] 471 |                     &mut (*n).u.re.compiled
2025-05-04 05:27:41,818 [INFO] 472 ~                 },
2025-05-04 05:27:41,819 [INFO] |
2025-05-04 05:27:41,819 [INFO] 
2025-05-04 05:27:41,819 [INFO] warning: unnecessary parentheses around function argument
2025-05-04 05:27:41,819 [INFO] --> states/prims.rs:523:17
2025-05-04 05:27:41,819 [INFO] |
2025-05-04 05:27:41,819 [INFO] 523 |                 (if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-05-04 05:27:41,819 [INFO] |                 ^
2025-05-04 05:27:41,819 [INFO] ...
2025-05-04 05:27:41,819 [INFO] 528 |                 }),
2025-05-04 05:27:41,819 [INFO] |                  ^
2025-05-04 05:27:41,819 [INFO] |
2025-05-04 05:27:41,819 [INFO] help: remove these parentheses
2025-05-04 05:27:41,820 [INFO] |
2025-05-04 05:27:41,820 [INFO] 523 ~                 if ((*n).u.re.compiled).fastmap_accurate() as libc::c_int != 0 {
2025-05-04 05:27:41,820 [INFO] 524 |                     &mut (*n).u.re.compiled
2025-05-04 05:27:41,820 [INFO] ...
2025-05-04 05:27:41,820 [INFO] 527 |                     &mut (*n).u.re.compiled
2025-05-04 05:27:41,820 [INFO] 528 ~                 },
2025-05-04 05:27:41,820 [INFO] |
2025-05-04 05:27:41,820 [INFO] 
2025-05-04 05:27:42,453 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:42,453 [INFO] --> compat/regex.rs:15755:9
2025-05-04 05:27:42,453 [INFO] |
2025-05-04 05:27:42,453 [INFO] 15753 |     let mut result: libc::c_int = re_match_2_internal(
2025-05-04 05:27:42,453 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-05-04 05:27:42,453 [INFO] 15754 |         bufp,
2025-05-04 05:27:42,454 [INFO] 15755 |         0 as *mut libc::c_void,
2025-05-04 05:27:42,454 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-05-04 05:27:42,454 [INFO] |
2025-05-04 05:27:42,454 [INFO] = note: expected raw pointer `*const i8`
2025-05-04 05:27:42,454 [INFO] found raw pointer `*mut c_void`
2025-05-04 05:27:42,454 [INFO] note: function defined here
2025-05-04 05:27:42,454 [INFO] --> compat/regex.rs:15788:22
2025-05-04 05:27:42,454 [INFO] |
2025-05-04 05:27:42,454 [INFO] 15788 | unsafe extern "C" fn re_match_2_internal(
2025-05-04 05:27:42,455 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:42,455 [INFO] 15789 |     mut bufp: *mut re_pattern_buffer,
2025-05-04 05:27:42,455 [INFO] |     --------------------------------
2025-05-04 05:27:42,455 [INFO] 15790 |     mut string1: *const libc::c_char,
2025-05-04 05:27:42,455 [INFO] |     --------------------------------
2025-05-04 05:27:42,455 [INFO] 15791 |     mut size1: libc::c_int,
2025-05-04 05:27:42,455 [INFO] |     ----------------------
2025-05-04 05:27:42,455 [INFO] 15792 |     mut string2: *const libc::c_char,
2025-05-04 05:27:42,456 [INFO] |     --------------------------------
2025-05-04 05:27:42,456 [INFO] 15793 |     mut size2: libc::c_int,
2025-05-04 05:27:42,456 [INFO] |     ----------------------
2025-05-04 05:27:42,456 [INFO] 15794 |     mut pos: libc::c_int,
2025-05-04 05:27:42,456 [INFO] |     --------------------
2025-05-04 05:27:42,456 [INFO] 15795 |     mut regs: *mut re_registers,
2025-05-04 05:27:42,456 [INFO] |     ---------------------------
2025-05-04 05:27:42,456 [INFO] 15796 |     mut stop: libc::c_int,
2025-05-04 05:27:42,457 [INFO] |     ---------------------
2025-05-04 05:27:42,457 [INFO] 
2025-05-04 05:27:42,683 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-05-04 05:27:42,689 [INFO] warning: `c2rust_out` (lib) generated 24 warnings
2025-05-04 05:27:42,692 [INFO] error: could not compile `c2rust_out` due to previous error; 24 warnings emitted
2025-05-04 05:27:42,692 [ERROR] cargo build failed with code 101
2025-05-04 05:27:42,704 [INFO] Running: cargo build
2025-05-04 05:27:42,958 [INFO] Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/c_prog/enscript-1.6.1)
2025-05-04 05:27:43,470 [INFO] warning: unused label
2025-05-04 05:27:43,471 [INFO] --> afmlib/afmparse.rs:1547:9
2025-05-04 05:27:43,471 [INFO] |
2025-05-04 05:27:43,471 [INFO] 1547 |         'c_3699: {
2025-05-04 05:27:43,471 [INFO] |         ^^^^^^^
2025-05-04 05:27:43,471 [INFO] |
2025-05-04 05:27:43,472 [INFO] = note: `#[warn(unused_labels)]` on by default
2025-05-04 05:27:43,472 [INFO] 
2025-05-04 05:27:43,475 [INFO] warning: unused import: `::libc`
2025-05-04 05:27:43,475 [INFO] --> compat/getopt.rs:1:5
2025-05-04 05:27:43,475 [INFO] |
2025-05-04 05:27:43,476 [INFO] 1 | use ::libc;
2025-05-04 05:27:43,476 [INFO] |     ^^^^^^
2025-05-04 05:27:43,476 [INFO] |
2025-05-04 05:27:43,476 [INFO] = note: `#[warn(unused_imports)]` on by default
2025-05-04 05:27:43,476 [INFO] 
2025-05-04 05:27:43,477 [INFO] warning: unused import: `::libc`
2025-05-04 05:27:43,477 [INFO] --> compat/getopt1.rs:1:5
2025-05-04 05:27:43,477 [INFO] |
2025-05-04 05:27:43,478 [INFO] 1 | use ::libc;
2025-05-04 05:27:43,478 [INFO] |     ^^^^^^
2025-05-04 05:27:43,478 [INFO] 
2025-05-04 05:27:43,483 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,484 [INFO] --> compat/regex.rs:15755:33
2025-05-04 05:27:43,484 [INFO] |
2025-05-04 05:27:43,484 [INFO] 15755 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,484 [INFO] |                       ^
2025-05-04 05:27:43,485 [INFO] ...
2025-05-04 05:27:43,485 [INFO] 15760 | ...                   })
2025-05-04 05:27:43,485 [INFO] |                        ^
2025-05-04 05:27:43,485 [INFO] |
2025-05-04 05:27:43,485 [INFO] = note: `#[warn(unused_parens)]` on by default
2025-05-04 05:27:43,486 [INFO] help: remove these parentheses
2025-05-04 05:27:43,486 [INFO] |
2025-05-04 05:27:43,486 [INFO] 15755 ~                                 if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,486 [INFO] 15756 |                                     0 as libc::c_int
2025-05-04 05:27:43,486 [INFO] ...
2025-05-04 05:27:43,487 [INFO] 15759 |                                     1 as libc::c_int
2025-05-04 05:27:43,487 [INFO] 15760 ~                                 }
2025-05-04 05:27:43,488 [INFO] |
2025-05-04 05:27:43,488 [INFO] 
2025-05-04 05:27:43,488 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,489 [INFO] --> compat/regex.rs:16750:37
2025-05-04 05:27:43,490 [INFO] |
2025-05-04 05:27:43,490 [INFO] 16750 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,490 [INFO] |                       ^
2025-05-04 05:27:43,491 [INFO] ...
2025-05-04 05:27:43,491 [INFO] 16755 | ...                   })
2025-05-04 05:27:43,491 [INFO] |                        ^
2025-05-04 05:27:43,491 [INFO] |
2025-05-04 05:27:43,492 [INFO] help: remove these parentheses
2025-05-04 05:27:43,492 [INFO] |
2025-05-04 05:27:43,492 [INFO] 16750 ~                                     if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,493 [INFO] 16751 |                                         0 as libc::c_int
2025-05-04 05:27:43,493 [INFO] ...
2025-05-04 05:27:43,493 [INFO] 16754 |                                         1 as libc::c_int
2025-05-04 05:27:43,493 [INFO] 16755 ~                                     }
2025-05-04 05:27:43,494 [INFO] |
2025-05-04 05:27:43,494 [INFO] 
2025-05-04 05:27:43,494 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,494 [INFO] --> compat/regex.rs:17011:29
2025-05-04 05:27:43,495 [INFO] |
2025-05-04 05:27:43,495 [INFO] 17011 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,495 [INFO] |                       ^
2025-05-04 05:27:43,495 [INFO] ...
2025-05-04 05:27:43,495 [INFO] 17016 | ...                   })
2025-05-04 05:27:43,496 [INFO] |                        ^
2025-05-04 05:27:43,496 [INFO] |
2025-05-04 05:27:43,496 [INFO] help: remove these parentheses
2025-05-04 05:27:43,497 [INFO] |
2025-05-04 05:27:43,497 [INFO] 17011 ~                             if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,498 [INFO] 17012 |                                 0 as libc::c_int
2025-05-04 05:27:43,498 [INFO] ...
2025-05-04 05:27:43,498 [INFO] 17015 |                                 1 as libc::c_int
2025-05-04 05:27:43,498 [INFO] 17016 ~                             }
2025-05-04 05:27:43,499 [INFO] |
2025-05-04 05:27:43,499 [INFO] 
2025-05-04 05:27:43,499 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,500 [INFO] --> compat/regex.rs:17298:29
2025-05-04 05:27:43,500 [INFO] |
2025-05-04 05:27:43,500 [INFO] 17298 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,501 [INFO] |                       ^
2025-05-04 05:27:43,501 [INFO] ...
2025-05-04 05:27:43,501 [INFO] 17303 | ...                   })
2025-05-04 05:27:43,502 [INFO] |                        ^
2025-05-04 05:27:43,502 [INFO] |
2025-05-04 05:27:43,502 [INFO] help: remove these parentheses
2025-05-04 05:27:43,503 [INFO] |
2025-05-04 05:27:43,503 [INFO] 17298 ~                             if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,503 [INFO] 17299 |                                 0 as libc::c_int
2025-05-04 05:27:43,505 [INFO] ...
2025-05-04 05:27:43,507 [INFO] 17302 |                                 1 as libc::c_int
2025-05-04 05:27:43,507 [INFO] 17303 ~                             }
2025-05-04 05:27:43,507 [INFO] |
2025-05-04 05:27:43,508 [INFO] 
2025-05-04 05:27:43,508 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,508 [INFO] --> compat/regex.rs:17394:29
2025-05-04 05:27:43,508 [INFO] |
2025-05-04 05:27:43,508 [INFO] 17394 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,509 [INFO] |                       ^
2025-05-04 05:27:43,509 [INFO] ...
2025-05-04 05:27:43,510 [INFO] 17399 | ...                   })
2025-05-04 05:27:43,511 [INFO] |                        ^
2025-05-04 05:27:43,511 [INFO] |
2025-05-04 05:27:43,511 [INFO] help: remove these parentheses
2025-05-04 05:27:43,511 [INFO] |
2025-05-04 05:27:43,512 [INFO] 17394 ~                             if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,512 [INFO] 17395 |                                 0 as libc::c_int
2025-05-04 05:27:43,512 [INFO] ...
2025-05-04 05:27:43,512 [INFO] 17398 |                                 1 as libc::c_int
2025-05-04 05:27:43,512 [INFO] 17399 ~                             }
2025-05-04 05:27:43,513 [INFO] |
2025-05-04 05:27:43,513 [INFO] 
2025-05-04 05:27:43,514 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,514 [INFO] --> compat/regex.rs:17535:29
2025-05-04 05:27:43,514 [INFO] |
2025-05-04 05:27:43,514 [INFO] 17535 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,514 [INFO] |                       ^
2025-05-04 05:27:43,515 [INFO] ...
2025-05-04 05:27:43,515 [INFO] 17541 | ...                   })
2025-05-04 05:27:43,515 [INFO] |                        ^
2025-05-04 05:27:43,515 [INFO] |
2025-05-04 05:27:43,516 [INFO] help: remove these parentheses
2025-05-04 05:27:43,516 [INFO] |
2025-05-04 05:27:43,516 [INFO] 17535 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,517 [INFO] 17536 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,517 [INFO] ...
2025-05-04 05:27:43,517 [INFO] 17540 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,518 [INFO] 17541 ~                             }
2025-05-04 05:27:43,518 [INFO] |
2025-05-04 05:27:43,518 [INFO] 
2025-05-04 05:27:43,519 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,519 [INFO] --> compat/regex.rs:17547:29
2025-05-04 05:27:43,519 [INFO] |
2025-05-04 05:27:43,519 [INFO] 17547 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,519 [INFO] |                       ^
2025-05-04 05:27:43,520 [INFO] ...
2025-05-04 05:27:43,521 [INFO] 17551 | ...                   })
2025-05-04 05:27:43,521 [INFO] |                        ^
2025-05-04 05:27:43,521 [INFO] |
2025-05-04 05:27:43,521 [INFO] help: remove these parentheses
2025-05-04 05:27:43,521 [INFO] |
2025-05-04 05:27:43,522 [INFO] 17547 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,522 [INFO] 17548 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,523 [INFO] 17549 |                             } else {
2025-05-04 05:27:43,523 [INFO] 17550 |                                 *d as libc::c_int
2025-05-04 05:27:43,524 [INFO] 17551 ~                             }
2025-05-04 05:27:43,524 [INFO] |
2025-05-04 05:27:43,524 [INFO] 
2025-05-04 05:27:43,524 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,525 [INFO] --> compat/regex.rs:17574:29
2025-05-04 05:27:43,525 [INFO] |
2025-05-04 05:27:43,525 [INFO] 17574 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,526 [INFO] |                       ^
2025-05-04 05:27:43,526 [INFO] ...
2025-05-04 05:27:43,526 [INFO] 17580 | ...                   })
2025-05-04 05:27:43,526 [INFO] |                        ^
2025-05-04 05:27:43,526 [INFO] |
2025-05-04 05:27:43,527 [INFO] help: remove these parentheses
2025-05-04 05:27:43,527 [INFO] |
2025-05-04 05:27:43,527 [INFO] 17574 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,527 [INFO] 17575 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,528 [INFO] ...
2025-05-04 05:27:43,528 [INFO] 17579 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,528 [INFO] 17580 ~                             }
2025-05-04 05:27:43,528 [INFO] |
2025-05-04 05:27:43,529 [INFO] 
2025-05-04 05:27:43,529 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,529 [INFO] --> compat/regex.rs:17586:29
2025-05-04 05:27:43,529 [INFO] |
2025-05-04 05:27:43,529 [INFO] 17586 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,530 [INFO] |                       ^
2025-05-04 05:27:43,530 [INFO] ...
2025-05-04 05:27:43,531 [INFO] 17590 | ...                   })
2025-05-04 05:27:43,531 [INFO] |                        ^
2025-05-04 05:27:43,531 [INFO] |
2025-05-04 05:27:43,533 [INFO] help: remove these parentheses
2025-05-04 05:27:43,533 [INFO] |
2025-05-04 05:27:43,533 [INFO] 17586 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,534 [INFO] 17587 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,535 [INFO] 17588 |                             } else {
2025-05-04 05:27:43,535 [INFO] 17589 |                                 *d as libc::c_int
2025-05-04 05:27:43,535 [INFO] 17590 ~                             }
2025-05-04 05:27:43,535 [INFO] |
2025-05-04 05:27:43,535 [INFO] 
2025-05-04 05:27:43,535 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,536 [INFO] --> compat/regex.rs:17604:25
2025-05-04 05:27:43,536 [INFO] |
2025-05-04 05:27:43,536 [INFO] 17604 |                         (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,536 [INFO] |                         ^
2025-05-04 05:27:43,536 [INFO] ...
2025-05-04 05:27:43,536 [INFO] 17608 |                         })
2025-05-04 05:27:43,538 [INFO] |                          ^
2025-05-04 05:27:43,538 [INFO] |
2025-05-04 05:27:43,538 [INFO] help: remove these parentheses
2025-05-04 05:27:43,539 [INFO] |
2025-05-04 05:27:43,539 [INFO] 17604 ~                         if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,539 [INFO] 17605 |                             *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,539 [INFO] 17606 |                         } else {
2025-05-04 05:27:43,540 [INFO] 17607 |                             *d as libc::c_int
2025-05-04 05:27:43,540 [INFO] 17608 ~                         }
2025-05-04 05:27:43,541 [INFO] |
2025-05-04 05:27:43,541 [INFO] 
2025-05-04 05:27:43,541 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,542 [INFO] --> compat/regex.rs:17617:33
2025-05-04 05:27:43,542 [INFO] |
2025-05-04 05:27:43,542 [INFO] 17617 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,542 [INFO] |                       ^
2025-05-04 05:27:43,543 [INFO] ...
2025-05-04 05:27:43,543 [INFO] 17623 | ...                   })
2025-05-04 05:27:43,544 [INFO] |                        ^
2025-05-04 05:27:43,544 [INFO] |
2025-05-04 05:27:43,544 [INFO] help: remove these parentheses
2025-05-04 05:27:43,544 [INFO] |
2025-05-04 05:27:43,545 [INFO] 17617 ~                                 if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,545 [INFO] 17618 |                                     == string2.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,545 [INFO] ...
2025-05-04 05:27:43,546 [INFO] 17622 |                                     *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,546 [INFO] 17623 ~                                 }
2025-05-04 05:27:43,546 [INFO] |
2025-05-04 05:27:43,546 [INFO] 
2025-05-04 05:27:43,547 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,547 [INFO] --> compat/regex.rs:17638:29
2025-05-04 05:27:43,547 [INFO] |
2025-05-04 05:27:43,547 [INFO] 17638 | ...                   (if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,548 [INFO] |                       ^
2025-05-04 05:27:43,548 [INFO] ...
2025-05-04 05:27:43,548 [INFO] 17644 | ...                   })
2025-05-04 05:27:43,548 [INFO] |                        ^
2025-05-04 05:27:43,548 [INFO] |
2025-05-04 05:27:43,549 [INFO] help: remove these parentheses
2025-05-04 05:27:43,549 [INFO] |
2025-05-04 05:27:43,549 [INFO] 17638 ~                             if d.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,549 [INFO] 17639 |                                 == string2.offset(-(1 as libc::c_int as isize))
2025-05-04 05:27:43,550 [INFO] ...
2025-05-04 05:27:43,550 [INFO] 17643 |                                 *d.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,550 [INFO] 17644 ~                             }
2025-05-04 05:27:43,551 [INFO] |
2025-05-04 05:27:43,551 [INFO] 
2025-05-04 05:27:43,551 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,551 [INFO] --> compat/regex.rs:17649:29
2025-05-04 05:27:43,551 [INFO] |
2025-05-04 05:27:43,552 [INFO] 17649 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,552 [INFO] |                       ^
2025-05-04 05:27:43,552 [INFO] ...
2025-05-04 05:27:43,552 [INFO] 17653 | ...                   })
2025-05-04 05:27:43,553 [INFO] |                        ^
2025-05-04 05:27:43,553 [INFO] |
2025-05-04 05:27:43,555 [INFO] help: remove these parentheses
2025-05-04 05:27:43,555 [INFO] |
2025-05-04 05:27:43,556 [INFO] 17649 ~                             if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,556 [INFO] 17650 |                                 *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,556 [INFO] 17651 |                             } else {
2025-05-04 05:27:43,556 [INFO] 17652 |                                 *d as libc::c_int
2025-05-04 05:27:43,557 [INFO] 17653 ~                             }
2025-05-04 05:27:43,557 [INFO] |
2025-05-04 05:27:43,557 [INFO] 
2025-05-04 05:27:43,558 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,558 [INFO] --> compat/regex.rs:17680:33
2025-05-04 05:27:43,558 [INFO] |
2025-05-04 05:27:43,560 [INFO] 17680 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,560 [INFO] |                       ^
2025-05-04 05:27:43,560 [INFO] ...
2025-05-04 05:27:43,560 [INFO] 17684 | ...                   })
2025-05-04 05:27:43,561 [INFO] |                        ^
2025-05-04 05:27:43,561 [INFO] |
2025-05-04 05:27:43,562 [INFO] help: remove these parentheses
2025-05-04 05:27:43,562 [INFO] |
2025-05-04 05:27:43,562 [INFO] 17680 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,562 [INFO] 17681 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,562 [INFO] 17682 |                                 } else {
2025-05-04 05:27:43,563 [INFO] 17683 |                                     *d as libc::c_int
2025-05-04 05:27:43,563 [INFO] 17684 ~                                 }
2025-05-04 05:27:43,563 [INFO] |
2025-05-04 05:27:43,564 [INFO] 
2025-05-04 05:27:43,564 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,564 [INFO] --> compat/regex.rs:17736:33
2025-05-04 05:27:43,564 [INFO] |
2025-05-04 05:27:43,564 [INFO] 17736 | ...                   (if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,565 [INFO] |                       ^
2025-05-04 05:27:43,565 [INFO] ...
2025-05-04 05:27:43,565 [INFO] 17740 | ...                   })
2025-05-04 05:27:43,565 [INFO] |                        ^
2025-05-04 05:27:43,566 [INFO] |
2025-05-04 05:27:43,566 [INFO] help: remove these parentheses
2025-05-04 05:27:43,566 [INFO] |
2025-05-04 05:27:43,566 [INFO] 17736 ~                                 if d == string2.offset(-(1 as libc::c_int as isize)) {
2025-05-04 05:27:43,566 [INFO] 17737 |                                     *end1.offset(-(1 as libc::c_int as isize)) as libc::c_int
2025-05-04 05:27:43,567 [INFO] 17738 |                                 } else {
2025-05-04 05:27:43,567 [INFO] 17739 |                                     *d as libc::c_int
2025-05-04 05:27:43,568 [INFO] 17740 ~                                 }
2025-05-04 05:27:43,568 [INFO] |
2025-05-04 05:27:43,568 [INFO] 
2025-05-04 05:27:43,568 [INFO] warning: unnecessary parentheses around block return value
2025-05-04 05:27:43,568 [INFO] --> compat/regex.rs:17902:37
2025-05-04 05:27:43,568 [INFO] |
2025-05-04 05:27:43,568 [INFO] 17902 | ...                   (if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,568 [INFO] |                       ^
2025-05-04 05:27:43,568 [INFO] ...
2025-05-04 05:27:43,571 [INFO] 17907 | ...                   })
2025-05-04 05:27:43,571 [INFO] |                        ^
2025-05-04 05:27:43,571 [INFO] |
2025-05-04 05:27:43,572 [INFO] help: remove these parentheses
2025-05-04 05:27:43,572 [INFO] |
2025-05-04 05:27:43,572 [INFO] 17902 ~                                     if (fail_stack.stack).is_null() {
2025-05-04 05:27:43,573 [INFO] 17903 |                                         0 as libc::c_int
2025-05-04 05:27:43,573 [INFO] ...
2025-05-04 05:27:43,574 [INFO] 17906 |                                         1 as libc::c_int
2025-05-04 05:27:43,574 [INFO] 17907 ~                                     }
2025-05-04 05:27:43,575 [INFO] |
2025-05-04 05:27:43,575 [INFO] 
2025-05-04 05:27:43,575 [INFO] warning: unnecessary parentheses around method argument
2025-05-04 05:27:43,575 [INFO] --> compat/regex.rs:18239:13
2025-05-04 05:27:43,576 [INFO] |
2025-05-04 05:27:43,576 [INFO] 18239 |             (if dend == end_match_1 {
2025-05-04 05:27:43,576 [INFO] |             ^
2025-05-04 05:27:43,576 [INFO] ...
2025-05-04 05:27:43,577 [INFO] 18243 |             }),
2025-05-04 05:27:43,577 [INFO] |              ^
2025-05-04 05:27:43,577 [INFO] |
2025-05-04 05:27:43,578 [INFO] help: remove these parentheses
2025-05-04 05:27:43,578 [INFO] |
2025-05-04 05:27:43,578 [INFO] 18239 ~             if dend == end_match_1 {
2025-05-04 05:27:43,579 [INFO] 18240 |                 string1
2025-05-04 05:27:43,579 [INFO] 18241 |             } else {
2025-05-04 05:27:43,579 [INFO] 18242 |                 string2.offset(-(size1 as isize))
2025-05-04 05:27:43,579 [INFO] 18243 ~             },
2025-05-04 05:27:43,579 [INFO] |
2025-05-04 05:27:43,580 [INFO] 
2025-05-04 05:27:43,580 [INFO] warning: unused label
2025-05-04 05:27:43,580 [INFO] --> src/psgen.rs:4813:5
2025-05-04 05:27:43,581 [INFO] |
2025-05-04 05:27:43,581 [INFO] 4813 |     'c_18653: {
2025-05-04 05:27:43,581 [INFO] |     ^^^^^^^^
2025-05-04 05:27:43,581 [INFO] 
2025-05-04 05:27:43,582 [INFO] warning: unused label
2025-05-04 05:27:43,582 [INFO] --> src/psgen.rs:4877:5
2025-05-04 05:27:43,582 [INFO] |
2025-05-04 05:27:43,583 [INFO] 4877 |     'c_8716: {
2025-05-04 05:27:43,583 [INFO] |     ^^^^^^^
2025-05-04 05:27:43,583 [INFO] 
2025-05-04 05:27:43,583 [INFO] warning: unnecessary parentheses around function argument
2025-05-04 05:27:43,583 [INFO] --> states/prims.rs:670:17
2025-05-04 05:27:43,584 [INFO] |
2025-05-04 05:27:43,584 [INFO] 670 |                 (if ((*n).u.re.compiled).fastmap_accurate() as i32 != 0 {
2025-05-04 05:27:43,584 [INFO] |                 ^
2025-05-04 05:27:43,584 [INFO] ...
2025-05-04 05:27:43,584 [INFO] 675 |                 }),
2025-05-04 05:27:43,584 [INFO] |                  ^
2025-05-04 05:27:43,585 [INFO] |
2025-05-04 05:27:43,585 [INFO] help: remove these parentheses
2025-05-04 05:27:43,585 [INFO] |
2025-05-04 05:27:43,585 [INFO] 670 ~                 if ((*n).u.re.compiled).fastmap_accurate() as i32 != 0 {
2025-05-04 05:27:43,586 [INFO] 671 |                     &mut (*n).u.re.compiled
2025-05-04 05:27:43,586 [INFO] ...
2025-05-04 05:27:43,586 [INFO] 674 |                     &mut (*n).u.re.compiled
2025-05-04 05:27:43,586 [INFO] 675 ~                 },
2025-05-04 05:27:43,587 [INFO] |
2025-05-04 05:27:43,587 [INFO] 
2025-05-04 05:27:43,587 [INFO] warning: unnecessary parentheses around function argument
2025-05-04 05:27:43,588 [INFO] --> states/prims.rs:726:17
2025-05-04 05:27:43,588 [INFO] |
2025-05-04 05:27:43,588 [INFO] 726 |                 (if ((*n).u.re.compiled).fastmap_accurate() as i32 != 0 {
2025-05-04 05:27:43,588 [INFO] |                 ^
2025-05-04 05:27:43,589 [INFO] ...
2025-05-04 05:27:43,589 [INFO] 731 |                 }),
2025-05-04 05:27:43,589 [INFO] |                  ^
2025-05-04 05:27:43,590 [INFO] |
2025-05-04 05:27:43,590 [INFO] help: remove these parentheses
2025-05-04 05:27:43,590 [INFO] |
2025-05-04 05:27:43,590 [INFO] 726 ~                 if ((*n).u.re.compiled).fastmap_accurate() as i32 != 0 {
2025-05-04 05:27:43,591 [INFO] 727 |                     &mut (*n).u.re.compiled
2025-05-04 05:27:43,592 [INFO] ...
2025-05-04 05:27:43,592 [INFO] 730 |                     &mut (*n).u.re.compiled
2025-05-04 05:27:43,592 [INFO] 731 ~                 },
2025-05-04 05:27:43,593 [INFO] |
2025-05-04 05:27:43,593 [INFO] 
2025-05-04 05:27:43,730 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,730 [INFO] --> afmlib/afm.rs:10:1
2025-05-04 05:27:43,730 [INFO] |
2025-05-04 05:27:43,730 [INFO] 10 | #![feature(extern_types)]
2025-05-04 05:27:43,731 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,731 [INFO] |
2025-05-04 05:27:43,731 [INFO] = note: `#[warn(unused_attributes)]` on by default
2025-05-04 05:27:43,731 [INFO] 
2025-05-04 05:27:43,731 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,731 [INFO] --> afmlib/afmparse.rs:10:1
2025-05-04 05:27:43,731 [INFO] |
2025-05-04 05:27:43,732 [INFO] 10 | #![feature(extern_types, label_break_value)]
2025-05-04 05:27:43,732 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,732 [INFO] 
2025-05-04 05:27:43,732 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,732 [INFO] --> afmlib/deffont.rs:10:1
2025-05-04 05:27:43,732 [INFO] |
2025-05-04 05:27:43,732 [INFO] 10 | #![feature(extern_types)]
2025-05-04 05:27:43,733 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,733 [INFO] 
2025-05-04 05:27:43,759 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,759 [INFO] --> src/main.rs:10:1
2025-05-04 05:27:43,759 [INFO] |
2025-05-04 05:27:43,760 [INFO] 10 | #![feature(extern_types)]
2025-05-04 05:27:43,760 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,760 [INFO] 
2025-05-04 05:27:43,760 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,760 [INFO] --> src/psgen.rs:10:1
2025-05-04 05:27:43,760 [INFO] |
2025-05-04 05:27:43,761 [INFO] 10 | #![feature(extern_types, label_break_value)]
2025-05-04 05:27:43,761 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,761 [INFO] 
2025-05-04 05:27:43,761 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,762 [INFO] --> src/util.rs:10:1
2025-05-04 05:27:43,762 [INFO] |
2025-05-04 05:27:43,762 [INFO] 10 | #![feature(extern_types)]
2025-05-04 05:27:43,762 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,762 [INFO] 
2025-05-04 05:27:43,774 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,774 [INFO] --> states/prims.rs:10:1
2025-05-04 05:27:43,774 [INFO] |
2025-05-04 05:27:43,775 [INFO] 10 | #![feature(extern_types)]
2025-05-04 05:27:43,775 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,775 [INFO] 
2025-05-04 05:27:43,775 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,775 [INFO] --> states/process.rs:10:1
2025-05-04 05:27:43,776 [INFO] |
2025-05-04 05:27:43,776 [INFO] 10 | #![feature(extern_types)]
2025-05-04 05:27:43,776 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,776 [INFO] 
2025-05-04 05:27:43,776 [INFO] warning: crate-level attribute should be in the root module
2025-05-04 05:27:43,777 [INFO] --> states/utils.rs:10:1
2025-05-04 05:27:43,777 [INFO] |
2025-05-04 05:27:43,777 [INFO] 10 | #![feature(extern_types)]
2025-05-04 05:27:43,777 [INFO] | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:43,777 [INFO] 
2025-05-04 05:27:44,210 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,210 [INFO] --> compat/regex.rs:15332:15
2025-05-04 05:27:44,210 [INFO] |
2025-05-04 05:27:44,211 [INFO] 15332 |     store_op1(op as libc::c_uint, loc, arg);
2025-05-04 05:27:44,211 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-05-04 05:27:44,211 [INFO] |     |
2025-05-04 05:27:44,211 [INFO] |     arguments to this function are incorrect
2025-05-04 05:27:44,211 [INFO] |
2025-05-04 05:27:44,211 [INFO] note: function defined here
2025-05-04 05:27:44,211 [INFO] --> compat/regex.rs:15292:22
2025-05-04 05:27:44,211 [INFO] |
2025-05-04 05:27:44,211 [INFO] 15292 | unsafe extern "C" fn store_op1(
2025-05-04 05:27:44,212 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,212 [INFO] 15293 |     mut op: re_opcode_t,
2025-05-04 05:27:44,212 [INFO] |     -------------------
2025-05-04 05:27:44,212 [INFO] 15294 |     mut loc: *mut libc::c_uchar,
2025-05-04 05:27:44,212 [INFO] |     ---------------------------
2025-05-04 05:27:44,212 [INFO] 15295 |     mut arg: libc::c_int,
2025-05-04 05:27:44,212 [INFO] |     --------------------
2025-05-04 05:27:44,212 [INFO] 
2025-05-04 05:27:44,222 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,222 [INFO] --> compat/regex.rs:15348:15
2025-05-04 05:27:44,223 [INFO] |
2025-05-04 05:27:44,223 [INFO] 15348 |     store_op2(op as libc::c_uint, loc, arg1, arg2);
2025-05-04 05:27:44,223 [INFO] |     --------- ^^^^^^^^^^^^^^^^^^ expected enum `re_opcode_t`, found `u32`
2025-05-04 05:27:44,223 [INFO] |     |
2025-05-04 05:27:44,223 [INFO] |     arguments to this function are incorrect
2025-05-04 05:27:44,223 [INFO] |
2025-05-04 05:27:44,223 [INFO] note: function defined here
2025-05-04 05:27:44,223 [INFO] --> compat/regex.rs:15303:22
2025-05-04 05:27:44,224 [INFO] |
2025-05-04 05:27:44,224 [INFO] 15303 | unsafe extern "C" fn store_op2(
2025-05-04 05:27:44,224 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,224 [INFO] 15304 |     mut op: re_opcode_t,
2025-05-04 05:27:44,224 [INFO] |     -------------------
2025-05-04 05:27:44,224 [INFO] 15305 |     mut loc: *mut libc::c_uchar,
2025-05-04 05:27:44,224 [INFO] |     ---------------------------
2025-05-04 05:27:44,224 [INFO] 15306 |     mut arg1: libc::c_int,
2025-05-04 05:27:44,225 [INFO] |     ---------------------
2025-05-04 05:27:44,225 [INFO] 15307 |     mut arg2: libc::c_int,
2025-05-04 05:27:44,225 [INFO] |     ---------------------
2025-05-04 05:27:44,225 [INFO] 
2025-05-04 05:27:44,248 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,248 [INFO] --> compat/regex.rs:16009:9
2025-05-04 05:27:44,248 [INFO] |
2025-05-04 05:27:44,249 [INFO] 16007 |     let mut result: libc::c_int = re_match_2_internal(
2025-05-04 05:27:44,249 [INFO] |                                   ------------------- arguments to this function are incorrect
2025-05-04 05:27:44,249 [INFO] 16008 |         bufp,
2025-05-04 05:27:44,249 [INFO] 16009 |         0 as *mut libc::c_void,
2025-05-04 05:27:44,249 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^ expected `i8`, found enum `c_void`
2025-05-04 05:27:44,249 [INFO] |
2025-05-04 05:27:44,249 [INFO] = note: expected raw pointer `*const i8`
2025-05-04 05:27:44,250 [INFO] found raw pointer `*mut c_void`
2025-05-04 05:27:44,250 [INFO] note: function defined here
2025-05-04 05:27:44,250 [INFO] --> compat/regex.rs:16042:22
2025-05-04 05:27:44,250 [INFO] |
2025-05-04 05:27:44,250 [INFO] 16042 | unsafe extern "C" fn re_match_2_internal(
2025-05-04 05:27:44,250 [INFO] |                      ^^^^^^^^^^^^^^^^^^^
2025-05-04 05:27:44,250 [INFO] 16043 |     mut bufp: *mut re_pattern_buffer,
2025-05-04 05:27:44,250 [INFO] |     --------------------------------
2025-05-04 05:27:44,251 [INFO] 16044 |     mut string1: *const libc::c_char,
2025-05-04 05:27:44,251 [INFO] |     --------------------------------
2025-05-04 05:27:44,251 [INFO] 16045 |     mut size1: libc::c_int,
2025-05-04 05:27:44,251 [INFO] |     ----------------------
2025-05-04 05:27:44,251 [INFO] 16046 |     mut string2: *const libc::c_char,
2025-05-04 05:27:44,251 [INFO] |     --------------------------------
2025-05-04 05:27:44,251 [INFO] 16047 |     mut size2: libc::c_int,
2025-05-04 05:27:44,251 [INFO] |     ----------------------
2025-05-04 05:27:44,252 [INFO] 16048 |     mut pos: libc::c_int,
2025-05-04 05:27:44,252 [INFO] |     --------------------
2025-05-04 05:27:44,252 [INFO] 16049 |     mut regs: *mut re_registers,
2025-05-04 05:27:44,252 [INFO] |     ---------------------------
2025-05-04 05:27:44,252 [INFO] 16050 |     mut stop: libc::c_int,
2025-05-04 05:27:44,252 [INFO] |     ---------------------
2025-05-04 05:27:44,252 [INFO] 
2025-05-04 05:27:44,417 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,417 [INFO] --> states/prims.rs:822:30
2025-05-04 05:27:44,417 [INFO] |
2025-05-04 05:27:44,417 [INFO] 822 |     n = match_arg(prim_name, NodeType::nVOID as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,417 [INFO] |         ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,418 [INFO] |         |
2025-05-04 05:27:44,418 [INFO] |         arguments to this function are incorrect
2025-05-04 05:27:44,418 [INFO] |
2025-05-04 05:27:44,418 [INFO] note: function defined here
2025-05-04 05:27:44,418 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,418 [INFO] |
2025-05-04 05:27:44,418 [INFO] 555 | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,418 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,418 [INFO] 556 |     mut prim_name: *mut i8,
2025-05-04 05:27:44,419 [INFO] |     ----------------------
2025-05-04 05:27:44,419 [INFO] 557 |     mut type_0: NodeType,
2025-05-04 05:27:44,419 [INFO] |     --------------------
2025-05-04 05:27:44,419 [INFO] 558 |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,419 [INFO] |     ----------------------------
2025-05-04 05:27:44,419 [INFO] 559 |     mut env: *mut Environment,
2025-05-04 05:27:44,419 [INFO] |     -------------------------
2025-05-04 05:27:44,419 [INFO] 560 |     mut linenum: u32,
2025-05-04 05:27:44,420 [INFO] |     ----------------
2025-05-04 05:27:44,420 [INFO] 
2025-05-04 05:27:44,431 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,431 [INFO] --> states/prims.rs:883:32
2025-05-04 05:27:44,431 [INFO] |
2025-05-04 05:27:44,431 [INFO] 883 |     var = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,431 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,431 [INFO] |           |
2025-05-04 05:27:44,431 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,431 [INFO] |
2025-05-04 05:27:44,431 [INFO] note: function defined here
2025-05-04 05:27:44,431 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,431 [INFO] |
2025-05-04 05:27:44,431 [INFO] 555 | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,431 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,432 [INFO] 556 |     mut prim_name: *mut i8,
2025-05-04 05:27:44,432 [INFO] |     ----------------------
2025-05-04 05:27:44,432 [INFO] 557 |     mut type_0: NodeType,
2025-05-04 05:27:44,432 [INFO] |     --------------------
2025-05-04 05:27:44,432 [INFO] 558 |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,432 [INFO] |     ----------------------------
2025-05-04 05:27:44,433 [INFO] 559 |     mut env: *mut Environment,
2025-05-04 05:27:44,433 [INFO] |     -------------------------
2025-05-04 05:27:44,433 [INFO] 560 |     mut linenum: u32,
2025-05-04 05:27:44,433 [INFO] |     ----------------
2025-05-04 05:27:44,433 [INFO] 
2025-05-04 05:27:44,443 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,443 [INFO] --> states/prims.rs:930:30
2025-05-04 05:27:44,443 [INFO] |
2025-05-04 05:27:44,443 [INFO] 930 |     n = match_arg(prim_name, NodeType::nVOID as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,443 [INFO] |         ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,443 [INFO] |         |
2025-05-04 05:27:44,444 [INFO] |         arguments to this function are incorrect
2025-05-04 05:27:44,444 [INFO] |
2025-05-04 05:27:44,444 [INFO] note: function defined here
2025-05-04 05:27:44,444 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,444 [INFO] |
2025-05-04 05:27:44,444 [INFO] 555 | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,444 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,444 [INFO] 556 |     mut prim_name: *mut i8,
2025-05-04 05:27:44,445 [INFO] |     ----------------------
2025-05-04 05:27:44,445 [INFO] 557 |     mut type_0: NodeType,
2025-05-04 05:27:44,445 [INFO] |     --------------------
2025-05-04 05:27:44,446 [INFO] 558 |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,446 [INFO] |     ----------------------------
2025-05-04 05:27:44,446 [INFO] 559 |     mut env: *mut Environment,
2025-05-04 05:27:44,446 [INFO] |     -------------------------
2025-05-04 05:27:44,446 [INFO] 560 |     mut linenum: u32,
2025-05-04 05:27:44,447 [INFO] |     ----------------
2025-05-04 05:27:44,447 [INFO] 
2025-05-04 05:27:44,457 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,457 [INFO] --> states/prims.rs:1096:30
2025-05-04 05:27:44,457 [INFO] |
2025-05-04 05:27:44,457 [INFO] 1096 |     s = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,458 [INFO] |         ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,458 [INFO] |         |
2025-05-04 05:27:44,458 [INFO] |         arguments to this function are incorrect
2025-05-04 05:27:44,458 [INFO] |
2025-05-04 05:27:44,458 [INFO] note: function defined here
2025-05-04 05:27:44,458 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,458 [INFO] |
2025-05-04 05:27:44,458 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,458 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,459 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,459 [INFO] |     ----------------------
2025-05-04 05:27:44,459 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,459 [INFO] |     --------------------
2025-05-04 05:27:44,459 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,459 [INFO] |     ----------------------------
2025-05-04 05:27:44,459 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,459 [INFO] |     -------------------------
2025-05-04 05:27:44,459 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,459 [INFO] |     ----------------
2025-05-04 05:27:44,460 [INFO] 
2025-05-04 05:27:44,468 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,469 [INFO] --> states/prims.rs:1279:9
2025-05-04 05:27:44,469 [INFO] |
2025-05-04 05:27:44,469 [INFO] 1277 |     start = match_arg(
2025-05-04 05:27:44,469 [INFO] |             --------- arguments to this function are incorrect
2025-05-04 05:27:44,469 [INFO] 1278 |         prim_name,
2025-05-04 05:27:44,470 [INFO] 1279 |         NodeType::nINTEGER as i32 as u32,
2025-05-04 05:27:44,470 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,470 [INFO] |
2025-05-04 05:27:44,470 [INFO] note: function defined here
2025-05-04 05:27:44,470 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,471 [INFO] |
2025-05-04 05:27:44,471 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,471 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,471 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,471 [INFO] |     ----------------------
2025-05-04 05:27:44,471 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,472 [INFO] |     --------------------
2025-05-04 05:27:44,472 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,472 [INFO] |     ----------------------------
2025-05-04 05:27:44,472 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,472 [INFO] |     -------------------------
2025-05-04 05:27:44,472 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,473 [INFO] |     ----------------
2025-05-04 05:27:44,473 [INFO] 
2025-05-04 05:27:44,482 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,482 [INFO] --> states/prims.rs:1284:32
2025-05-04 05:27:44,482 [INFO] |
2025-05-04 05:27:44,483 [INFO] 1284 |     end = match_arg(prim_name, NodeType::nINTEGER as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,483 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,484 [INFO] |           |
2025-05-04 05:27:44,485 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,485 [INFO] |
2025-05-04 05:27:44,485 [INFO] note: function defined here
2025-05-04 05:27:44,485 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,486 [INFO] |
2025-05-04 05:27:44,486 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,486 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,487 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,487 [INFO] |     ----------------------
2025-05-04 05:27:44,487 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,488 [INFO] |     --------------------
2025-05-04 05:27:44,488 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,488 [INFO] |     ----------------------------
2025-05-04 05:27:44,488 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,488 [INFO] |     -------------------------
2025-05-04 05:27:44,489 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,489 [INFO] |     ----------------
2025-05-04 05:27:44,489 [INFO] 
2025-05-04 05:27:44,496 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,496 [INFO] --> states/prims.rs:1399:32
2025-05-04 05:27:44,496 [INFO] |
2025-05-04 05:27:44,496 [INFO] 1399 |     str = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,497 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,497 [INFO] |           |
2025-05-04 05:27:44,497 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,498 [INFO] |
2025-05-04 05:27:44,498 [INFO] note: function defined here
2025-05-04 05:27:44,498 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,498 [INFO] |
2025-05-04 05:27:44,498 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,499 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,499 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,499 [INFO] |     ----------------------
2025-05-04 05:27:44,499 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,500 [INFO] |     --------------------
2025-05-04 05:27:44,500 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,500 [INFO] |     ----------------------------
2025-05-04 05:27:44,500 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,500 [INFO] |     -------------------------
2025-05-04 05:27:44,500 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,501 [INFO] |     ----------------
2025-05-04 05:27:44,502 [INFO] 
2025-05-04 05:27:44,509 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,509 [INFO] --> states/prims.rs:1437:31
2025-05-04 05:27:44,509 [INFO] |
2025-05-04 05:27:44,509 [INFO] 1437 |     ch = match_arg(prim_name, NodeType::nINTEGER as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,510 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,510 [INFO] |          |
2025-05-04 05:27:44,510 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,510 [INFO] |
2025-05-04 05:27:44,510 [INFO] note: function defined here
2025-05-04 05:27:44,510 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,511 [INFO] |
2025-05-04 05:27:44,511 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,511 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,511 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,511 [INFO] |     ----------------------
2025-05-04 05:27:44,511 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,512 [INFO] |     --------------------
2025-05-04 05:27:44,512 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,512 [INFO] |     ----------------------------
2025-05-04 05:27:44,512 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,513 [INFO] |     -------------------------
2025-05-04 05:27:44,513 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,513 [INFO] |     ----------------
2025-05-04 05:27:44,513 [INFO] 
2025-05-04 05:27:44,520 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,521 [INFO] --> states/prims.rs:1438:31
2025-05-04 05:27:44,521 [INFO] |
2025-05-04 05:27:44,521 [INFO] 1438 |     st = match_arg(prim_name, NodeType::nINTEGER as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,521 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,521 [INFO] |          |
2025-05-04 05:27:44,522 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,522 [INFO] |
2025-05-04 05:27:44,522 [INFO] note: function defined here
2025-05-04 05:27:44,522 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,522 [INFO] |
2025-05-04 05:27:44,523 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,523 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,523 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,523 [INFO] |     ----------------------
2025-05-04 05:27:44,523 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,523 [INFO] |     --------------------
2025-05-04 05:27:44,524 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,524 [INFO] |     ----------------------------
2025-05-04 05:27:44,524 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,524 [INFO] |     -------------------------
2025-05-04 05:27:44,524 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,525 [INFO] |     ----------------
2025-05-04 05:27:44,525 [INFO] 
2025-05-04 05:27:44,533 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,533 [INFO] --> states/prims.rs:1493:32
2025-05-04 05:27:44,533 [INFO] |
2025-05-04 05:27:44,533 [INFO] 1493 |     str = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,534 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,534 [INFO] |           |
2025-05-04 05:27:44,534 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,534 [INFO] |
2025-05-04 05:27:44,534 [INFO] note: function defined here
2025-05-04 05:27:44,534 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,535 [INFO] |
2025-05-04 05:27:44,535 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,535 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,535 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,535 [INFO] |     ----------------------
2025-05-04 05:27:44,535 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,536 [INFO] |     --------------------
2025-05-04 05:27:44,536 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,536 [INFO] |     ----------------------------
2025-05-04 05:27:44,536 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,536 [INFO] |     -------------------------
2025-05-04 05:27:44,536 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,537 [INFO] |     ----------------
2025-05-04 05:27:44,537 [INFO] 
2025-05-04 05:27:44,549 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,549 [INFO] --> states/prims.rs:1494:31
2025-05-04 05:27:44,549 [INFO] |
2025-05-04 05:27:44,549 [INFO] 1494 |     re = match_arg(prim_name, NodeType::nREGEXP as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,549 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,550 [INFO] |          |
2025-05-04 05:27:44,550 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,551 [INFO] |
2025-05-04 05:27:44,551 [INFO] note: function defined here
2025-05-04 05:27:44,551 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,551 [INFO] |
2025-05-04 05:27:44,551 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,551 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,551 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,551 [INFO] |     ----------------------
2025-05-04 05:27:44,551 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,552 [INFO] |     --------------------
2025-05-04 05:27:44,552 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,552 [INFO] |     ----------------------------
2025-05-04 05:27:44,552 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,552 [INFO] |     -------------------------
2025-05-04 05:27:44,553 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,553 [INFO] |     ----------------
2025-05-04 05:27:44,553 [INFO] 
2025-05-04 05:27:44,561 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,562 [INFO] --> states/prims.rs:1787:32
2025-05-04 05:27:44,562 [INFO] |
2025-05-04 05:27:44,562 [INFO] 1787 |     str = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,562 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,563 [INFO] |           |
2025-05-04 05:27:44,563 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,563 [INFO] |
2025-05-04 05:27:44,563 [INFO] note: function defined here
2025-05-04 05:27:44,563 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,564 [INFO] |
2025-05-04 05:27:44,564 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,564 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,564 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,565 [INFO] |     ----------------------
2025-05-04 05:27:44,565 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,565 [INFO] |     --------------------
2025-05-04 05:27:44,566 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,566 [INFO] |     ----------------------------
2025-05-04 05:27:44,567 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,567 [INFO] |     -------------------------
2025-05-04 05:27:44,567 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,567 [INFO] |     ----------------
2025-05-04 05:27:44,567 [INFO] 
2025-05-04 05:27:44,573 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,573 [INFO] --> states/prims.rs:1788:31
2025-05-04 05:27:44,573 [INFO] |
2025-05-04 05:27:44,574 [INFO] 1788 |     re = match_arg(prim_name, NodeType::nREGEXP as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,574 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,574 [INFO] |          |
2025-05-04 05:27:44,574 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,574 [INFO] |
2025-05-04 05:27:44,575 [INFO] note: function defined here
2025-05-04 05:27:44,575 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,576 [INFO] |
2025-05-04 05:27:44,576 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,576 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,576 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,576 [INFO] |     ----------------------
2025-05-04 05:27:44,576 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,576 [INFO] |     --------------------
2025-05-04 05:27:44,576 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,576 [INFO] |     ----------------------------
2025-05-04 05:27:44,576 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,577 [INFO] |     -------------------------
2025-05-04 05:27:44,577 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,578 [INFO] |     ----------------
2025-05-04 05:27:44,578 [INFO] 
2025-05-04 05:27:44,582 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,583 [INFO] --> states/prims.rs:1791:9
2025-05-04 05:27:44,583 [INFO] |
2025-05-04 05:27:44,583 [INFO] 1789 |     subst = match_arg(
2025-05-04 05:27:44,583 [INFO] |             --------- arguments to this function are incorrect
2025-05-04 05:27:44,583 [INFO] 1790 |         prim_name,
2025-05-04 05:27:44,584 [INFO] 1791 |         NodeType::nSTRING as i32 as u32,
2025-05-04 05:27:44,584 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,584 [INFO] |
2025-05-04 05:27:44,584 [INFO] note: function defined here
2025-05-04 05:27:44,584 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,585 [INFO] |
2025-05-04 05:27:44,585 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,585 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,586 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,586 [INFO] |     ----------------------
2025-05-04 05:27:44,586 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,586 [INFO] |     --------------------
2025-05-04 05:27:44,587 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,587 [INFO] |     ----------------------------
2025-05-04 05:27:44,587 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,587 [INFO] |     -------------------------
2025-05-04 05:27:44,587 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,587 [INFO] |     ----------------
2025-05-04 05:27:44,588 [INFO] 
2025-05-04 05:27:44,593 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,594 [INFO] --> states/prims.rs:1822:32
2025-05-04 05:27:44,594 [INFO] |
2025-05-04 05:27:44,594 [INFO] 1822 |     str = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,594 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,595 [INFO] |           |
2025-05-04 05:27:44,595 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,595 [INFO] |
2025-05-04 05:27:44,595 [INFO] note: function defined here
2025-05-04 05:27:44,595 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,596 [INFO] |
2025-05-04 05:27:44,596 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,596 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,596 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,597 [INFO] |     ----------------------
2025-05-04 05:27:44,597 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,597 [INFO] |     --------------------
2025-05-04 05:27:44,598 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,598 [INFO] |     ----------------------------
2025-05-04 05:27:44,598 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,598 [INFO] |     -------------------------
2025-05-04 05:27:44,599 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,599 [INFO] |     ----------------
2025-05-04 05:27:44,599 [INFO] 
2025-05-04 05:27:44,604 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,604 [INFO] --> states/prims.rs:1823:31
2025-05-04 05:27:44,604 [INFO] |
2025-05-04 05:27:44,604 [INFO] 1823 |     re = match_arg(prim_name, NodeType::nREGEXP as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,605 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,605 [INFO] |          |
2025-05-04 05:27:44,605 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,606 [INFO] |
2025-05-04 05:27:44,606 [INFO] note: function defined here
2025-05-04 05:27:44,606 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,606 [INFO] |
2025-05-04 05:27:44,606 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,606 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,608 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,608 [INFO] |     ----------------------
2025-05-04 05:27:44,608 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,608 [INFO] |     --------------------
2025-05-04 05:27:44,608 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,608 [INFO] |     ----------------------------
2025-05-04 05:27:44,608 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,608 [INFO] |     -------------------------
2025-05-04 05:27:44,609 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,609 [INFO] |     ----------------
2025-05-04 05:27:44,610 [INFO] 
2025-05-04 05:27:44,616 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,617 [INFO] --> states/prims.rs:1826:9
2025-05-04 05:27:44,617 [INFO] |
2025-05-04 05:27:44,618 [INFO] 1824 |     subst = match_arg(
2025-05-04 05:27:44,618 [INFO] |             --------- arguments to this function are incorrect
2025-05-04 05:27:44,618 [INFO] 1825 |         prim_name,
2025-05-04 05:27:44,618 [INFO] 1826 |         NodeType::nSTRING as i32 as u32,
2025-05-04 05:27:44,618 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,618 [INFO] |
2025-05-04 05:27:44,619 [INFO] note: function defined here
2025-05-04 05:27:44,619 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,619 [INFO] |
2025-05-04 05:27:44,619 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,619 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,619 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,619 [INFO] |     ----------------------
2025-05-04 05:27:44,620 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,620 [INFO] |     --------------------
2025-05-04 05:27:44,620 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,620 [INFO] |     ----------------------------
2025-05-04 05:27:44,620 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,620 [INFO] |     -------------------------
2025-05-04 05:27:44,620 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,620 [INFO] |     ----------------
2025-05-04 05:27:44,620 [INFO] 
2025-05-04 05:27:44,627 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,627 [INFO] --> states/prims.rs:1860:31
2025-05-04 05:27:44,627 [INFO] |
2025-05-04 05:27:44,628 [INFO] 1860 |     re = match_arg(prim_name, NodeType::nREGEXP as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,628 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,628 [INFO] |          |
2025-05-04 05:27:44,628 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,628 [INFO] |
2025-05-04 05:27:44,628 [INFO] note: function defined here
2025-05-04 05:27:44,629 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,629 [INFO] |
2025-05-04 05:27:44,629 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,630 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,630 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,630 [INFO] |     ----------------------
2025-05-04 05:27:44,630 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,630 [INFO] |     --------------------
2025-05-04 05:27:44,631 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,631 [INFO] |     ----------------------------
2025-05-04 05:27:44,631 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,631 [INFO] |     -------------------------
2025-05-04 05:27:44,632 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,632 [INFO] |     ----------------
2025-05-04 05:27:44,632 [INFO] 
2025-05-04 05:27:44,639 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,639 [INFO] --> states/prims.rs:1861:32
2025-05-04 05:27:44,640 [INFO] |
2025-05-04 05:27:44,641 [INFO] 1861 |     str = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,641 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,641 [INFO] |           |
2025-05-04 05:27:44,641 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,641 [INFO] |
2025-05-04 05:27:44,642 [INFO] note: function defined here
2025-05-04 05:27:44,642 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,642 [INFO] |
2025-05-04 05:27:44,643 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,643 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,643 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,643 [INFO] |     ----------------------
2025-05-04 05:27:44,643 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,644 [INFO] |     --------------------
2025-05-04 05:27:44,646 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,646 [INFO] |     ----------------------------
2025-05-04 05:27:44,646 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,646 [INFO] |     -------------------------
2025-05-04 05:27:44,646 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,647 [INFO] |     ----------------
2025-05-04 05:27:44,647 [INFO] 
2025-05-04 05:27:44,652 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,652 [INFO] --> states/prims.rs:1961:32
2025-05-04 05:27:44,653 [INFO] |
2025-05-04 05:27:44,653 [INFO] 1961 |     fmt = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,653 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,654 [INFO] |           |
2025-05-04 05:27:44,654 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,654 [INFO] |
2025-05-04 05:27:44,654 [INFO] note: function defined here
2025-05-04 05:27:44,654 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,655 [INFO] |
2025-05-04 05:27:44,655 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,655 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,655 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,655 [INFO] |     ----------------------
2025-05-04 05:27:44,656 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,656 [INFO] |     --------------------
2025-05-04 05:27:44,656 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,656 [INFO] |     ----------------------------
2025-05-04 05:27:44,656 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,657 [INFO] |     -------------------------
2025-05-04 05:27:44,657 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,657 [INFO] |     ----------------
2025-05-04 05:27:44,658 [INFO] 
2025-05-04 05:27:44,665 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,665 [INFO] --> states/prims.rs:2221:31
2025-05-04 05:27:44,666 [INFO] |
2025-05-04 05:27:44,666 [INFO] 2221 |     s1 = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,666 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,666 [INFO] |          |
2025-05-04 05:27:44,666 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,667 [INFO] |
2025-05-04 05:27:44,667 [INFO] note: function defined here
2025-05-04 05:27:44,667 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,667 [INFO] |
2025-05-04 05:27:44,667 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,668 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,668 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,668 [INFO] |     ----------------------
2025-05-04 05:27:44,668 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,668 [INFO] |     --------------------
2025-05-04 05:27:44,669 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,669 [INFO] |     ----------------------------
2025-05-04 05:27:44,669 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,669 [INFO] |     -------------------------
2025-05-04 05:27:44,669 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,669 [INFO] |     ----------------
2025-05-04 05:27:44,670 [INFO] 
2025-05-04 05:27:44,677 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,678 [INFO] --> states/prims.rs:2222:31
2025-05-04 05:27:44,678 [INFO] |
2025-05-04 05:27:44,678 [INFO] 2222 |     s2 = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,678 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,679 [INFO] |          |
2025-05-04 05:27:44,679 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,679 [INFO] |
2025-05-04 05:27:44,679 [INFO] note: function defined here
2025-05-04 05:27:44,679 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,679 [INFO] |
2025-05-04 05:27:44,679 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,680 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,680 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,680 [INFO] |     ----------------------
2025-05-04 05:27:44,680 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,680 [INFO] |     --------------------
2025-05-04 05:27:44,680 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,681 [INFO] |     ----------------------------
2025-05-04 05:27:44,681 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,681 [INFO] |     -------------------------
2025-05-04 05:27:44,681 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,681 [INFO] |     ----------------
2025-05-04 05:27:44,681 [INFO] 
2025-05-04 05:27:44,688 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,689 [INFO] --> states/prims.rs:2286:30
2025-05-04 05:27:44,689 [INFO] |
2025-05-04 05:27:44,690 [INFO] 2286 |     n = match_arg(prim_name, NodeType::nVOID as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,690 [INFO] |         ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,690 [INFO] |         |
2025-05-04 05:27:44,690 [INFO] |         arguments to this function are incorrect
2025-05-04 05:27:44,690 [INFO] |
2025-05-04 05:27:44,691 [INFO] note: function defined here
2025-05-04 05:27:44,691 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,691 [INFO] |
2025-05-04 05:27:44,691 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,691 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,691 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,691 [INFO] |     ----------------------
2025-05-04 05:27:44,691 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,691 [INFO] |     --------------------
2025-05-04 05:27:44,691 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,691 [INFO] |     ----------------------------
2025-05-04 05:27:44,692 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,692 [INFO] |     -------------------------
2025-05-04 05:27:44,692 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,692 [INFO] |     ----------------
2025-05-04 05:27:44,693 [INFO] 
2025-05-04 05:27:44,700 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,700 [INFO] --> states/prims.rs:2367:31
2025-05-04 05:27:44,700 [INFO] |
2025-05-04 05:27:44,700 [INFO] 2367 |     s1 = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,700 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,700 [INFO] |          |
2025-05-04 05:27:44,700 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,701 [INFO] |
2025-05-04 05:27:44,701 [INFO] note: function defined here
2025-05-04 05:27:44,701 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,701 [INFO] |
2025-05-04 05:27:44,701 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,701 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,701 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,701 [INFO] |     ----------------------
2025-05-04 05:27:44,702 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,702 [INFO] |     --------------------
2025-05-04 05:27:44,702 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,702 [INFO] |     ----------------------------
2025-05-04 05:27:44,702 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,703 [INFO] |     -------------------------
2025-05-04 05:27:44,703 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,703 [INFO] |     ----------------
2025-05-04 05:27:44,703 [INFO] 
2025-05-04 05:27:44,709 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,709 [INFO] --> states/prims.rs:2368:31
2025-05-04 05:27:44,709 [INFO] |
2025-05-04 05:27:44,709 [INFO] 2368 |     s2 = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,709 [INFO] |          ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,710 [INFO] |          |
2025-05-04 05:27:44,710 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,710 [INFO] |
2025-05-04 05:27:44,710 [INFO] note: function defined here
2025-05-04 05:27:44,710 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,710 [INFO] |
2025-05-04 05:27:44,711 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,711 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,711 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,711 [INFO] |     ----------------------
2025-05-04 05:27:44,711 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,711 [INFO] |     --------------------
2025-05-04 05:27:44,712 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,712 [INFO] |     ----------------------------
2025-05-04 05:27:44,712 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,712 [INFO] |     -------------------------
2025-05-04 05:27:44,712 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,713 [INFO] |     ----------------
2025-05-04 05:27:44,713 [INFO] 
2025-05-04 05:27:44,721 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,721 [INFO] --> states/prims.rs:2369:32
2025-05-04 05:27:44,721 [INFO] |
2025-05-04 05:27:44,722 [INFO] 2369 |     len = match_arg(prim_name, NodeType::nINTEGER as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,722 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,722 [INFO] |           |
2025-05-04 05:27:44,722 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,722 [INFO] |
2025-05-04 05:27:44,723 [INFO] note: function defined here
2025-05-04 05:27:44,723 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,723 [INFO] |
2025-05-04 05:27:44,723 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,723 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,724 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,724 [INFO] |     ----------------------
2025-05-04 05:27:44,724 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,724 [INFO] |     --------------------
2025-05-04 05:27:44,724 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,725 [INFO] |     ----------------------------
2025-05-04 05:27:44,725 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,725 [INFO] |     -------------------------
2025-05-04 05:27:44,725 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,725 [INFO] |     ----------------
2025-05-04 05:27:44,726 [INFO] 
2025-05-04 05:27:44,732 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,732 [INFO] --> states/prims.rs:2439:32
2025-05-04 05:27:44,732 [INFO] |
2025-05-04 05:27:44,732 [INFO] 2439 |     str = match_arg(prim_name, NodeType::nSTRING as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,732 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,733 [INFO] |           |
2025-05-04 05:27:44,733 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,733 [INFO] |
2025-05-04 05:27:44,734 [INFO] note: function defined here
2025-05-04 05:27:44,734 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,734 [INFO] |
2025-05-04 05:27:44,734 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,734 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,735 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,735 [INFO] |     ----------------------
2025-05-04 05:27:44,735 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,735 [INFO] |     --------------------
2025-05-04 05:27:44,735 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,736 [INFO] |     ----------------------------
2025-05-04 05:27:44,736 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,736 [INFO] |     -------------------------
2025-05-04 05:27:44,736 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,737 [INFO] |     ----------------
2025-05-04 05:27:44,737 [INFO] 
2025-05-04 05:27:44,742 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,742 [INFO] --> states/prims.rs:2442:9
2025-05-04 05:27:44,742 [INFO] |
2025-05-04 05:27:44,743 [INFO] 2440 |     start = match_arg(
2025-05-04 05:27:44,743 [INFO] |             --------- arguments to this function are incorrect
2025-05-04 05:27:44,743 [INFO] 2441 |         prim_name,
2025-05-04 05:27:44,743 [INFO] 2442 |         NodeType::nINTEGER as i32 as u32,
2025-05-04 05:27:44,743 [INFO] |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,744 [INFO] |
2025-05-04 05:27:44,744 [INFO] note: function defined here
2025-05-04 05:27:44,744 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,744 [INFO] |
2025-05-04 05:27:44,744 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,745 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,745 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,746 [INFO] |     ----------------------
2025-05-04 05:27:44,746 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,746 [INFO] |     --------------------
2025-05-04 05:27:44,746 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,746 [INFO] |     ----------------------------
2025-05-04 05:27:44,746 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,746 [INFO] |     -------------------------
2025-05-04 05:27:44,746 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,747 [INFO] |     ----------------
2025-05-04 05:27:44,747 [INFO] 
2025-05-04 05:27:44,760 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,760 [INFO] --> states/prims.rs:2447:32
2025-05-04 05:27:44,760 [INFO] |
2025-05-04 05:27:44,760 [INFO] 2447 |     end = match_arg(prim_name, NodeType::nINTEGER as i32 as u32, &mut arg, env, linenum);
2025-05-04 05:27:44,761 [INFO] |           ---------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `prims::NodeType`, found `u32`
2025-05-04 05:27:44,761 [INFO] |           |
2025-05-04 05:27:44,762 [INFO] |           arguments to this function are incorrect
2025-05-04 05:27:44,762 [INFO] |
2025-05-04 05:27:44,762 [INFO] note: function defined here
2025-05-04 05:27:44,762 [INFO] --> states/prims.rs:555:22
2025-05-04 05:27:44,763 [INFO] |
2025-05-04 05:27:44,763 [INFO] 555  | unsafe extern "C" fn match_arg(
2025-05-04 05:27:44,763 [INFO] |                      ^^^^^^^^^
2025-05-04 05:27:44,763 [INFO] 556  |     mut prim_name: *mut i8,
2025-05-04 05:27:44,763 [INFO] |     ----------------------
2025-05-04 05:27:44,763 [INFO] 557  |     mut type_0: NodeType,
2025-05-04 05:27:44,763 [INFO] |     --------------------
2025-05-04 05:27:44,764 [INFO] 558  |     mut argp: *mut *mut ListItem,
2025-05-04 05:27:44,764 [INFO] |     ----------------------------
2025-05-04 05:27:44,764 [INFO] 559  |     mut env: *mut Environment,
2025-05-04 05:27:44,764 [INFO] |     -------------------------
2025-05-04 05:27:44,764 [INFO] 560  |     mut linenum: u32,
2025-05-04 05:27:44,764 [INFO] |     ----------------
2025-05-04 05:27:44,764 [INFO] 
2025-05-04 05:27:44,784 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,784 [INFO] --> states/utils.rs:911:21
2025-05-04 05:27:44,784 [INFO] |
2025-05-04 05:27:44,784 [INFO] 911 |     n2 = node_alloc((*n).type_0 as u32);
2025-05-04 05:27:44,784 [INFO] |          ---------- ^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,784 [INFO] |          |
2025-05-04 05:27:44,784 [INFO] |          arguments to this function are incorrect
2025-05-04 05:27:44,785 [INFO] |
2025-05-04 05:27:44,785 [INFO] note: function defined here
2025-05-04 05:27:44,785 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,785 [INFO] |
2025-05-04 05:27:44,786 [INFO] 896 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,786 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,786 [INFO] 
2025-05-04 05:27:44,795 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,795 [INFO] --> states/utils.rs:998:20
2025-05-04 05:27:44,795 [INFO] |
2025-05-04 05:27:44,795 [INFO] 998 |     n = node_alloc(NodeType::nSTRING as i32 as u32);
2025-05-04 05:27:44,796 [INFO] |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,796 [INFO] |         |
2025-05-04 05:27:44,796 [INFO] |         arguments to this function are incorrect
2025-05-04 05:27:44,796 [INFO] |
2025-05-04 05:27:44,796 [INFO] note: function defined here
2025-05-04 05:27:44,797 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,797 [INFO] |
2025-05-04 05:27:44,797 [INFO] 896 | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,798 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,798 [INFO] 
2025-05-04 05:27:44,808 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,809 [INFO] --> states/utils.rs:1286:28
2025-05-04 05:27:44,809 [INFO] |
2025-05-04 05:27:44,809 [INFO] 1286 |             n = node_alloc(NodeType::nSTRING as i32 as u32);
2025-05-04 05:27:44,809 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,809 [INFO] |                 |
2025-05-04 05:27:44,809 [INFO] |                 arguments to this function are incorrect
2025-05-04 05:27:44,809 [INFO] |
2025-05-04 05:27:44,809 [INFO] note: function defined here
2025-05-04 05:27:44,810 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,810 [INFO] |
2025-05-04 05:27:44,810 [INFO] 896  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,810 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,810 [INFO] 
2025-05-04 05:27:44,819 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,819 [INFO] --> states/utils.rs:1311:28
2025-05-04 05:27:44,819 [INFO] |
2025-05-04 05:27:44,819 [INFO] 1311 |             n = node_alloc(NodeType::nSTRING as i32 as u32);
2025-05-04 05:27:44,819 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,820 [INFO] |                 |
2025-05-04 05:27:44,820 [INFO] |                 arguments to this function are incorrect
2025-05-04 05:27:44,820 [INFO] |
2025-05-04 05:27:44,821 [INFO] note: function defined here
2025-05-04 05:27:44,821 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,821 [INFO] |
2025-05-04 05:27:44,822 [INFO] 896  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,822 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,822 [INFO] 
2025-05-04 05:27:44,830 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,830 [INFO] --> states/utils.rs:1333:28
2025-05-04 05:27:44,830 [INFO] |
2025-05-04 05:27:44,830 [INFO] 1333 |             n = node_alloc(NodeType::nINTEGER as i32 as u32);
2025-05-04 05:27:44,830 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,831 [INFO] |                 |
2025-05-04 05:27:44,831 [INFO] |                 arguments to this function are incorrect
2025-05-04 05:27:44,831 [INFO] |
2025-05-04 05:27:44,831 [INFO] note: function defined here
2025-05-04 05:27:44,831 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,832 [INFO] |
2025-05-04 05:27:44,832 [INFO] 896  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,832 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,832 [INFO] 
2025-05-04 05:27:44,841 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,842 [INFO] --> states/utils.rs:1421:32
2025-05-04 05:27:44,842 [INFO] |
2025-05-04 05:27:44,842 [INFO] 1421 |                 n = node_alloc(NodeType::nINTEGER as i32 as u32);
2025-05-04 05:27:44,842 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,842 [INFO] |                     |
2025-05-04 05:27:44,845 [INFO] |                     arguments to this function are incorrect
2025-05-04 05:27:44,845 [INFO] |
2025-05-04 05:27:44,845 [INFO] note: function defined here
2025-05-04 05:27:44,846 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,846 [INFO] |
2025-05-04 05:27:44,847 [INFO] 896  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,847 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,847 [INFO] 
2025-05-04 05:27:44,854 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,854 [INFO] --> states/utils.rs:1472:32
2025-05-04 05:27:44,855 [INFO] |
2025-05-04 05:27:44,855 [INFO] 1472 |                 n = node_alloc(NodeType::nREAL as i32 as u32);
2025-05-04 05:27:44,855 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,855 [INFO] |                     |
2025-05-04 05:27:44,855 [INFO] |                     arguments to this function are incorrect
2025-05-04 05:27:44,856 [INFO] |
2025-05-04 05:27:44,856 [INFO] note: function defined here
2025-05-04 05:27:44,856 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,856 [INFO] |
2025-05-04 05:27:44,856 [INFO] 896  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,856 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,856 [INFO] 
2025-05-04 05:27:44,865 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,865 [INFO] --> states/utils.rs:1577:28
2025-05-04 05:27:44,865 [INFO] |
2025-05-04 05:27:44,866 [INFO] 1577 |             n = node_alloc(NodeType::nINTEGER as i32 as u32);
2025-05-04 05:27:44,866 [INFO] |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,866 [INFO] |                 |
2025-05-04 05:27:44,866 [INFO] |                 arguments to this function are incorrect
2025-05-04 05:27:44,866 [INFO] |
2025-05-04 05:27:44,867 [INFO] note: function defined here
2025-05-04 05:27:44,867 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,867 [INFO] |
2025-05-04 05:27:44,867 [INFO] 896  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,867 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,867 [INFO] 
2025-05-04 05:27:44,878 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,878 [INFO] --> states/utils.rs:1715:25
2025-05-04 05:27:44,878 [INFO] |
2025-05-04 05:27:44,879 [INFO] 1712 |                     n2 = calculate_binary(
2025-05-04 05:27:44,879 [INFO] |                          ---------------- arguments to this function are incorrect
2025-05-04 05:27:44,879 [INFO] ...
2025-05-04 05:27:44,879 [INFO] 1715 |                         ExprType::ePLUS as i32 as u32,
2025-05-04 05:27:44,879 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-05-04 05:27:44,879 [INFO] |
2025-05-04 05:27:44,880 [INFO] note: function defined here
2025-05-04 05:27:44,880 [INFO] --> states/utils.rs:1409:22
2025-05-04 05:27:44,880 [INFO] |
2025-05-04 05:27:44,881 [INFO] 1409 | unsafe extern "C" fn calculate_binary(
2025-05-04 05:27:44,881 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-05-04 05:27:44,881 [INFO] 1410 |     mut l: *mut Node,
2025-05-04 05:27:44,881 [INFO] |     ----------------
2025-05-04 05:27:44,881 [INFO] 1411 |     mut r: *mut Node,
2025-05-04 05:27:44,882 [INFO] |     ----------------
2025-05-04 05:27:44,882 [INFO] 1412 |     mut type_0: ExprType,
2025-05-04 05:27:44,883 [INFO] |     --------------------
2025-05-04 05:27:44,883 [INFO] 1413 |     mut linenum_0: u32,
2025-05-04 05:27:44,883 [INFO] |     ------------------
2025-05-04 05:27:44,884 [INFO] 
2025-05-04 05:27:44,892 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,892 [INFO] --> states/utils.rs:1723:25
2025-05-04 05:27:44,892 [INFO] |
2025-05-04 05:27:44,892 [INFO] 1720 |                     n2 = calculate_binary(
2025-05-04 05:27:44,892 [INFO] |                          ---------------- arguments to this function are incorrect
2025-05-04 05:27:44,892 [INFO] ...
2025-05-04 05:27:44,892 [INFO] 1723 |                         ExprType::eMINUS as i32 as u32,
2025-05-04 05:27:44,893 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-05-04 05:27:44,893 [INFO] |
2025-05-04 05:27:44,893 [INFO] note: function defined here
2025-05-04 05:27:44,893 [INFO] --> states/utils.rs:1409:22
2025-05-04 05:27:44,893 [INFO] |
2025-05-04 05:27:44,893 [INFO] 1409 | unsafe extern "C" fn calculate_binary(
2025-05-04 05:27:44,894 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-05-04 05:27:44,894 [INFO] 1410 |     mut l: *mut Node,
2025-05-04 05:27:44,894 [INFO] |     ----------------
2025-05-04 05:27:44,894 [INFO] 1411 |     mut r: *mut Node,
2025-05-04 05:27:44,894 [INFO] |     ----------------
2025-05-04 05:27:44,894 [INFO] 1412 |     mut type_0: ExprType,
2025-05-04 05:27:44,894 [INFO] |     --------------------
2025-05-04 05:27:44,895 [INFO] 1413 |     mut linenum_0: u32,
2025-05-04 05:27:44,895 [INFO] |     ------------------
2025-05-04 05:27:44,895 [INFO] 
2025-05-04 05:27:44,905 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,905 [INFO] --> states/utils.rs:1731:25
2025-05-04 05:27:44,905 [INFO] |
2025-05-04 05:27:44,905 [INFO] 1728 |                     n2 = calculate_binary(
2025-05-04 05:27:44,906 [INFO] |                          ---------------- arguments to this function are incorrect
2025-05-04 05:27:44,906 [INFO] ...
2025-05-04 05:27:44,906 [INFO] 1731 |                         ExprType::eMULT as i32 as u32,
2025-05-04 05:27:44,906 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-05-04 05:27:44,906 [INFO] |
2025-05-04 05:27:44,906 [INFO] note: function defined here
2025-05-04 05:27:44,907 [INFO] --> states/utils.rs:1409:22
2025-05-04 05:27:44,907 [INFO] |
2025-05-04 05:27:44,907 [INFO] 1409 | unsafe extern "C" fn calculate_binary(
2025-05-04 05:27:44,907 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-05-04 05:27:44,907 [INFO] 1410 |     mut l: *mut Node,
2025-05-04 05:27:44,907 [INFO] |     ----------------
2025-05-04 05:27:44,908 [INFO] 1411 |     mut r: *mut Node,
2025-05-04 05:27:44,908 [INFO] |     ----------------
2025-05-04 05:27:44,908 [INFO] 1412 |     mut type_0: ExprType,
2025-05-04 05:27:44,908 [INFO] |     --------------------
2025-05-04 05:27:44,908 [INFO] 1413 |     mut linenum_0: u32,
2025-05-04 05:27:44,909 [INFO] |     ------------------
2025-05-04 05:27:44,909 [INFO] 
2025-05-04 05:27:44,918 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,918 [INFO] --> states/utils.rs:1739:25
2025-05-04 05:27:44,918 [INFO] |
2025-05-04 05:27:44,918 [INFO] 1736 |                     n2 = calculate_binary(
2025-05-04 05:27:44,918 [INFO] |                          ---------------- arguments to this function are incorrect
2025-05-04 05:27:44,919 [INFO] ...
2025-05-04 05:27:44,919 [INFO] 1739 |                         ExprType::eDIV as i32 as u32,
2025-05-04 05:27:44,919 [INFO] |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-05-04 05:27:44,919 [INFO] |
2025-05-04 05:27:44,919 [INFO] note: function defined here
2025-05-04 05:27:44,919 [INFO] --> states/utils.rs:1409:22
2025-05-04 05:27:44,920 [INFO] |
2025-05-04 05:27:44,920 [INFO] 1409 | unsafe extern "C" fn calculate_binary(
2025-05-04 05:27:44,920 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-05-04 05:27:44,920 [INFO] 1410 |     mut l: *mut Node,
2025-05-04 05:27:44,920 [INFO] |     ----------------
2025-05-04 05:27:44,920 [INFO] 1411 |     mut r: *mut Node,
2025-05-04 05:27:44,921 [INFO] |     ----------------
2025-05-04 05:27:44,921 [INFO] 1412 |     mut type_0: ExprType,
2025-05-04 05:27:44,922 [INFO] |     --------------------
2025-05-04 05:27:44,922 [INFO] 1413 |     mut linenum_0: u32,
2025-05-04 05:27:44,922 [INFO] |     ------------------
2025-05-04 05:27:44,922 [INFO] 
2025-05-04 05:27:44,933 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,934 [INFO] --> states/utils.rs:1760:17
2025-05-04 05:27:44,934 [INFO] |
2025-05-04 05:27:44,934 [INFO] 1757 |               n = calculate_binary(
2025-05-04 05:27:44,934 [INFO] |                   ---------------- arguments to this function are incorrect
2025-05-04 05:27:44,935 [INFO] ...
2025-05-04 05:27:44,935 [INFO] 1760 | /                 (if (*expr).type_0 as u32 == ExprType::ePOSTFIXADD as i32 as u32 {
2025-05-04 05:27:44,935 [INFO] 1761 | |                     ExprType::ePLUS as i32
2025-05-04 05:27:44,935 [INFO] 1762 | |                 } else {
2025-05-04 05:27:44,935 [INFO] 1763 | |                     ExprType::eMINUS as i32
2025-05-04 05:27:44,935 [INFO] 1764 | |                 }) as u32,
2025-05-04 05:27:44,935 [INFO] | |_________________________^ expected enum `utils::ExprType`, found `u32`
2025-05-04 05:27:44,936 [INFO] |
2025-05-04 05:27:44,936 [INFO] note: function defined here
2025-05-04 05:27:44,936 [INFO] --> states/utils.rs:1409:22
2025-05-04 05:27:44,936 [INFO] |
2025-05-04 05:27:44,937 [INFO] 1409 | unsafe extern "C" fn calculate_binary(
2025-05-04 05:27:44,938 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-05-04 05:27:44,938 [INFO] 1410 |     mut l: *mut Node,
2025-05-04 05:27:44,938 [INFO] |     ----------------
2025-05-04 05:27:44,938 [INFO] 1411 |     mut r: *mut Node,
2025-05-04 05:27:44,939 [INFO] |     ----------------
2025-05-04 05:27:44,939 [INFO] 1412 |     mut type_0: ExprType,
2025-05-04 05:27:44,939 [INFO] |     --------------------
2025-05-04 05:27:44,939 [INFO] 1413 |     mut linenum_0: u32,
2025-05-04 05:27:44,940 [INFO] |     ------------------
2025-05-04 05:27:44,940 [INFO] 
2025-05-04 05:27:44,946 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,947 [INFO] --> states/utils.rs:1777:17
2025-05-04 05:27:44,947 [INFO] |
2025-05-04 05:27:44,947 [INFO] 1774 |               n = calculate_binary(
2025-05-04 05:27:44,947 [INFO] |                   ---------------- arguments to this function are incorrect
2025-05-04 05:27:44,948 [INFO] ...
2025-05-04 05:27:44,948 [INFO] 1777 | /                 (if (*expr).type_0 as u32 == ExprType::ePREFIXADD as i32 as u32 {
2025-05-04 05:27:44,948 [INFO] 1778 | |                     ExprType::ePLUS as i32
2025-05-04 05:27:44,948 [INFO] 1779 | |                 } else {
2025-05-04 05:27:44,948 [INFO] 1780 | |                     ExprType::eMINUS as i32
2025-05-04 05:27:44,949 [INFO] 1781 | |                 }) as u32,
2025-05-04 05:27:44,949 [INFO] | |_________________________^ expected enum `utils::ExprType`, found `u32`
2025-05-04 05:27:44,949 [INFO] |
2025-05-04 05:27:44,950 [INFO] note: function defined here
2025-05-04 05:27:44,950 [INFO] --> states/utils.rs:1409:22
2025-05-04 05:27:44,950 [INFO] |
2025-05-04 05:27:44,951 [INFO] 1409 | unsafe extern "C" fn calculate_binary(
2025-05-04 05:27:44,951 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-05-04 05:27:44,952 [INFO] 1410 |     mut l: *mut Node,
2025-05-04 05:27:44,952 [INFO] |     ----------------
2025-05-04 05:27:44,952 [INFO] 1411 |     mut r: *mut Node,
2025-05-04 05:27:44,952 [INFO] |     ----------------
2025-05-04 05:27:44,952 [INFO] 1412 |     mut type_0: ExprType,
2025-05-04 05:27:44,953 [INFO] |     --------------------
2025-05-04 05:27:44,953 [INFO] 1413 |     mut linenum_0: u32,
2025-05-04 05:27:44,954 [INFO] |     ------------------
2025-05-04 05:27:44,954 [INFO] 
2025-05-04 05:27:44,959 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,959 [INFO] --> states/utils.rs:1952:32
2025-05-04 05:27:44,960 [INFO] |
2025-05-04 05:27:44,960 [INFO] 1952 |                 l = node_alloc(NodeType::nINTEGER as i32 as u32);
2025-05-04 05:27:44,960 [INFO] |                     ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::NodeType`, found `u32`
2025-05-04 05:27:44,960 [INFO] |                     |
2025-05-04 05:27:44,960 [INFO] |                     arguments to this function are incorrect
2025-05-04 05:27:44,961 [INFO] |
2025-05-04 05:27:44,961 [INFO] note: function defined here
2025-05-04 05:27:44,961 [INFO] --> states/utils.rs:896:26
2025-05-04 05:27:44,961 [INFO] |
2025-05-04 05:27:44,962 [INFO] 896  | pub unsafe extern "C" fn node_alloc(mut type_0: NodeType) -> *mut Node {
2025-05-04 05:27:44,962 [INFO] |                          ^^^^^^^^^^ --------------------
2025-05-04 05:27:44,962 [INFO] 
2025-05-04 05:27:44,974 [INFO] error[E0308]: mismatched types
2025-05-04 05:27:44,974 [INFO] --> states/utils.rs:1995:40
2025-05-04 05:27:44,974 [INFO] |
2025-05-04 05:27:44,976 [INFO] 1995 |             n = calculate_binary(l, r, (*expr).type_0 as u32, (*expr).linenum);
2025-05-04 05:27:44,977 [INFO] |                 ----------------       ^^^^^^^^^^^^^^^^^^^^^ expected enum `utils::ExprType`, found `u32`
2025-05-04 05:27:44,977 [INFO] |                 |
2025-05-04 05:27:44,977 [INFO] |                 arguments to this function are incorrect
2025-05-04 05:27:44,978 [INFO] |
2025-05-04 05:27:44,978 [INFO] note: function defined here
2025-05-04 05:27:44,978 [INFO] --> states/utils.rs:1409:22
2025-05-04 05:27:44,978 [INFO] |
2025-05-04 05:27:44,979 [INFO] 1409 | unsafe extern "C" fn calculate_binary(
2025-05-04 05:27:44,979 [INFO] |                      ^^^^^^^^^^^^^^^^
2025-05-04 05:27:44,979 [INFO] 1410 |     mut l: *mut Node,
2025-05-04 05:27:44,980 [INFO] |     ----------------
2025-05-04 05:27:44,980 [INFO] 1411 |     mut r: *mut Node,
2025-05-04 05:27:44,980 [INFO] |     ----------------
2025-05-04 05:27:44,980 [INFO] 1412 |     mut type_0: ExprType,
2025-05-04 05:27:44,980 [INFO] |     --------------------
2025-05-04 05:27:44,980 [INFO] 1413 |     mut linenum_0: u32,
2025-05-04 05:27:44,980 [INFO] |     ------------------
2025-05-04 05:27:44,981 [INFO] 
2025-05-04 05:27:44,983 [INFO] For more information about this error, try `rustc --explain E0308`.
2025-05-04 05:27:44,995 [INFO] warning: `c2rust_out` (lib) generated 33 warnings
2025-05-04 05:27:44,995 [INFO] error: could not compile `c2rust_out` due to 48 previous errors; 33 warnings emitted
2025-05-04 05:27:44,995 [ERROR] cargo build failed with code 101
