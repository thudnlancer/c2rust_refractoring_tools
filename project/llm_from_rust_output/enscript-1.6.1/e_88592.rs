#[derive(Copy, Clone)]
pub struct EncodingTable {
    pub code: i32,
    pub character: Option<&'static str>,
}

pub type AFMEncodingTable = EncodingTable;

pub const AFM_88592_ENCODING: [AFMEncodingTable; 257] = [
    EncodingTable { code: 0, character: None },
    EncodingTable { code: 0x1, character: None },
    EncodingTable { code: 0x2, character: None },
    EncodingTable { code: 0x3, character: None },
    EncodingTable { code: 0x4, character: None },
    EncodingTable { code: 0x5, character: None },
    EncodingTable { code: 0x6, character: None },
    EncodingTable { code: 0x7, character: None },
    EncodingTable { code: 0x8, character: None },
    EncodingTable { code: 0x9, character: None },
    EncodingTable { code: 0xa, character: None },
    EncodingTable { code: 0xb, character: None },
    EncodingTable { code: 0xc, character: None },
    EncodingTable { code: 0xd, character: None },
    EncodingTable { code: 0xe, character: None },
    EncodingTable { code: 0xf, character: None },
    EncodingTable { code: 0x10, character: None },
    EncodingTable { code: 0x11, character: None },
    EncodingTable { code: 0x12, character: None },
    EncodingTable { code: 0x13, character: None },
    EncodingTable { code: 0x14, character: None },
    EncodingTable { code: 0x15, character: None },
    EncodingTable { code: 0x16, character: None },
    EncodingTable { code: 0x17, character: None },
    EncodingTable { code: 0x18, character: None },
    EncodingTable { code: 0x19, character: None },
    EncodingTable { code: 0x1a, character: None },
    EncodingTable { code: 0x1b, character: None },
    EncodingTable { code: 0x1c, character: None },
    EncodingTable { code: 0x1d, character: None },
    EncodingTable { code: 0x1e, character: None },
    EncodingTable { code: 0x1f, character: None },
    EncodingTable { code: 0x20, character: Some("space") },
    EncodingTable { code: 0x21, character: Some("exclam") },
    EncodingTable { code: 0x22, character: Some("quotedbl") },
    EncodingTable { code: 0x23, character: Some("numbersign") },
    EncodingTable { code: 0x24, character: Some("dollar") },
    EncodingTable { code: 0x25, character: Some("percent") },
    EncodingTable { code: 0x26, character: Some("ampersand") },
    EncodingTable { code: 0x27, character: Some("quoteright") },
    EncodingTable { code: 0x28, character: Some("parenleft") },
    EncodingTable { code: 0x29, character: Some("parenright") },
    EncodingTable { code: 0x2a, character: Some("asterisk") },
    EncodingTable { code: 0x2b, character: Some("plus") },
    EncodingTable { code: 0x2c, character: Some("comma") },
    EncodingTable { code: 0x2d, character: Some("hyphen") },
    EncodingTable { code: 0x2e, character: Some("period") },
    EncodingTable { code: 0x2f, character: Some("slash") },
    EncodingTable { code: 0x30, character: Some("zero") },
    EncodingTable { code: 0x31, character: Some("one") },
    EncodingTable { code: 0x32, character: Some("two") },
    EncodingTable { code: 0x33, character: Some("three") },
    EncodingTable { code: 0x34, character: Some("four") },
    EncodingTable { code: 0x35, character: Some("five") },
    EncodingTable { code: 0x36, character: Some("six") },
    EncodingTable { code: 0x37, character: Some("seven") },
    EncodingTable { code: 0x38, character: Some("eight") },
    EncodingTable { code: 0x39, character: Some("nine") },
    EncodingTable { code: 0x3a, character: Some("colon") },
    EncodingTable { code: 0x3b, character: Some("semicolon") },
    EncodingTable { code: 0x3c, character: Some("less") },
    EncodingTable { code: 0x3d, character: Some("equal") },
    EncodingTable { code: 0x3e, character: Some("greater") },
    EncodingTable { code: 0x3f, character: Some("question") },
    EncodingTable { code: 0x40, character: Some("at") },
    EncodingTable { code: 0x41, character: Some("A") },
    EncodingTable { code: 0x42, character: Some("B") },
    EncodingTable { code: 0x43, character: Some("C") },
    EncodingTable { code: 0x44, character: Some("D") },
    EncodingTable { code: 0x45, character: Some("E") },
    EncodingTable { code: 0x46, character: Some("F") },
    EncodingTable { code: 0x47, character: Some("G") },
    EncodingTable { code: 0x48, character: Some("H") },
    EncodingTable { code: 0x49, character: Some("I") },
    EncodingTable { code: 0x4a, character: Some("J") },
    EncodingTable { code: 0x4b, character: Some("K") },
    EncodingTable { code: 0x4c, character: Some("L") },
    EncodingTable { code: 0x4d, character: Some("M") },
    EncodingTable { code: 0x4e, character: Some("N") },
    EncodingTable { code: 0x4f, character: Some("O") },
    EncodingTable { code: 0x50, character: Some("P") },
    EncodingTable { code: 0x51, character: Some("Q") },
    EncodingTable { code: 0x52, character: Some("R") },
    EncodingTable { code: 0x53, character: Some("S") },
    EncodingTable { code: 0x54, character: Some("T") },
    EncodingTable { code: 0x55, character: Some("U") },
    EncodingTable { code: 0x56, character: Some("V") },
    EncodingTable { code: 0x57, character: Some("W") },
    EncodingTable { code: 0x58, character: Some("X") },
    EncodingTable { code: 0x59, character: Some("Y") },
    EncodingTable { code: 0x5a, character: Some("Z") },
    EncodingTable { code: 0x5b, character: Some("bracketleft") },
    EncodingTable { code: 0x5c, character: Some("backslash") },
    EncodingTable { code: 0x5d, character: Some("bracketright") },
    EncodingTable { code: 0x5e, character: Some("asciicircum") },
    EncodingTable { code: 0x5f, character: Some("underscore") },
    EncodingTable { code: 0x60, character: Some("quoteleft") },
    EncodingTable { code: 0x61, character: Some("a") },
    EncodingTable { code: 0x62, character: Some("b") },
    EncodingTable { code: 0x63, character: Some("c") },
    EncodingTable { code: 0x64, character: Some("d") },
    EncodingTable { code: 0x65, character: Some("e") },
    EncodingTable { code: 0x66, character: Some("f") },
    EncodingTable { code: 0x67, character: Some("g") },
    EncodingTable { code: 0x68, character: Some("h") },
    EncodingTable { code: 0x69, character: Some("i") },
    EncodingTable { code: 0x6a, character: Some("j") },
    EncodingTable { code: 0x6b, character: Some("k") },
    EncodingTable { code: 0x6c, character: Some("l") },
    EncodingTable { code: 0x6d, character: Some("m") },
    EncodingTable { code: 0x6e, character: Some("n") },
    EncodingTable { code: 0x6f, character: Some("o") },
    EncodingTable { code: 0x70, character: Some("p") },
    EncodingTable { code: 0x71, character: Some("q") },
    EncodingTable { code: 0x72, character: Some("r") },
    EncodingTable { code: 0x73, character: Some("s") },
    EncodingTable { code: 0x74, character: Some("t") },
    EncodingTable { code: 0x75, character: Some("u") },
    EncodingTable { code: 0x76, character: Some("v") },
    EncodingTable { code: 0x77, character: Some("w") },
    EncodingTable { code: 0x78, character: Some("x") },
    EncodingTable { code: 0x79, character: Some("y") },
    EncodingTable { code: 0x7a, character: Some("z") },
    EncodingTable { code: 0x7b, character: Some("braceleft") },
    EncodingTable { code: 0x7c, character: Some("bar") },
    EncodingTable { code: 0x7d, character: Some("braceright") },
    EncodingTable { code: 0x7e, character: Some("tilde") },
    EncodingTable { code: 0x7f, character: None },
    EncodingTable { code: 0x80, character: None },
    EncodingTable { code: 0x81, character: None },
    EncodingTable { code: 0x82, character: None },
    EncodingTable { code: 0x83, character: None },
    EncodingTable { code: 0x84, character: None },
    EncodingTable { code: 0x85, character: None },
    EncodingTable { code: 0x86, character: None },
    EncodingTable { code: 0x87, character: None },
    EncodingTable { code: 0x88, character: None },
    EncodingTable { code: 0x89, character: None },
    EncodingTable { code: 0x8a, character: None },
    EncodingTable { code: 0x8b, character: None },
    EncodingTable { code: 0x8c, character: None },
    EncodingTable { code: 0x8d, character: None },
    EncodingTable { code: 0x8e, character: None },
    EncodingTable { code: 0x8f, character: None },
    EncodingTable { code: 0x90, character: None },
    EncodingTable { code: 0x91, character: None },
    EncodingTable { code: 0x92, character: None },
    EncodingTable { code: 0x93, character: None },
    EncodingTable { code: 0x94, character: None },
    EncodingTable { code: 0x95, character: None },
    EncodingTable { code: 0x96, character: None },
    EncodingTable { code: 0x97, character: None },
    EncodingTable { code: 0x98, character: None },
    EncodingTable { code: 0x99, character: None },
    EncodingTable { code: 0x9a, character: None },
    EncodingTable { code: 0x9b, character: None },
    EncodingTable { code: 0x9c, character: None },
    EncodingTable { code: 0x9d, character: None },
    EncodingTable { code: 0x9e, character: None },
    EncodingTable { code: 0x9f, character: None },
    EncodingTable { code: 0xa0, character: Some("space") },
    EncodingTable { code: 0xa1, character: Some("Aogonek") },
    EncodingTable { code: 0xa2, character: Some("breve") },
    EncodingTable { code: 0xa3, character: Some("Lslash") },
    EncodingTable { code: 0xa4, character: Some("currency") },
    EncodingTable { code: 0xa5, character: Some("Lcaron") },
    EncodingTable { code: 0xa6, character: Some("Sacute") },
    EncodingTable { code: 0xa7, character: Some("section") },
    EncodingTable { code: 0xa8, character: Some("dieresis") },
    EncodingTable { code: 0xa9, character: Some("Scaron") },
    EncodingTable { code: 0xaa, character: Some("Scedilla") },
    EncodingTable { code: 0xab, character: Some("Tcaron") },
    EncodingTable { code: 0xac, character: Some("Zacute") },
    EncodingTable { code: 0xad, character: Some("hyphen") },
    EncodingTable { code: 0xae, character: Some("Zcaron") },
    EncodingTable { code: 0xaf, character: Some("Zdotaccent") },
    EncodingTable { code: 0xb0, character: Some("degree") },
    EncodingTable { code: 0xb1, character: Some("aogonek") },
    EncodingTable { code: 0xb2, character: Some("ogonek") },
    EncodingTable { code: 0xb3, character: Some("lslash") },
    EncodingTable { code: 0xb4, character: Some("acute") },
    EncodingTable { code: 0xb5, character: Some("lcaron") },
    EncodingTable { code: 0xb6, character: Some("sacute") },
    EncodingTable { code: 0xb7, character: Some("caron") },
    EncodingTable { code: 0xb8, character: Some("cedilla") },
    EncodingTable { code: 0xb9, character: Some("scaron") },
    EncodingTable { code: 0xba, character: Some("scedilla") },
    EncodingTable { code: 0xbb, character: Some("tcaron") },
    EncodingTable { code: 0xbc, character: Some("zacute") },
    EncodingTable { code: 0xbd, character: Some("hungarumlaut") },
    EncodingTable { code: 0xbe, character: Some("zcaron") },
    EncodingTable { code: 0xbf, character: Some("zdotaccent") },
    EncodingTable { code: 0xc0, character: Some("Racute") },
    EncodingTable { code: 0xc1, character: Some("Aacute") },
    EncodingTable { code: 0xc2, character: Some("Acircumflex") },
    EncodingTable { code: 0xc3, character: Some("Abreve") },
    EncodingTable { code: 0xc4, character: Some("Adieresis") },
    EncodingTable { code: 0xc5, character: Some("Lacute") },
    EncodingTable { code: 0xc6, character: Some("Cacute") },
    EncodingTable { code: 0xc7, character: Some("Ccedilla") },
    EncodingTable { code: 0xc8, character: Some("Ccaron") },
    EncodingTable { code: 0xc9, character: Some("Eacute") },
    EncodingTable { code: 0xca, character: Some("Eogonek") },
    EncodingTable { code: 0xcb, character: Some("Edieresis") },
    EncodingTable { code: 0xcc, character: Some("Ecaron") },
    EncodingTable { code: 0xcd, character: Some("Iacute") },
    EncodingTable { code: 0xce, character: Some("Icircumflex") },
    EncodingTable { code: 0xcf, character: Some("Dcaron") },
    EncodingTable { code: 0xd0, character: Some("Eth") },
    EncodingTable { code: 0xd1, character: Some("Nacute") },
    EncodingTable { code: 0xd2, character: Some("Ncaron") },
    EncodingTable { code: 0xd3, character: Some("Oacute") },
    EncodingTable { code: 0xd4, character: Some("Ocircumflex") },
    EncodingTable { code: 0xd5, character: Some("Ohungarumlaut") },
    EncodingTable { code: 0xd6, character: Some("Odieresis") },
    EncodingTable { code: 0xd7, character: Some("multiply") },
    EncodingTable { code: 0xd8, character: Some("Rcaron") },
    EncodingTable { code: 0xd9, character: Some("Uring") },
    EncodingTable { code: 0xda, character: Some("Uacute") },
    EncodingTable { code: 0xdb, character: Some("Uhungarumlaut") },
    EncodingTable { code: 0xdc, character: Some("Udieresis") },
    EncodingTable { code: 0xdd, character: Some("Yacute") },
    EncodingTable { code: 0xde, character: Some("Tcedilla") },
    EncodingTable { code: 0xdf, character: Some("germandbls") },
    EncodingTable { code: 0xe0, character: Some("rac