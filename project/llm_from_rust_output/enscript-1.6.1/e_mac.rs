#[derive(Copy, Clone)]
pub struct EncodingTable {
    pub code: i32,
    pub character: &'static str,
}

pub type AFMEncodingTable = EncodingTable;

pub const AFM_MAC_ENCODING: [AFMEncodingTable; 257] = [
    EncodingTable { code: 0x00, character: "" },
    EncodingTable { code: 0x01, character: "" },
    EncodingTable { code: 0x02, character: "" },
    EncodingTable { code: 0x03, character: "" },
    EncodingTable { code: 0x04, character: "" },
    EncodingTable { code: 0x05, character: "" },
    EncodingTable { code: 0x06, character: "" },
    EncodingTable { code: 0x07, character: "" },
    EncodingTable { code: 0x08, character: "" },
    EncodingTable { code: 0x09, character: "" },
    EncodingTable { code: 0x0A, character: "" },
    EncodingTable { code: 0x0B, character: "" },
    EncodingTable { code: 0x0C, character: "" },
    EncodingTable { code: 0x0D, character: "" },
    EncodingTable { code: 0x0E, character: "" },
    EncodingTable { code: 0x0F, character: "" },
    EncodingTable { code: 0x10, character: "" },
    EncodingTable { code: 0x11, character: "" },
    EncodingTable { code: 0x12, character: "" },
    EncodingTable { code: 0x13, character: "" },
    EncodingTable { code: 0x14, character: "" },
    EncodingTable { code: 0x15, character: "" },
    EncodingTable { code: 0x16, character: "" },
    EncodingTable { code: 0x17, character: "" },
    EncodingTable { code: 0x18, character: "" },
    EncodingTable { code: 0x19, character: "" },
    EncodingTable { code: 0x1A, character: "" },
    EncodingTable { code: 0x1B, character: "" },
    EncodingTable { code: 0x1C, character: "" },
    EncodingTable { code: 0x1D, character: "" },
    EncodingTable { code: 0x1E, character: "" },
    EncodingTable { code: 0x1F, character: "" },
    EncodingTable { code: 0x20, character: "space" },
    EncodingTable { code: 0x21, character: "exclam" },
    EncodingTable { code: 0x22, character: "quotedbl" },
    EncodingTable { code: 0x23, character: "numbersign" },
    EncodingTable { code: 0x24, character: "dollar" },
    EncodingTable { code: 0x25, character: "percent" },
    EncodingTable { code: 0x26, character: "ampersand" },
    EncodingTable { code: 0x27, character: "quoteright" },
    EncodingTable { code: 0x28, character: "parenleft" },
    EncodingTable { code: 0x29, character: "parenright" },
    EncodingTable { code: 0x2A, character: "asterisk" },
    EncodingTable { code: 0x2B, character: "plus" },
    EncodingTable { code: 0x2C, character: "comma" },
    EncodingTable { code: 0x2D, character: "hyphen" },
    EncodingTable { code: 0x2E, character: "period" },
    EncodingTable { code: 0x2F, character: "slash" },
    EncodingTable { code: 0x30, character: "zero" },
    EncodingTable { code: 0x31, character: "one" },
    EncodingTable { code: 0x32, character: "two" },
    EncodingTable { code: 0x33, character: "three" },
    EncodingTable { code: 0x34, character: "four" },
    EncodingTable { code: 0x35, character: "five" },
    EncodingTable { code: 0x36, character: "six" },
    EncodingTable { code: 0x37, character: "seven" },
    EncodingTable { code: 0x38, character: "eight" },
    EncodingTable { code: 0x39, character: "nine" },
    EncodingTable { code: 0x3A, character: "colon" },
    EncodingTable { code: 0x3B, character: "semicolon" },
    EncodingTable { code: 0x3C, character: "less" },
    EncodingTable { code: 0x3D, character: "equal" },
    EncodingTable { code: 0x3E, character: "greater" },
    EncodingTable { code: 0x3F, character: "question" },
    EncodingTable { code: 0x40, character: "at" },
    EncodingTable { code: 0x41, character: "A" },
    EncodingTable { code: 0x42, character: "B" },
    EncodingTable { code: 0x43, character: "C" },
    EncodingTable { code: 0x44, character: "D" },
    EncodingTable { code: 0x45, character: "E" },
    EncodingTable { code: 0x46, character: "F" },
    EncodingTable { code: 0x47, character: "G" },
    EncodingTable { code: 0x48, character: "H" },
    EncodingTable { code: 0x49, character: "I" },
    EncodingTable { code: 0x4A, character: "J" },
    EncodingTable { code: 0x4B, character: "K" },
    EncodingTable { code: 0x4C, character: "L" },
    EncodingTable { code: 0x4D, character: "M" },
    EncodingTable { code: 0x4E, character: "N" },
    EncodingTable { code: 0x4F, character: "O" },
    EncodingTable { code: 0x50, character: "P" },
    EncodingTable { code: 0x51, character: "Q" },
    EncodingTable { code: 0x52, character: "R" },
    EncodingTable { code: 0x53, character: "S" },
    EncodingTable { code: 0x54, character: "T" },
    EncodingTable { code: 0x55, character: "U" },
    EncodingTable { code: 0x56, character: "V" },
    EncodingTable { code: 0x57, character: "W" },
    EncodingTable { code: 0x58, character: "X" },
    EncodingTable { code: 0x59, character: "Y" },
    EncodingTable { code: 0x5A, character: "Z" },
    EncodingTable { code: 0x5B, character: "bracketleft" },
    EncodingTable { code: 0x5C, character: "backslash" },
    EncodingTable { code: 0x5D, character: "bracketright" },
    EncodingTable { code: 0x5E, character: "asciicircum" },
    EncodingTable { code: 0x5F, character: "underscore" },
    EncodingTable { code: 0x60, character: "quoteleft" },
    EncodingTable { code: 0x61, character: "a" },
    EncodingTable { code: 0x62, character: "b" },
    EncodingTable { code: 0x63, character: "c" },
    EncodingTable { code: 0x64, character: "d" },
    EncodingTable { code: 0x65, character: "e" },
    EncodingTable { code: 0x66, character: "f" },
    EncodingTable { code: 0x67, character: "g" },
    EncodingTable { code: 0x68, character: "h" },
    EncodingTable { code: 0x69, character: "i" },
    EncodingTable { code: 0x6A, character: "j" },
    EncodingTable { code: 0x6B, character: "k" },
    EncodingTable { code: 0x6C, character: "l" },
    EncodingTable { code: 0x6D, character: "m" },
    EncodingTable { code: 0x6E, character: "n" },
    EncodingTable { code: 0x6F, character: "o" },
    EncodingTable { code: 0x70, character: "p" },
    EncodingTable { code: 0x71, character: "q" },
    EncodingTable { code: 0x72, character: "r" },
    EncodingTable { code: 0x73, character: "s" },
    EncodingTable { code: 0x74, character: "t" },
    EncodingTable { code: 0x75, character: "u" },
    EncodingTable { code: 0x76, character: "v" },
    EncodingTable { code: 0x77, character: "w" },
    EncodingTable { code: 0x78, character: "x" },
    EncodingTable { code: 0x79, character: "y" },
    EncodingTable { code: 0x7A, character: "z" },
    EncodingTable { code: 0x7B, character: "braceleft" },
    EncodingTable { code: 0x7C, character: "bar" },
    EncodingTable { code: 0x7D, character: "braceright" },
    EncodingTable { code: 0x7E, character: "tilde" },
    EncodingTable { code: 0x7F, character: "" },
    EncodingTable { code: 0x80, character: "Adieresis" },
    EncodingTable { code: 0x81, character: "Aring" },
    EncodingTable { code: 0x82, character: "Ccedilla" },
    EncodingTable { code: 0x83, character: "Eacute" },
    EncodingTable { code: 0x84, character: "Ntilde" },
    EncodingTable { code: 0x85, character: "Odieresis" },
    EncodingTable { code: 0x86, character: "Udieresis" },
    EncodingTable { code: 0x87, character: "aacute" },
    EncodingTable { code: 0x88, character: "agrave" },
    EncodingTable { code: 0x89, character: "acircumflex" },
    EncodingTable { code: 0x8A, character: "adieresis" },
    EncodingTable { code: 0x8B, character: "atilde" },
    EncodingTable { code: 0x8C, character: "aring" },
    EncodingTable { code: 0x8D, character: "ccedilla" },
    EncodingTable { code: 0x8E, character: "eacute" },
    EncodingTable { code: 0x8F, character: "egrave" },
    EncodingTable { code: 0x90, character: "ecircumflex" },
    EncodingTable { code: 0x91, character: "edieresis" },
    EncodingTable { code: 0x92, character: "iacute" },
    EncodingTable { code: 0x93, character: "igrave" },
    EncodingTable { code: 0x94, character: "icircumflex" },
    EncodingTable { code: 0x95, character: "idieresis" },
    EncodingTable { code: 0x96, character: "ntilde" },
    EncodingTable { code: 0x97, character: "oacute" },
    EncodingTable { code: 0x98, character: "ograve" },
    EncodingTable { code: 0x99, character: "ocircumflex" },
    EncodingTable { code: 0x9A, character: "odieresis" },
    EncodingTable { code: 0x9B, character: "otilde" },
    EncodingTable { code: 0x9C, character: "uacute" },
    EncodingTable { code: 0x9D, character: "ugrave" },
    EncodingTable { code: 0x9E, character: "ucircumflex" },
    EncodingTable { code: 0x9F, character: "udieresis" },
    EncodingTable { code: 0xA0, character: "dagger" },
    EncodingTable { code: 0xA1, character: "degree" },
    EncodingTable { code: 0xA2, character: "cent" },
    EncodingTable { code: 0xA3, character: "sterling" },
    EncodingTable { code: 0xA4, character: "section" },
    EncodingTable { code: 0xA5, character: "bullet" },
    EncodingTable { code: 0xA6, character: "paragraph" },
    EncodingTable { code: 0xA7, character: "germandbls" },
    EncodingTable { code: 0xA8, character: "registered" },
    EncodingTable { code: 0xA9, character: "copyright" },
    EncodingTable { code: 0xAA, character: "trademark" },
    EncodingTable { code: 0xAB, character: "acute" },
    EncodingTable { code: 0xAC, character: "dieresis" },
    EncodingTable { code: 0xAD, character: "notequal" },
    EncodingTable { code: 0xAE, character: "AE" },
    EncodingTable { code: 0xAF, character: "Oslash" },
    EncodingTable { code: 0xB0, character: "infinity" },
    EncodingTable { code: 0xB1, character: "plusminus" },
    EncodingTable { code: 0xB2, character: "lessequal" },
    EncodingTable { code: 0xB3, character: "greaterequal" },
    EncodingTable { code: 0xB4, character: "yen" },
    EncodingTable { code: 0xB5, character: "mu" },
    EncodingTable { code: 0xB6, character: "partialdiff" },
    EncodingTable { code: 0xB7, character: "Sigma" },
    EncodingTable { code: 0xB8, character: "product" },
    EncodingTable { code: 0xB9, character: "pi" },
    EncodingTable { code: 0xBA, character: "integral" },
    EncodingTable { code: 0xBB, character: "ordfeminine" },
    EncodingTable { code: 0xBC, character: "ordmasculine" },
    EncodingTable { code: 0xBD, character: "Omega" },
    EncodingTable { code: 0xBE, character: "ae" },
    EncodingTable { code: 0xBF, character: "oslash" },
    EncodingTable { code: 0xC0, character: "questiondown" },
    EncodingTable { code: 0xC1, character: "exclamdown" },
    EncodingTable { code: 0xC2, character: "logicalnot" },
    EncodingTable { code: 0xC3, character: "radical" },
    EncodingTable { code: 0xC4, character: "florin" },
    EncodingTable { code: 0xC5, character: "approxequal" },
    EncodingTable { code: 0xC6, character: "Delta" },
    EncodingTable { code: 0xC7, character: "guillemotleft" },
    EncodingTable { code: 0xC8, character: "guillemotright" },
    EncodingTable { code: 0xC9, character: "ellipsis" },
    EncodingTable { code: 0xCA, character: "space" },
    EncodingTable { code: 0xCB, character: "Agrave" },
    EncodingTable { code: 0xCC, character: "Atilde" },
    EncodingTable { code: 0xCD, character: "Otilde" },
    EncodingTable { code: 0xCE, character: "OE" },
    EncodingTable { code: 0xCF, character: "oe" },
    EncodingTable { code: 0xD0, character: "endash" },
    EncodingTable { code: 0xD1, character: "emdash" },
    EncodingTable { code: 0xD2, character: "quotedblleft" },
    EncodingTable { code: 0xD3, character: "quotedblright" },
    EncodingTable { code: 0xD4, character: "quoteleft" },
    EncodingTable { code: 0xD5, character: "quoteright" },
    EncodingTable { code: 0xD6, character: "divide" },
    EncodingTable { code: 0xD7, character: "lozenge" },
    EncodingTable { code: 0xD8, character: "ydieresis" },
    EncodingTable { code: 0xD9, character: "Ydieresis" },
    EncodingTable { code: 0xDA, character: "fraction" },
    EncodingTable { code: 0xDB, character: "currency" },
    EncodingTable { code: 0xDC, character: "guilsinglleft" },
    EncodingTable { code: 0xDD, character: "guilsinglright" },
    EncodingTable { code: 0xDE, character: "fi" },
    EncodingTable { code: 0xDF, character: "fl" },
    EncodingTable { code: 0xE0, character: "daggerdbl" },
    EncodingTable { code: 0xE1, character: "periodcentered" },
    EncodingTable { code: 0xE2, character: "quotesinglbase" },
    EncodingTable { code: 0xE3, character: "quoted