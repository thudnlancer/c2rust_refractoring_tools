use libc::{c_char, c_int, c_uchar, c_void, size_t};
use std::ffi::{CStr, CString};
use std::mem;
use std::os::raw::c_long;
use std::ptr;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct stat {
    pub st_dev: u64,
    pub st_ino: u64,
    pub st_nlink: u64,
    pub st_mode: u32,
    pub st_uid: u32,
    pub st_gid: u32,
    pub __pad0: c_int,
    pub st_rdev: u64,
    pub st_size: i64,
    pub st_blksize: i64,
    pub st_blocks: i64,
    pub st_atim: timespec,
    pub st_mtim: timespec,
    pub st_ctim: timespec,
    pub __glibc_reserved: [i64; 3],
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct timespec {
    pub tv_sec: i64,
    pub tv_nsec: i64,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct url {
    pub url: *mut c_char,
    pub scheme: url_scheme,
    pub host: *mut c_char,
    pub port: c_int,
    pub path: *mut c_char,
    pub params: *mut c_char,
    pub query: *mut c_char,
    pub fragment: *mut c_char,
    pub dir: *mut c_char,
    pub file: *mut c_char,
    pub user: *mut c_char,
    pub passwd: *mut c_char,
}

#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub enum url_scheme {
    SCHEME_HTTP = 0,
    SCHEME_HTTPS = 1,
    SCHEME_FTP = 2,
    SCHEME_FTPS = 3,
    SCHEME_INVALID = 4,
}

#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub enum url_auth_mode {
    URL_AUTH_SHOW = 0,
    URL_AUTH_HIDE_PASSWD = 1,
    URL_AUTH_HIDE = 2,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct scheme_data {
    pub name: *const c_char,
    pub leading_string: *const c_char,
    pub default_port: c_int,
    pub flags: c_int,
}

const SCM_HAS_PARAMS: c_int = 2;
const SCM_HAS_QUERY: c_int = 4;
const SCM_HAS_FRAGMENT: c_int = 8;
const SCM_DISABLED: c_int = 1;

const URLCHR_UNSAFE: u8 = 2;
const URLCHR_RESERVED: u8 = 1;

static SUPPORTED_SCHEMES: [scheme_data; 5] = [
    scheme_data {
        name: b"http\0".as_ptr() as *const c_char,
        leading_string: b"http://\0".as_ptr() as *const c_char,
        default_port: 80,
        flags: SCM_HAS_QUERY | SCM_HAS_FRAGMENT,
    },
    scheme_data {
        name: b"https\0".as_ptr() as *const c_char,
        leading_string: b"https://\0".as_ptr() as *const c_char,
        default_port: 443,
        flags: SCM_HAS_QUERY | SCM_HAS_FRAGMENT,
    },
    scheme_data {
        name: b"ftp\0".as_ptr() as *const c_char,
        leading_string: b"ftp://\0".as_ptr() as *const c_char,
        default_port: 21,
        flags: SCM_HAS_PARAMS | SCM_HAS_FRAGMENT,
    },
    scheme_data {
        name: b"ftps\0".as_ptr() as *const c_char,
        leading_string: b"ftps://\0".as_ptr() as *const c_char,
        default_port: 21,
        flags: SCM_HAS_PARAMS | SCM_HAS_FRAGMENT,
    },
    scheme_data {
        name: ptr::null(),
        leading_string: ptr::null(),
        default_port: -1,
        flags: 0,
    },
];

static URLCHR_TABLE: [u8; 256] = [
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, 
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    0, URLCHR_UNSAFE, URLCHR_UNSAFE | URLCHR_RESERVED, URLCHR_RESERVED,
    URLCHR_UNSAFE, URLCHR_RESERVED, 0, 0, 0, 0, URLCHR_RESERVED, 
    URLCHR_RESERVED, 0, 0, URLCHR_RESERVED, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, URLCHR_RESERVED | URLCHR_UNSAFE, URLCHR_RESERVED, 
    URLCHR_UNSAFE, URLCHR_RESERVED, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    URLCHR_RESERVED | URLCHR_UNSAFE, URLCHR_UNSAFE, 
    URLCHR_RESERVED | URLCHR_UNSAFE, URLCHR_UNSAFE, 0, URLCHR_UNSAFE,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    0, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE, URLCHR_UNSAFE,
    URLCHR_UNSAFE, URLCHR_UNSA