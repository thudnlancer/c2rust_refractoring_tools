use std::mem;

type uint8_t = u8;
type uint32_t = u32;
type size_t = usize;

#[derive(Clone, Copy)]
#[repr(C)]
pub struct des_ctx {
    pub key: [uint32_t; 32],
}

const DES_BLOCK_SIZE: usize = 8;

const DES_KEYMAP: [uint32_t; 512] = [
    0x2080008, 0x2082000, 0x2008, 0, 0x2002000, 0x80008, 0x2080000, 0x2082008,
    0x8, 0x2000000, 0x82000, 0x2008, 0x82008, 0x2002008, 0x2000008, 0x2080000,
    0x2000, 0x82008, 0x80008, 0x2002000, 0x2082008, 0x2000008, 0, 0x82000,
    0x2000000, 0x80000, 0x2002008, 0x2080008, 0x80000, 0x2000, 0x2082000, 0x8,
    0x80000, 0x2000, 0x2000008, 0x2082008, 0x2008, 0x2000000, 0, 0x82000,
    0x2080008, 0x2002008, 0x2002000, 0x80008, 0x2082000, 0x8, 0x80008, 0x2002000,
    0x2082008, 0x80000, 0x2080000, 0x2000008, 0x82000, 0x2008, 0x2002008, 0x2080000,
    0x8, 0x2082000, 0x82008, 0, 0x2000000, 0x2080008, 0x2000, 0x82008,
    0x8000004, 0x20004, 0, 0x8020200, 0x20004, 0x200, 0x8000204, 0x20000,
    0x204, 0x8020204, 0x20200, 0x8000000, 0x8000200, 0x8000004, 0x8020000, 0x20204,
    0x20000, 0x8000204, 0x8020004, 0, 0x200, 0x4, 0x8020200, 0x8020004,
    0x8020204, 0x8020000, 0x8000000, 0x204, 0x4, 0x20200, 0x20204, 0x8000200,
    0x204, 0x8000000, 0x8000200, 0x20204, 0x8020200, 0x20004, 0, 0x8000200,
    0x8000000, 0x200, 0x8020004, 0x20000, 0x20004, 0x8020204, 0x20200, 0x4,
    0x8020204, 0x20200, 0x20000, 0x8000204, 0x8000004, 0x8020000, 0x20204, 0,
    0x200, 0x8000004, 0x8000204, 0x8020200, 0x8020000, 0x204, 0x4, 0x8020004,
    0x80040100, 0x1000100, 0x80000000, 0x81040100, 0, 0x1040000, 0x81000100, 0x80040000,
    0x1040100, 0x81000000, 0x1000000, 0x80000100, 0x81000000, 0x80040100, 0x40000, 0x1000000,
    0x81040000, 0x40100, 0x100, 0x80000000, 0x40100, 0x81000100, 0x1040000, 0x100,
    0x80000100, 0, 0x80040000, 0x1040100, 0x1000100, 0x81040000, 0x81040100, 0x40000,
    0x81040000, 0x80000100, 0x40000, 0x81000000, 0x40100, 0x1000100, 0x80000000, 0x1040000,
    0x81000100, 0, 0x100, 0x80040000, 0, 0x81040000, 0x1040100, 0x100,
    0x1000000, 0x81040100, 0x80040100, 0x40000, 0x81040100, 0x80000000, 0x1000100, 0x80040100,
    0x80040000, 0x40100, 0x1040000, 0x81000100, 0x80000100, 0x1000000, 0x81000000, 0x1040100,
    0x4010801, 0, 0x10800, 0x4010000, 0x4000001, 0x801, 0x4000800, 0x10800,
    0x800, 0x4010001, 0x1, 0x4000800, 0x10001, 0x4010800, 0x4010000, 0x1,
    0x10000, 0x4000801, 0x4010001, 0x800, 0x10801, 0x4000000, 0, 0x10001,
    0x4000801, 0x10801, 0x4010800, 0x4000001, 0x4000000, 0x10000, 0x801, 0x4010801,
    0x10001, 0x4010800, 0x4000800, 0x10801, 0x4010801, 0x10001, 0x4000001, 0,
    0x4000000, 0x801, 0x10000, 0x4010001, 0x800, 0x4000000, 0x10801, 0x4000801,
    0x4010800, 0x800, 0, 0x4000001, 0x1, 0x4010801, 0x10800, 0x4010000,
    0x4010001, 0x10000, 0x801, 0x4000800, 0x4000801, 0x1, 0x4010000, 0x10800,
    0x400, 0x20, 0x100020, 0x40100000, 0x40100420, 0x40000400, 0x420, 0,
    0x100000, 0x40100020, 0x40000020, 0x100400, 0x40000000, 0x100420, 0x100400, 0x40000020,
    0x40100020, 0x400, 0x40000400, 0x40100420, 0, 0x100020, 0x40100000, 0x420,
    0x40100400, 0x40000420, 0x100420, 0x40000000, 0x40000420, 0x40100400, 0x20, 0x100000,
    0x40000420, 0x100400, 0x40100400, 0x40000020, 0x400, 0x20, 0x100000, 0x40100400,
    0x40100020, 0x40000420, 0x420, 0, 0x20, 0x40100000, 0x40000000, 0x100020,
    0, 0x40100020, 0x100020, 0x420, 0x40000020, 0x400, 0x40100420, 0x100000,
    0x100420, 0x40000000, 0x40000400, 0x40100420, 0x40100000, 0x100420, 0x100400, 0x40000400,
    0x800000, 0x1000, 0x40, 0x801042, 0x801002, 0x800040, 0x1042, 0x801000,
    0x1000, 0x2, 0x800002, 0x1040, 0x800042, 0x801002, 0x801040, 0,
    0x1040, 0x800000, 0x1002, 0x42, 0x800040, 0x1042, 0, 0x800002,
    0x2, 0x800042, 0x801042, 0x1002, 0x801000, 0x40, 0x42, 0x801040,
    0x801040, 0x800042, 0x1002, 0x801000, 0x1000, 0x2, 0x800002, 0x800040,
    0x800000, 0x1040, 0x801042, 0, 0x1042, 0x800000, 0x40, 0x1002,
    0x800042, 0x40, 0, 0x801042, 0x801002, 0x801040, 0x42, 0x1000,
    0x1040, 0x801002, 0x800040, 0x42, 0x2, 0x1042, 0x801000, 0x800002,
    0x10400000, 0x404010, 0x10, 0x10400010, 0x10004000, 0x400000, 0x10400010, 0x4010,
    0x400010, 0x4000, 0x404000, 0x10000000, 0x10404010, 0x10000010, 0x10000000, 0x10404000,
    0, 0x10004000, 0x404010, 0x10, 0x10000010, 0x10404010, 0x4000, 0x10400000,
    0x10404000, 0x400010, 0x10004010, 0x404000, 0x4010, 0, 0x400000, 0x10004010,
    0x404010, 0x10, 0x10000000, 0x4000, 0x10000010, 0x10004000, 0x404000, 0x10400010,
    0, 0x404010, 0x4010, 0x10404000, 0x10004000, 0x400000, 0x10404010, 0x10000000,
    0x10004010, 0x10400000, 0x400000, 0x10404010, 0x4000, 0x400010, 0x10400010, 0x4010,
    0x400010, 0, 0x10404000, 0x10000010, 0x10400000, 0x10004010, 0x10, 0x404000,
    0x208080, 0x8000, 0x20200000, 0x20208080, 0x200000, 0x20008080, 0x20008000, 0x20200000,
    0x20008080, 0x208080, 0x208000, 0x20000080, 0x20200080, 0x200000, 0, 0x20008000,
    0x8000, 0x20000000, 0x200080, 0x8080, 0x20208080, 0x208000, 0x20000080, 0x200080,
    0x20000000, 0x80, 0x8080, 0x20208000, 0x80, 0x20200080, 0x20208000, 0,
    0, 0x20208080, 0x200080, 0x20008000, 0x208080, 0x8000, 0x20000080, 0x200080,
    0x20208000, 0x80, 0x8080, 0x20200000, 0x20008080, 0x20000000, 0x20200000, 0x208000,
    0x20208080, 0x8080, 0x208000, 0x20200080, 0x200000, 0x20000080, 0x20008000, 0,
    0x8000, 0x200000, 0x20200080, 0x208080, 0x20000000, 0x20208000, 0x80, 0x20008080,
];

const ROTORS: [uint8_t; 768] = [
    34, 13, 5, 46, 47, 18, 32, 41, 11, 53, 33, 20, 14, 36, 30, 24,
    49, 2, 15, 37, 42, 50, 0, 21, 38, 48, 6, 26, 39, 4, 52, 25,
    12, 27, 31, 40, 1, 17, 28, 29, 23, 51, 35, 7, 3, 22, 9, 43,
    41, 20, 12, 53, 54, 25, 39, 48, 18, 31, 40, 27, 21, 43, 37, 0,
    1, 9, 22, 44, 49, 2, 7, 28, 45, 55, 13, 33, 46, 11, 6, 32,
    19, 34, 38, 47, 8, 24, 35, 36, 30, 3, 42, 14, 10, 29, 16, 50,
    55, 34, 26, 38, 11, 39, 53, 5, 32, 45, 54, 41, 35, 2, 51, 14,
    15, 23, 36, 3, 8, 16, 21, 42, 6, 12, 27, 47, 31, 25, 20, 46,
    33, 48, 52, 4, 22, 7, 49, 50, 44, 17, 1, 28, 24, 43, 30, 9,
    12, 48, 40, 52, 25, 53, 38, 19, 46, 6, 11, 55, 49, 16, 10, 28,
    29, 37, 50, 17, 22, 30, 35, 1, 20, 26, 41, 4, 45, 39, 34, 31,
    47, 5, 13, 18, 36, 21, 8, 9, 3, 0, 15, 42, 7, 2, 44, 23,
    26, 5, 54, 13, 39, 38, 52, 33, 31, 20, 25, 12, 8, 30, 24, 42,
    43, 51, 9, 0, 36, 44, 49, 15, 34, 40, 55, 18, 6, 53, 48, 45,
    4, 19, 27, 32, 50, 35, 22, 23, 17, 14, 29, 1, 21, 16, 3, 37,
    40, 19, 11, 27, 53, 52, 13, 47, 45, 34, 39, 26, 22, 44, 7, 1,
    2, 10, 23, 14, 50, 3, 8, 29, 48, 54, 12, 32, 20, 38, 5, 6,
    18, 33, 41, 46, 9, 49, 36, 37, 0