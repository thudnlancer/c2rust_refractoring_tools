   Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/project/c_prog/mtools-4.0.45)
error: `<` is interpreted as a start of generic arguments for `u64`, not a comparison
  --> buffer.rs:97:56
   |
97 |                 if self.current + self.cur_size as u64 < start {
   |                                                        ^ ------- interpreted as generic arguments
   |                                                        |
   |                                                        not interpreted as comparison
   |
help: try comparing the cast value
   |
97 |                 if self.current + (self.cur_size as u64) < start {
   |                                   +                    +

error: `<` is interpreted as a start of generic arguments for `i32`, not a comparison
  --> dirCache.rs:45:33
   |
45 |         if initial_slots as i32 < 0 {
   |                                 ^ --- interpreted as generic arguments
   |                                 |
   |                                 not interpreted as comparison
   |
help: try comparing the cast value
   |
45 |         if (initial_slots as i32) < 0 {
   |            +                    +

error: `<` is interpreted as a start of generic arguments for `i32`, not a comparison
  --> dirCache.rs:65:24
   |
65 |         if slot as i32 < 0 {
   |                        ^ --- interpreted as generic arguments
   |                        |
   |                        not interpreted as comparison
   |
help: try comparing the cast value
   |
65 |         if (slot as i32) < 0 {
   |            +           +

error: `<` is interpreted as a start of generic arguments for `i32`, not a comparison
   --> dirCache.rs:307:20
    |
307 |     if slot as i32 < 0 {
    |                    ^ --- interpreted as generic arguments
    |                    |
    |                    not interpreted as comparison
    |
help: try comparing the cast value
    |
307 |     if (slot as i32) < 0 {
    |        +           +

error: mismatched closing delimiter: `}`
  --> expand.rs:49:30
   |
47 |             if last > 0 {
   |                         - closing delimiter possibly meant for this
48 |                 ans[last - 1] = b'\0';
49 |                 Cow::Borrowed(std::str::from_utf8(&ans[..last - 1]).unwrap_or("")
   |                              ^ unclosed delimiter
50 |             } else {
   |             ^ mismatched closing delimiter

error: this file contains an unclosed delimiter
   --> fat.rs:445:53
    |
58  | impl Fs {
    |         - unclosed delimiter
...
441 |     fn fat_decode(&mut self, pos: u32) -> u32 {
    |                                               - unclosed delimiter
442 |         match self.fat_bits {
    |                             - unclosed delimiter
...
445 |             32 => self.fat32_decode(pos).unwrap_or(1
    |                                                   - ^
    |                                                   |
    |                                                   unclosed delimiter

error: mismatched closing delimiter: `}`
   --> fat.rs:266:15
    |
265 |         if num & 1 != 0 {
    |                         - closing delimiter possibly meant for this
266 |             Ok(((byte1 as u32) << 4) | (((byte0 as u32) & 0xF0) >> 4)
    |               ^ unclosed delimiter
267 |         } else {
    |         ^ mismatched closing delimiter

error: mismatched closing delimiter: `}`
   --> fat.rs:268:15
    |
267 |         } else {
    |                - closing delimiter possibly meant for this
268 |             Ok((((byte1 as u32) & 0xF) << 8) | (byte0 as u32)
    |               ^ unclosed delimiter
269 |         }
    |         ^ mismatched closing delimiter

error: mismatched closing delimiter: `}`
   --> init.rs:413:17
    |
379 | fn fs_init(drive: char, mode: i32, is_rop: &mut bool) -> Result<Fs, FsError> {
    |                                                                              - closing delimiter possibly meant for this
...
413 |     fs.cp = Some(Arc::new(cp_open(&dev.codepage)?);
    |                 ^ unclosed delimiter
...
416 | }
    | ^ mismatched closing delimiter

error: expected one of `)`, `,`, `.`, `?`, or an operator, found `;`
   --> init.rs:413:17
    |
413 |     fs.cp = Some(Arc::new(cp_open(&dev.codepage)?);
    |                 ^ unclosed delimiter              ^ help: `)` may belong here

error: expected one of `.`, `;`, `?`, `}`, or an operator, found `)`
   --> init.rs:416:1
    |
415 |     Ok(fs)
    |           - expected one of `.`, `;`, `?`, `}`, or an operator
416 | }
    | ^ unexpected token

error: this file contains an unclosed delimiter
   --> mk_direntry.rs:485:14
    |
482 | ) -> i32 {
    |          - unclosed delimiter
...
485 |     mt_mwrite
    |              ^

error[E0583]: file not found for module `llong`
  --> mtools.rs:16:1
   |
16 | mod llong;
   | ^^^^^^^^^^
   |
   = help: to create the module `llong`, create file "mtools/llong.rs" or "mtools/llong/mod.rs"

error[E0583]: file not found for module `stream`
  --> mtools.rs:17:1
   |
17 | mod stream;
   | ^^^^^^^^^^^
   |
   = help: to create the module `stream`, create file "mtools/stream.rs" or "mtools/stream/mod.rs"

error[E0583]: file not found for module `directory`
  --> mtools.rs:18:1
   |
18 | mod directory;
   | ^^^^^^^^^^^^^^
   |
   = help: to create the module `directory`, create file "mtools/directory.rs" or "mtools/directory/mod.rs"

error[E0583]: file not found for module `xdf_io`
 --> open_image.rs:6:1
  |
6 | mod xdf_io;
  | ^^^^^^^^^^^
  |
  = help: to create the module `xdf_io`, create file "open_image/xdf_io.rs" or "open_image/xdf_io/mod.rs"

error[E0583]: file not found for module `sysincludes`
 --> open_image.rs:7:1
  |
7 | mod sysincludes;
  | ^^^^^^^^^^^^^^^^
  |
  = help: to create the module `sysincludes`, create file "open_image/sysincludes.rs" or "open_image/sysincludes/mod.rs"

error[E0583]: file not found for module `mtools`
 --> open_image.rs:8:1
  |
8 | mod mtools;
  | ^^^^^^^^^^^
  |
  = help: to create the module `mtools`, create file "open_image/mtools.rs" or "open_image/mtools/mod.rs"

error[E0583]: file not found for module `lba`
 --> open_image.rs:9:1
  |
9 | mod lba;
  | ^^^^^^^^
  |
  = help: to create the module `lba`, create file "open_image/lba.rs" or "open_image/lba/mod.rs"

error[E0583]: file not found for module `plain_io`
  --> open_image.rs:10:1
   |
10 | mod plain_io;
   | ^^^^^^^^^^^^^
   |
   = help: to create the module `plain_io`, create file "open_image/plain_io.rs" or "open_image/plain_io/mod.rs"

error[E0583]: file not found for module `floppyd_io`
  --> open_image.rs:11:1
   |
11 | mod floppyd_io;
   | ^^^^^^^^^^^^^^^
   |
   = help: to create the module `floppyd_io`, create file "open_image/floppyd_io.rs" or "open_image/floppyd_io/mod.rs"

error[E0583]: file not found for module `scsi_io`
  --> open_image.rs:12:1
   |
12 | mod scsi_io;
   | ^^^^^^^^^^^^
   |
   = help: to create the module `scsi_io`, create file "open_image/scsi_io.rs" or "open_image/scsi_io/mod.rs"

error[E0583]: file not found for module `remap`
  --> open_image.rs:13:1
   |
13 | mod remap;
   | ^^^^^^^^^^
   |
   = help: to create the module `remap`, create file "open_image/remap.rs" or "open_image/remap/mod.rs"

error[E0583]: file not found for module `partition`
  --> open_image.rs:14:1
   |
14 | mod partition;
   | ^^^^^^^^^^^^^^
   |
   = help: to create the module `partition`, create file "open_image/partition.rs" or "open_image/partition/mod.rs"

error[E0583]: file not found for module `offset`
  --> open_image.rs:15:1
   |
15 | mod offset;
   | ^^^^^^^^^^^
   |
   = help: to create the module `offset`, create file "open_image/offset.rs" or "open_image/offset/mod.rs"

error[E0583]: file not found for module `swap`
  --> open_image.rs:16:1
   |
16 | mod swap;
   | ^^^^^^^^^
   |
   = help: to create the module `swap`, create file "open_image/swap.rs" or "open_image/swap/mod.rs"

error: this trait cannot be derived for unions
  --> init.rs:60:10
   |
60 | #[derive(Debug, Default)]
   |          ^^^^^

error: this trait cannot be derived for unions
  --> init.rs:60:17
   |
60 | #[derive(Debug, Default)]
   |                 ^^^^^^^

error: environment variable `CARGO_PKG_DATE` not defined
  --> mtools.rs:43:34
   |
43 | pub static mdate: &'static str = env!("CARGO_PKG_DATE");
   |                                  ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: could not find `windows` in `os`
 --> dirCache.rs:2:14
  |
2 | use std::os::windows::ffi::OsStringExt;
  |              ^^^^^^^ could not find `windows` in `os`

error[E0433]: failed to resolve: could not find `windows` in `os`
  --> direntry.rs:18:14
   |
18 | use std::os::windows::ffi::OsStringExt;
   |              ^^^^^^^ could not find `windows` in `os`

error[E0432]: unresolved import `encoding_rs`
  --> charsetConv.rs:29:5
   |
29 | use encoding_rs::*;
   |     ^^^^^^^^^^^ use of undeclared crate or module `encoding_rs`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> lockdev.rs:22:5
   |
22 | use nix::fcntl::{flock, FlockArg};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> lockdev.rs:23:5
   |
23 | use nix::sys::signal::{sigaction, SaFlags, SigAction, SigHandler, SigSet, Signal};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> lockdev.rs:24:5
   |
24 | use nix::sys::time::{TimeVal, TimeValLike};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> lockdev.rs:25:5
   |
25 | use nix::unistd::alarm;
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> lockdev.rs:26:5
   |
26 | use nix::errno::Errno;
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mainloop.rs:10:5
   |
10 | use nix::sys::signal;
   |     ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved imports `libc::towupper`, `libc::towlower`, `libc::iswcntrl`, `libc::iswlower`, `libc::iswupper`
  --> file_name.rs:13:12
   |
13 | use libc::{towupper, towlower, iswcntrl, iswlower, iswupper};
   |            ^^^^^^^^  ^^^^^^^^  ^^^^^^^^  ^^^^^^^^  ^^^^^^^^ no `iswupper` in the root
   |            |         |         |         |
   |            |         |         |         no `iswlower` in the root
   |            |         |         no `iswcntrl` in the root
   |            |         no `towlower` in the root
   |            no `towupper` in the root
   |
help: a similar name exists in the module
   |
13 | use libc::{toupper, towlower, iswcntrl, iswlower, iswupper};
   |            ~~~~~~~
help: a similar name exists in the module
   |
13 | use libc::{towupper, tolower, iswcntrl, iswlower, iswupper};
   |                      ~~~~~~~
help: a similar name exists in the module
   |
13 | use libc::{towupper, towlower, iscntrl, iswlower, iswupper};
   |                                ~~~~~~~
help: a similar name exists in the module
   |
13 | use libc::{towupper, towlower, iswcntrl, islower, iswupper};
   |                                          ~~~~~~~
help: a similar name exists in the module
   |
13 | use libc::{towupper, towlower, iswcntrl, iswlower, isupper};
   |                                                    ~~~~~~~

error[E0432]: unresolved import `nix`
  --> mainloop.rs:11:5
   |
11 | use nix::unistd;
   |     ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved imports `libc::S_ISDIR`, `libc::S_ISREG`
  --> mcopy.rs:28:32
   |
28 | use libc::{self, time_t, stat, S_ISDIR, S_ISREG};
   |                                ^^^^^^^  ^^^^^^^ no `S_ISREG` in the root
   |                                |
   |                                no `S_ISDIR` in the root
   |
help: a similar name exists in the module
   |
28 | use libc::{self, time_t, stat, S_IFDIR, S_ISREG};
   |                                ~~~~~~~
help: a similar name exists in the module
   |
28 | use libc::{self, time_t, stat, S_ISDIR, S_IFREG};
   |                                         ~~~~~~~

error[E0432]: unresolved import `crate::utils`
  --> mcopy.rs:34:12
   |
34 | use crate::utils::{copy_file, ask_confirmation, file_too_big};
   |            ^^^^^ could not find `utils` in the crate root

error[E0432]: unresolved import `clap`
  --> mdoctorfat.rs:29:5
   |
29 | use clap::{App, Arg, ArgMatches};
   |     ^^^^ use of undeclared crate or module `clap`

error[E0432]: unresolved import `mtools`
  --> mdu.rs:29:5
   |
29 | use mtools::{MainParam, MainLoopCallback, Direntry, count_blocks, get_start, is_root_dir, fprint_pwd};
   |     ^^^^^^ help: a similar path exists: `crate::mtools`
   |
   = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>

error[E0432]: unresolved import `clap`
  --> mdu.rs:30:5
   |
30 | use clap::{App, Arg, ArgMatches};
   |     ^^^^ use of undeclared crate or module `clap`

error[E0432]: unresolved import `libc::O_BINARY`
 --> mformat.rs:9:38
  |
9 | use libc::{O_RDWR, O_CREAT, O_TRUNC, O_BINARY};
  |                                      ^^^^^^^^ no `O_BINARY` in the root

error[E0432]: unresolved import `users`
  --> misc.rs:11:5
   |
11 | use users::{get_user_by_name, get_user_by_uid};
   |     ^^^^^ use of undeclared crate or module `users`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mmount.rs:33:5
   |
33 | use nix::unistd::{fork, ForkResult, execvp, close};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mmount.rs:34:5
   |
34 | use nix::sys::wait::waitpid;
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mmount.rs:35:5
   |
35 | use nix::sys::wait::WaitStatus;
   |     ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved imports `libc::wint_t`, `libc::iswlower`, `libc::iswupper`, `libc::wcschr`
  --> mlabel.rs:31:21
   |
31 | use libc::{wchar_t, wint_t, iswlower, iswupper, wcschr, strchr};
   |                     ^^^^^^  ^^^^^^^^  ^^^^^^^^  ^^^^^^ no `wcschr` in the root
   |                     |       |         |
   |                     |       |         no `iswupper` in the root
   |                     |       no `iswlower` in the root
   |                     no `wint_t` in the root
   |
help: a similar name exists in the module
   |
31 | use libc::{wchar_t, int8_t, iswlower, iswupper, wcschr, strchr};
   |                     ~~~~~~
help: a similar name exists in the module
   |
31 | use libc::{wchar_t, wint_t, islower, iswupper, wcschr, strchr};
   |                             ~~~~~~~
help: a similar name exists in the module
   |
31 | use libc::{wchar_t, wint_t, iswlower, isupper, wcschr, strchr};
   |                                       ~~~~~~~

error[E0432]: unresolved import `crate::sysincludes`
  --> mmove.rs:33:12
   |
33 | use crate::sysincludes::*;
   |            ^^^^^^^^^^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `crate::open_image::sysincludes`

error[E0432]: unresolved import `crate::nameclash`
  --> mmove.rs:37:12
   |
37 | use crate::nameclash::*;
   |            ^^^^^^^^^ could not find `nameclash` in the crate root

error[E0432]: unresolved import `crate::fs`
  --> mmove.rs:39:12
   |
39 | use crate::fs::*;
   |            ^^
   |            |
   |            unresolved import
   |            help: a similar path exists: `std::fs`

error[E0432]: unresolved import `getopts`
  --> mshortname.rs:24:5
   |
24 | use getopts::Options;
   |     ^^^^^^^ use of undeclared crate or module `getopts`

error[E0432]: unresolved import `getopts`
  --> mshowfat.rs:28:5
   |
28 | use getopts::Options;
   |     ^^^^^^^ use of undeclared crate or module `getopts`

error[E0433]: failed to resolve: use of undeclared crate or module `signal_hook`
  --> signal.rs:20:5
   |
20 | use signal_hook::consts::signal::*;
   |     ^^^^^^^^^^^ use of undeclared crate or module `signal_hook`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> tty.rs:23:5
   |
23 | use nix::sys::termios;
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> tty.rs:24:5
   |
24 | use nix::sys::termios::{Termios, tcgetattr, tcsetattr, SetArg, LocalFlags};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> privileges.rs:21:5
   |
21 | use nix::unistd::{getuid, geteuid, getgid, getegid, setuid, seteuid, setgid};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> privileges.rs:22:5
   |
22 | use nix::fcntl::{fcntl, FcntlArg, FdFlag};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> privileges.rs:39:9
   |
39 |     use nix::unistd::Uid;
   |         ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> privileges.rs:40:9
   |
40 |     use nix::unistd::Gid;
   |         ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved import `libc::O_BINARY`
 --> plain_io.rs:9:53
  |
9 | use libc::{O_RDONLY, O_RDWR, O_WRONLY, O_LARGEFILE, O_BINARY};
  |                                                     ^^^^^^^^ no `O_BINARY` in the root

error[E0432]: unresolved import `widestring`
  --> file_name.rs:11:5
   |
11 | use widestring::{WideChar, WideStr, WideString};
   |     ^^^^^^^^^^ use of undeclared crate or module `widestring`

error[E0432]: unresolved import `encoding_rs`
  --> file_name.rs:12:5
   |
12 | use encoding_rs::{Encoding, DecoderResult, EncoderResult};
   |     ^^^^^^^^^^^ use of undeclared crate or module `encoding_rs`

error[E0432]: unresolved import `byteorder`
 --> floppyd_io.rs:8:5
  |
8 | use byteorder::{ByteOrder, LittleEndian, BigEndian, ReadBytesExt, WriteBytesExt};
  |     ^^^^^^^^^ use of undeclared crate or module `byteorder`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mcopy.rs:29:5
   |
29 | use nix::sys::stat::{fstat, stat};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mcopy.rs:30:5
   |
30 | use nix::fcntl::{open, OFlag};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mcopy.rs:31:5
   |
31 | use nix::sys::signal;
   |     ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved import `getopts`
  --> mcd.rs:26:5
   |
26 | use getopts::Options;
   |     ^^^^^^^ use of undeclared crate or module `getopts`

error[E0432]: unresolved import `nix`
  --> mcopy.rs:32:5
   |
32 | use nix::unistd;
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mlabel.rs:32:5
   |
32 | use nix::fcntl::{open, OFlag};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mlabel.rs:33:5
   |
33 | use nix::sys::stat::Mode;
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mlabel.rs:34:5
   |
34 | use nix::unistd::{read, write, close};
   |     ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved imports `crate::mtools::MainParam`, `crate::mtools::ClashHandling`, `crate::mtools::Direntry`, `crate::mtools::Stream`, `crate::mtools::get_time_now`
  --> mcopy.rs:33:21
   |
33 | use crate::mtools::{MainParam, ClashHandling, Direntry, Stream, DosName, get_time_now, print_oom};
   |                     ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^           ^^^^^^^^^^^^ no `get_time_now` in `mtools`
   |                     |          |              |         |
   |                     |          |              |         no `Stream` in `mtools`
   |                     |          |              no `Direntry` in `mtools`
   |                     |          no `ClashHandling` in `mtools`
   |                     no `MainParam` in `mtools`
   |
help: a similar name exists in the module
   |
33 | use crate::mtools::{MainParam, ClashHandling, Directory, Stream, DosName, get_time_now, print_oom};
   |                                               ~~~~~~~~~
help: a similar name exists in the module
   |
33 | use crate::mtools::{MainParam, ClashHandling, Direntry, stream, DosName, get_time_now, print_oom};
   |                                                         ~~~~~~

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mtools.rs:13:5
   |
13 | use nix::sys::signal::{self, SigAction, SaFlags, SigHandler, SigSet};
   |     ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved import `rand`
  --> mlabel.rs:35:5
   |
35 | use rand::Rng;
   |     ^^^^ use of undeclared crate or module `rand`

error[E0432]: unresolved import `nix`
  --> mtools.rs:14:5
   |
14 | use nix::unistd;
   |     ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved import `scsi`
  --> mzip.rs:16:5
   |
16 | use scsi::*;
   |     ^^^^ help: a similar path exists: `crate::scsi`
   |
   = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> xdf_io.rs:11:5
   |
11 | use nix::fcntl::{open, OFlag};
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> xdf_io.rs:12:5
   |
12 | use nix::sys::stat::Mode;
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> xdf_io.rs:13:5
   |
13 | use nix::unistd::close;
   |     ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> mzip.rs:14:5
   |
14 | use nix::unistd::{getuid, Uid};
   |     ^^^ use of undeclared crate or module `nix`

error[E0432]: unresolved imports `bitflags`, `nix::unistd::getuid`, `nix::unistd::Uid`
  --> mzip.rs:14:19
   |
14 | use nix::unistd::{getuid, Uid};
   |                   ^^^^^^  ^^^
   |
  ::: xdf_io.rs:10:5
   |
10 | use bitflags::bitflags;
   |     ^^^^^^^^ use of undeclared crate or module `bitflags`

error[E0433]: failed to resolve: use of undeclared crate or module `signal_hook`
  --> signal.rs:22:5
   |
22 | use signal_hook::iterator::Signals;
   |     ^^^^^^^^^^^ use of undeclared crate or module `signal_hook`

error[E0432]: unresolved imports `signal_hook`, `signal_hook::iterator::Signals`
  --> signal.rs:21:5
   |
21 | use signal_hook::flag as signal_flag;
   |     ^^^^^^^^^^^ use of undeclared crate or module `signal_hook`
22 | use signal_hook::iterator::Signals;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared crate or module `bitflags`
  --> device.rs:21:1
   |
21 | bitflags::bitflags! {
   | ^^^^^^^^ use of undeclared crate or module `bitflags`

error[E0433]: failed to resolve: use of undeclared crate or module `lazy_static`
  --> streamcache.rs:27:1
   |
27 | lazy_static::lazy_static! {
   | ^^^^^^^^^^^ use of undeclared crate or module `lazy_static`

error: cannot find macro `bitflags` in this scope
  --> open_image.rs:18:1
   |
18 | bitflags! {
   | ^^^^^^^^

error: cannot determine resolution for the macro `bitflags`
  --> xdf_io.rs:15:1
   |
15 | bitflags! {
   | ^^^^^^^^
   |
   = note: import resolution is stuck, try simplifying macro imports

error[E0433]: failed to resolve: use of undeclared type `DeviceFlags`
  --> device.rs:63:34
   |
63 |         self.misc_flags.contains(DeviceFlags::SCSI)
   |                                  ^^^^^^^^^^^ use of undeclared type `DeviceFlags`

error[E0433]: failed to resolve: use of undeclared type `DeviceFlags`
  --> device.rs:67:34
   |
67 |         self.misc_flags.contains(DeviceFlags::PRIV)
   |                                  ^^^^^^^^^^^ use of undeclared type `DeviceFlags`

error[E0433]: failed to resolve: use of undeclared type `DeviceFlags`
  --> device.rs:71:34
   |
71 |         self.misc_flags.contains(DeviceFlags::NOLOCK)
   |                                  ^^^^^^^^^^^ use of undeclared type `DeviceFlags`

error[E0433]: failed to resolve: use of undeclared type `DeviceFlags`
  --> device.rs:75:34
   |
75 |         self.misc_flags.contains(DeviceFlags::MFORMAT_ONLY)
   |                                  ^^^^^^^^^^^ use of undeclared type `DeviceFlags`

error[E0433]: failed to resolve: use of undeclared type `DeviceFlags`
  --> device.rs:79:34
   |
79 |         self.misc_flags.contains(DeviceFlags::VOLD)
   |                                  ^^^^^^^^^^^ use of undeclared type `DeviceFlags`

error[E0433]: failed to resolve: use of undeclared type `DeviceFlags`
  --> device.rs:83:34
   |
83 |         self.misc_flags.contains(DeviceFlags::USE_XDF)
   |                                  ^^^^^^^^^^^ use of undeclared type `DeviceFlags`

error[E0433]: failed to resolve: use of undeclared type `DeviceFlags`
  --> device.rs:87:34
   |
87 |         self.misc_flags.contains(DeviceFlags::SWAP)
   |                                  ^^^^^^^^^^^ use of undeclared type `DeviceFlags`

error[E0106]: missing lifetime specifier
  --> directory.rs:39:53
   |
39 | pub fn dir_read(entry: &mut DirEntry) -> io::Result<&Directory> {
   |                        -------------                ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say which one of `entry`'s 2 lifetimes it is borrowed from
help: consider introducing a named lifetime parameter
   |
39 | pub fn dir_read<'a>(entry: &'a mut DirEntry<'a>) -> io::Result<&'a Directory> {
   |                ++++         ++             ++++                 ++

error[E0106]: missing lifetime specifier
  --> directory.rs:93:6
   |
87 |     dn: &DosName,
   |         --------
...
92 |     ndir: &mut Directory,
   |           --------------
93 | ) -> &mut Directory {
   |      ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `dn` or `ndir`
help: consider introducing a named lifetime parameter
   |
86 ~ pub fn mk_entry<'a>(
87 ~     dn: &'a DosName,
88 |     attr: u8,
 ...
91 |     date: SystemTime,
92 ~     ndir: &'a mut Directory,
93 ~ ) -> &'a mut Directory {
   |

error[E0106]: missing lifetime specifier
   --> directory.rs:140:6
    |
134 |     base: &str,
    |           ----
...
139 |     ndir: &mut Directory,
    |           --------------
140 | ) -> &mut Directory {
    |      ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `base` or `ndir`
help: consider introducing a named lifetime parameter
    |
133 ~ pub fn mk_entry_from_base<'a>(
134 ~     base: &'a str,
135 |     attr: u8,
  ...
138 |     date: SystemTime,
139 ~     ndir: &'a mut Directory,
140 ~ ) -> &'a mut Directory {
    |

error[E0106]: missing lifetime specifier
  --> expand.rs:28:50
   |
28 | pub fn expand(input: &str, ans: &mut [u8]) -> Cow<str> {
   |                      ----       ---------        ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `input` or `ans`
help: consider introducing a named lifetime parameter
   |
28 | pub fn expand<'a>(input: &'a str, ans: &'a mut [u8]) -> Cow<'a, str> {
   |              ++++         ++            ++                  +++

error[E0407]: method `read` is not a member of trait `Stream`
   --> file.rs:138:5
    |
138 |       fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {
    |       ^  ---- help: there is an associated function with a similar name: `pread`
    |  _____|
    | |
139 | |         let mut len = buf.len().try_into().unwrap_or(u32::MAX);
140 | |         let mut pos = 0;
141 | |         
...   |
150 | |         Ok(ret)
151 | |     }
    | |_____^ not a member of trait `Stream`

error[E0407]: method `write` is not a member of trait `Stream`
   --> file.rs:153:5
    |
153 |       fn write(&mut self, buf: &[u8]) -> io::Result<usize> {
    |       ^  ----- help: there is an associated function with a similar name: `pwrite`
    |  _____|
    | |
154 | |         let max_len = u32::MAX - self.where_;
155 | |         let len = buf.len().min(max_len as usize) as u32;
156 | |         let requested_len = len;
...   |
179 | |         Ok(bytes_written as usize)
180 | |     }
    | |_____^ not a member of trait `Stream`

error[E0106]: missing lifetime specifier
   --> file_name.rs:142:6
    |
138 |     cp: &DosCp,
    |         ------
139 |     ans: &mut [u8],
    |          ---------
140 |     dn: &DosName,
    |         --------
141 |     ans_size: usize,
142 | ) -> &[u8] {
    |      ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `cp`, `ans`, or `dn`
help: consider introducing a named lifetime parameter
    |
137 ~ pub fn unix_normalize<'a>(
138 ~     cp: &'a DosCp,
139 ~     ans: &'a mut [u8],
140 ~     dn: &'a DosName,
141 |     ans_size: usize,
142 ~ ) -> &'a [u8] {
    |

error[E0106]: missing lifetime specifier
   --> file_name.rs:318:6
    |
313 |     dos_cp: &DosCp,
    |             ------
314 |     base: &[u8],
    |           -----
315 |     ext: &[u8],
    |          -----
316 |     case_flag: u8,
317 |     ret: &mut [u16],
    |          ----------
318 | ) -> &[u16] {
    |      ^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `dos_cp`, `base`, `ext`, or `ret`
help: consider introducing a named lifetime parameter
    |
312 ~ pub fn unix_name<'a>(
313 ~     dos_cp: &'a DosCp,
314 ~     base: &'a [u8],
315 ~     ext: &'a [u8],
316 |     case_flag: u8,
317 ~     ret: &'a mut [u16],
318 ~ ) -> &'a [u16] {
    |

error[E0433]: failed to resolve: use of undeclared crate or module `rand`
   --> mbadblocks.rs:168:22
    |
168 |             .map(|_| rand::random::<u8>())
    |                      ^^^^ use of undeclared crate or module `rand`

error[E0433]: failed to resolve: use of undeclared crate or module `io`
  --> mdel.rs:51:46
   |
51 |     pub fn dir_read(entry: &mut Direntry) -> io::Result<()> { Ok(()) }
   |                                              ^^ use of undeclared crate or module `io`

error[E0433]: failed to resolve: use of undeclared crate or module `io`
  --> mdel.rs:52:47
   |
52 |     pub fn dir_write(entry: &mut Direntry) -> io::Result<()> { Ok(()) }
   |                                               ^^ use of undeclared crate or module `io`

error[E0433]: failed to resolve: use of undeclared crate or module `io`
  --> mdel.rs:54:36
   |
54 |     pub fn fprint_pwd(stderr: &mut io::Stderr, entry: &Direntry, _: u32) {}
   |                                    ^^ use of undeclared crate or module `io`

error[E0433]: failed to resolve: use of undeclared crate or module `io`
  --> mdel.rs:56:56
   |
56 |     pub fn fat_free_with_direntry(entry: &Direntry) -> io::Result<()> { Ok(()) }
   |                                                        ^^ use of undeclared crate or module `io`

error[E0433]: failed to resolve: use of undeclared crate or module `io`
  --> mdel.rs:57:55
   |
57 |     pub fn open_file_by_direntry(entry: &Direntry) -> io::Result<Stream> { unimplemented!() }
   |                                                       ^^ use of undeclared crate or module `io`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
  --> mdu.rs:45:59
   |
45 |     writeln!(io::stderr(), "Mtools version {}, dated {}", mtools::MVERSION, mtools::MDATE).unwrap();
   |                                                           ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
  --> mdu.rs:45:77
   |
45 |     writeln!(io::stderr(), "Mtools version {}, dated {}", mtools::MVERSION, mtools::MDATE).unwrap();
   |                                                                             ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
  --> mdu.rs:59:5
   |
59 |     mtools::GOT_ONE
   |     ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
   --> mdu.rs:117:18
    |
117 |         .version(mtools::MVERSION)
    |                  ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
   --> mdu.rs:147:9
    |
147 |         mtools::set_cmd_line_image(image);
    |         ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
   --> mdu.rs:154:27
    |
154 |     arg.mp.lookup_flags = mtools::ACCEPT_PLAIN | mtools::ACCEPT_DIR | mtools::DO_OPEN_DIRS | mtools::NO_DOTS;
    |                           ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
   --> mdu.rs:154:50
    |
154 |     arg.mp.lookup_flags = mtools::ACCEPT_PLAIN | mtools::ACCEPT_DIR | mtools::DO_OPEN_DIRS | mtools::NO_DOTS;
    |                                                  ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
   --> mdu.rs:154:71
    |
154 |     arg.mp.lookup_flags = mtools::ACCEPT_PLAIN | mtools::ACCEPT_DIR | mtools::DO_OPEN_DIRS | mtools::NO_DOTS;
    |                                                                       ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
   --> mdu.rs:154:94
    |
154 |     arg.mp.lookup_flags = mtools::ACCEPT_PLAIN | mtools::ACCEPT_DIR | mtools::DO_OPEN_DIRS | mtools::NO_DOTS;
    |                                                                                              ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `mtools`
   --> mdu.rs:157:21
    |
157 |     let exit_code = mtools::main_loop(&arg.mp, &remaining_args);
    |                     ^^^^^^ use of undeclared crate or module `mtools`

error[E0433]: failed to resolve: use of undeclared crate or module `lexical_core`
   --> misc.rs:153:30
    |
153 |     if let Ok((num, rest)) = lexical_core::parse_partial::<i64>(remaining.as_bytes()) {
    |                              ^^^^^^^^^^^^ use of undeclared crate or module `lexical_core`

error[E0106]: missing lifetime specifier
  --> missFuncs.rs:43:47
   |
43 | pub fn memcpy(dest: &mut [u8], src: &[u8]) -> &mut [u8] {
   |                     ---------       -----     ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `dest` or `src`
help: consider introducing a named lifetime parameter
   |
43 | pub fn memcpy<'a>(dest: &'a mut [u8], src: &'a [u8]) -> &'a mut [u8] {
   |              ++++        ++                 ++           ++

error[E0106]: missing lifetime specifier
  --> missFuncs.rs:63:55
   |
63 | pub fn strstr(haystack: &str, needle: &str) -> Option<&str> {
   |                         ----          ----            ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `haystack` or `needle`
help: consider introducing a named lifetime parameter
   |
63 | pub fn strstr<'a>(haystack: &'a str, needle: &'a str) -> Option<&'a str> {
   |              ++++            ++               ++                 ++

error[E0106]: missing lifetime specifier
  --> missFuncs.rs:71:49
   |
71 | pub fn strpbrk(s: &str, accept: &str) -> Option<&str> {
   |                   ----          ----            ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `s` or `accept`
help: consider introducing a named lifetime parameter
   |
71 | pub fn strpbrk<'a>(s: &'a str, accept: &'a str) -> Option<&'a str> {
   |               ++++     ++               ++                 ++

error[E0433]: failed to resolve: use of undeclared crate or module `getopts`
   --> mmove.rs:188:20
    |
188 |     let mut opts = getopts::Options::new();
    |                    ^^^^^^^ use of undeclared crate or module `getopts`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
   --> mtools.rs:131:13
    |
131 |     let _ = nix::fcntl::fcntl(fd, nix::fcntl::FcntlArg::F_SETFD(nix::fcntl::FdFlag::FD_CLOEXEC));
    |             ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
   --> mtools.rs:131:35
    |
131 |     let _ = nix::fcntl::fcntl(fd, nix::fcntl::FcntlArg::F_SETFD(nix::fcntl::FdFlag::FD_CLOEXEC));
    |                                   ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
   --> mtools.rs:131:65
    |
131 |     let _ = nix::fcntl::fcntl(fd, nix::fcntl::FcntlArg::F_SETFD(nix::fcntl::FdFlag::FD_CLOEXEC));
    |                                                                 ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `dirs`
   --> mtools.rs:147:5
    |
147 |     dirs::home_dir().map(|p| p.to_string_lossy().into_owned())
    |     ^^^^ use of undeclared crate or module `dirs`

error[E0433]: failed to resolve: use of undeclared type `ScsiIoMode`
  --> mzip.rs:93:28
   |
93 |         self.zip_cmd(&cdb, ScsiIoMode::Read, &mut status)?;
   |                            ^^^^^^^^^^ use of undeclared type `ScsiIoMode`

error[E0433]: failed to resolve: use of undeclared type `ScsiIoMode`
   --> mzip.rs:108:28
    |
108 |         self.zip_cmd(&cdb, ScsiIoMode::Write, &mut buf)
    |                            ^^^^^^^^^^ use of undeclared type `ScsiIoMode`

error[E0433]: failed to resolve: use of undeclared type `OpenImageFlags`
   --> open_image.rs:148:23
    |
148 |     if flags.contains(OpenImageFlags::ALWAYS_GET_GEOMETRY) {
    |                       ^^^^^^^^^^^^^^ use of undeclared type `OpenImageFlags`

error[E0433]: failed to resolve: use of undeclared type `OpenImageFlags`
   --> open_image.rs:154:52
    |
154 |     if !dev.partition.is_null() && !flags.contains(OpenImageFlags::SKIP_PARTITION) {
    |                                                    ^^^^^^^^^^^^^^ use of undeclared type `OpenImageFlags`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> privileges.rs:56:40
   |
56 |     fn set_uid(uid: Uid) -> Result<(), nix::Error> {
   |                                        ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> privileges.rs:66:42
   |
66 |     pub fn reclaim_privs() -> Result<(), nix::Error> {
   |                                          ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> privileges.rs:78:39
   |
78 |     pub fn drop_privs() -> Result<(), nix::Error> {
   |                                       ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> privileges.rs:87:42
   |
87 |     pub fn destroy_privs() -> Result<(), nix::Error> {
   |                                          ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
   --> privileges.rs:105:39
    |
105 |     pub fn init_privs() -> Result<(), nix::Error> {
    |                                       ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
   --> privileges.rs:126:46
    |
126 |     pub fn close_exec(fd: i32) -> Result<(), nix::Error> {
    |                                              ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> tty.rs:77:35
   |
77 |                 raw.control_chars[nix::sys::termios::SpecialCharacterIndices::VMIN as usize] = 1;
   |                                   ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
  --> tty.rs:78:35
   |
78 |                 raw.control_chars[nix::sys::termios::SpecialCharacterIndices::VTIME as usize] = 0;
   |                                   ^^^ use of undeclared crate or module `nix`

error[E0433]: failed to resolve: use of undeclared crate or module `nix`
   --> tty.rs:103:16
    |
103 |             if nix::unistd::isatty(0).unwrap_or(false) {
    |                ^^^ use of undeclared crate or module `nix`

error[E0425]: cannot find value `EILSEQ` in this scope
   --> charsetConv.rs:213:43
    |
213 |             if err.raw_os_error() != Some(EILSEQ as i32) {
    |                                           ^^^^^^ not found in this scope
    |
help: consider importing this constant
    |
21  | use libc::EILSEQ;
    |

error[E0412]: cannot find type `DeviceFlags` in this scope
  --> device.rs:47:21
   |
47 |     pub misc_flags: DeviceFlags,       // miscellaneous flags
   |                     ^^^^^^^^^^^ not found in this scope

error[E0405]: cannot find trait `Seek` in this scope
  --> directory.rs:36:41
   |
36 | pub trait ReadWriteSeek: Read + Write + Seek {}
   |                                         ^^^^ not found in this scope
   |
help: consider importing one of these items
   |
1  | use crate::directory::io::Seek;
   |
1  | use std::io::Seek;
   |

error[E0405]: cannot find trait `Seek` in this scope
  --> directory.rs:37:24
   |
37 | impl<T: Read + Write + Seek> ReadWriteSeek for T {}
   |                        ^^^^ not found in this scope
   |
help: consider importing one of these items
   |
1  | use crate::directory::io::Seek;
   |
1  | use std::io::Seek;
   |

error[E0412]: cannot find type `StreamClass` in this scope
  --> file.rs:77:20
   |
77 | static FILE_CLASS: StreamClass = StreamClass;
   |                    ^^^^^^^^^^^ not found in this scope
   |
note: trait `crate::force_io::StreamClass` exists but is inaccessible
  --> force_io.rs:29:1
   |
29 | trait StreamClass {
   | ^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find value `StreamClass` in this scope
  --> file.rs:77:34
   |
77 | static FILE_CLASS: StreamClass = StreamClass;
   |                                  ^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `fat32_root_cluster` in this scope
   --> file.rs:186:15
    |
186 |     let num = fat32_root_cluster(dir);
    |               ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::fat_free::fat32_root_cluster` exists but is inaccessible
   --> fat_free.rs:56:1
    |
56  | fn fat32_root_cluster(_dir: &Stream_t) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `count_bytes` in this scope
   --> file.rs:202:9
    |
202 |         count_bytes(dir, num)?
    |         ^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `get_fs` in this scope
   --> file.rs:204:18
    |
204 |         let fs = get_fs(dir)?;
    |                  ^^^^^^ not found in this scope
    |
note: function `crate::fat_free::get_fs` exists but is inaccessible
   --> fat_free.rs:48:1
    |
48  | fn get_fs(_dir: &Stream_t) -> Fs_t {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `mt_internal_file_open` in this scope
   --> file.rs:208:16
    |
208 |     let file = mt_internal_file_open(dir, num, size, &entry)?;
    |                ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `bufferize` in this scope
   --> file.rs:209:5
    |
209 |     bufferize(file)
    |     ^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `wint_t` in this scope
   --> file_name.rs:198:43
    |
198 |         if unsafe { iswcntrl(buffer[s] as wint_t) } != 0 {
    |                                           ^^^^^^ not found in this scope

error[E0412]: cannot find type `wint_t` in this scope
   --> file_name.rs:201:50
    |
201 |         } else if unsafe { iswlower(buffer[s] as wint_t) } != 0 {
    |                                                  ^^^^^^ not found in this scope

error[E0412]: cannot find type `wint_t` in this scope
   --> file_name.rs:202:60
    |
202 |             buffer[t_idx] = unsafe { towupper(buffer[s] as wint_t) } as u16;
    |                                                            ^^^^^^ not found in this scope

error[E0412]: cannot find type `wint_t` in this scope
   --> file_name.rs:208:50
    |
208 |         } else if unsafe { iswupper(buffer[s] as wint_t) } != 0 {
    |                                                  ^^^^^^ not found in this scope

error[E0425]: cannot find value `ext_case` in this scope
   --> file_name.rs:305:12
    |
305 |         if ext_case == Case::Lower {
    |            ^^^^^^^^ not found in this scope

error[E0412]: cannot find type `wint_t` in this scope
   --> file_name.rs:344:46
    |
344 |                 *c = unsafe { towlower(*c as wint_t) } as u8;
    |                                              ^^^^^^ not found in this scope

error[E0412]: cannot find type `wint_t` in this scope
   --> file_name.rs:360:46
    |
360 |                 *c = unsafe { towlower(*c as wint_t) } as u8;
    |                                              ^^^^^^ not found in this scope

error[E0425]: cannot find value `O_LARGEFILE` in this scope
   --> floppyd.rs:321:81
    |
321 |         dev_fd = Some(unsafe { open(device_name.as_ptr() as *const i8, O_RDWR | O_LARGEFILE) });
    |                                                                                 ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   | use crate::floppyd::libc::O_LARGEFILE;
    |
6   | use libc::O_LARGEFILE;
    |

error[E0425]: cannot find value `O_LARGEFILE` in this scope
   --> floppyd.rs:324:87
    |
324 |             dev_fd = Some(unsafe { open(device_name.as_ptr() as *const i8, O_RDONLY | O_LARGEFILE) });
    |                                                                                       ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   | use crate::floppyd::libc::O_LARGEFILE;
    |
6   | use libc::O_LARGEFILE;
    |

error[E0425]: cannot find value `O_LARGEFILE` in this scope
   --> floppyd.rs:349:86
    |
349 |                 let fd = unsafe { open(device_name.as_ptr() as *const i8, O_RDONLY | O_LARGEFILE) };
    |                                                                                      ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   | use crate::floppyd::libc::O_LARGEFILE;
    |
6   | use libc::O_LARGEFILE;
    |

error[E0425]: cannot find value `O_LARGEFILE` in this scope
   --> floppyd.rs:362:84
    |
362 |                 let fd = unsafe { open(device_name.as_ptr() as *const i8, O_RDWR | O_LARGEFILE) };
    |                                                                                    ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
6   | use crate::floppyd::libc::O_LARGEFILE;
    |
6   | use libc::O_LARGEFILE;
    |

error[E0405]: cannot find trait `Any` in this scope
   --> init.rs:149:24
    |
149 |     cp: Option<Arc<dyn Any>>,
    |                        ^^^ not found in this scope
    |
help: consider importing one of these items
    |
1   | use core::any::Any;
    |
1   | use std::any::Any;
    |

error[E0405]: cannot find trait `Any` in this scope
   --> init.rs:434:43
    |
434 | fn cp_open(codepage: &str) -> Result<impl Any, FsError> {
    |                                           ^^^ not found in this scope
    |
help: consider importing one of these items
    |
1   | use core::any::Any;
    |
1   | use std::any::Any;
    |

error[E0425]: cannot find function `fix_mcwd` in this scope
   --> mainloop.rs:129:5
    |
129 |     fix_mcwd((*mp).mcwd.as_mut_ptr());
    |     ^^^^^^^^ not found in this scope

error[E0412]: cannot find type `direntry_t` in this scope
  --> mcd.rs:40:25
   |
40 | fn mcd_callback(entry: &direntry_t, mp: &MainParam) -> Result<u32, MCDError> {
   |                         ^^^^^^^^^^ not found in this scope
   |
note: struct `crate::mainloop::direntry_t` exists but is inaccessible
  --> mainloop.rs:92:1
   |
92 | struct direntry_t {
   | ^^^^^^^^^^^^^^^^^ not accessible

error[E0412]: cannot find type `MainParam` in this scope
  --> mcd.rs:40:42
   |
40 | fn mcd_callback(entry: &direntry_t, mp: &MainParam) -> Result<u32, MCDError> {
   |                                          ^^^^^^^^^ not found in this scope
   |
note: these structs exist but are inaccessible
  --> mattrib.rs:42:1
   |
42 | struct MainParam<'a> {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
   |
  ::: mdel.rs:30:5
   |
30 |     pub struct MainParam;
   |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
   |
  ::: mdir.rs:59:1
   |
59 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
   |
  ::: mmd.rs:9:5
   |
9  |     pub struct MainParam {
   |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
   |
  ::: mshortname.rs:28:1
   |
28 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
   |
  ::: unixdir.rs:85:1
   |
85 | struct MainParam;
   | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0425]: cannot find function `open_mcwd` in this scope
  --> mcd.rs:41:24
   |
41 |     let mut fp = match open_mcwd("w") {
   |                        ^^^^^^^^^ not found in this scope
   |
help: consider importing this function
   |
21 | use crate::misc::open_mcwd;
   |

error[E0425]: cannot find function `fprint_pwd` in this scope
  --> mcd.rs:49:5
   |
49 |     fprint_pwd(&mut fp, entry, 0)?;
   |     ^^^^^^^^^^ not found in this scope
   |
note: these functions exist but are inaccessible
  --> mattrib.rs:96:1
   |
96 | fn fprint_pwd(_stream: &mut dyn Write, _entry: &Direntry, _full: bool) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::fprint_pwd`: not accessible
   |
  ::: mdel.rs:54:5
   |
54 |     pub fn fprint_pwd(stderr: &mut io::Stderr, entry: &Direntry, _: u32) {}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::fprint_pwd`: not accessible

error[E0425]: cannot find value `GOT_ONE` in this scope
  --> mcd.rs:51:8
   |
51 |     Ok(GOT_ONE | STOP_NOW)
   |        ^^^^^^^ not found in this scope
   |
note: these constants exist but are inaccessible
  --> mainloop.rs:80:1
   |
80 | const GOT_ONE: c_int = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::GOT_ONE`: not accessible
   |
  ::: mattrib.rs:81:1
   |
81 | const GOT_ONE: i32 = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::GOT_ONE`: not accessible
   |
  ::: mdel.rs:42:5
   |
42 |     pub const GOT_ONE: i32 = 1;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::GOT_ONE`: not accessible
   |
  ::: mdir.rs:83:1
   |
83 | const GOT_ONE: i32 = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::GOT_ONE`: not accessible
   |
  ::: mmd.rs:43:5
   |
43 |     pub const GOT_ONE: i32 = 0;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::GOT_ONE`: not accessible
   |
  ::: mshortname.rs:26:1
   |
26 | const GOT_ONE: i32 = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::GOT_ONE`: not accessible

error[E0425]: cannot find value `STOP_NOW` in this scope
  --> mcd.rs:51:18
   |
51 |     Ok(GOT_ONE | STOP_NOW)
   |                  ^^^^^^^^ not found in this scope
   |
note: constant `crate::mainloop::STOP_NOW` exists but is inaccessible
  --> mainloop.rs:83:1
   |
83 | const STOP_NOW: c_int = 32;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find value `mversion` in this scope
  --> mcd.rs:55:46
   |
55 |     eprintln!("Mtools version {}, dated {}", mversion, mdate);
   |                                              ^^^^^^^^ not found in this scope
   |
help: consider importing this static
   |
21 | use crate::mtools::mversion;
   |

error[E0425]: cannot find value `mdate` in this scope
  --> mcd.rs:55:56
   |
55 |     eprintln!("Mtools version {}, dated {}", mversion, mdate);
   |                                                        ^^^^^ not found in this scope
   |
help: consider importing this static
   |
21 | use crate::mtools::mdate;
   |

error[E0425]: cannot find value `progname` in this scope
   --> mcd.rs:56:60
    |
56  |     eprintln!("Usage: {}: [-V] [-i image] msdosdirectory", progname);
    |                                                            ^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> mbadblocks.rs:274:1
    |
274 | fn progname() -> String { String::new() }
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::progname`: not accessible
    |
   ::: mdel.rs:45:5
    |
45  |     pub static mut progname: &'static str = "";
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::progname`: not accessible
    |
   ::: minfo.rs:223:1
    |
223 | fn progname() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::minfo::progname`: not accessible

error[E0425]: cannot find function `set_cmd_line_image` in this scope
   --> mcd.rs:78:9
    |
78  |         set_cmd_line_image(&img);
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mdel.rs:71:5
    |
71  |     pub fn set_cmd_line_image(_: &str) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::set_cmd_line_image`: not accessible
    |
   ::: mmd.rs:134:5
    |
134 |     pub fn set_cmd_line_image(_optarg: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::set_cmd_line_image`: not accessible
    |
   ::: mshortname.rs:89:1
    |
89  | fn set_cmd_line_image(_image: &str) {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::set_cmd_line_image`: not accessible

error[E0433]: failed to resolve: use of undeclared type `MainParam`
  --> mcd.rs:85:18
   |
85 |     let mut mp = MainParam::new();
   |                  ^^^^^^^^^ not found in this scope
   |
note: these structs exist but are inaccessible
  --> mattrib.rs:42:1
   |
42 | struct MainParam<'a> {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
   |
  ::: mdel.rs:30:5
   |
30 |     pub struct MainParam;
   |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
   |
  ::: mdir.rs:59:1
   |
59 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
   |
  ::: mmd.rs:9:5
   |
9  |     pub struct MainParam {
   |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
   |
  ::: mshortname.rs:28:1
   |
28 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
   |
  ::: unixdir.rs:85:1
   |
85 | struct MainParam;
   | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0425]: cannot find value `ACCEPT_DIR` in this scope
  --> mcd.rs:86:22
   |
86 |     mp.lookupflags = ACCEPT_DIR | NO_DOTS;
   |                      ^^^^^^^^^^ not found in this scope
   |
note: these constants exist but are inaccessible
  --> mainloop.rs:72:1
   |
72 | const ACCEPT_DIR: c_int = 0x02;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ACCEPT_DIR`: not accessible
   |
  ::: mattrib.rs:83:1
   |
83 | const ACCEPT_DIR: u32 = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::ACCEPT_DIR`: not accessible
   |
  ::: mdel.rs:38:5
   |
38 |     pub const ACCEPT_DIR: u32 = 0x02;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ACCEPT_DIR`: not accessible
   |
  ::: mdir.rs:74:1
   |
74 | const ACCEPT_DIR: u32 = 0x01;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ACCEPT_DIR`: not accessible
   |
  ::: mshortname.rs:93:1
   |
93 | const ACCEPT_DIR: u32 = 0x2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::ACCEPT_DIR`: not accessible
   |
  ::: vfat.rs:30:1
   |
30 | const ACCEPT_DIR: u32 = 0x10;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::ACCEPT_DIR`: not accessible

error[E0425]: cannot find value `NO_DOTS` in this scope
  --> mcd.rs:86:35
   |
86 |     mp.lookupflags = ACCEPT_DIR | NO_DOTS;
   |                                   ^^^^^^^ not found in this scope
   |
note: these constants exist but are inaccessible
  --> mainloop.rs:73:1
   |
73 | const NO_DOTS: c_int = 0x04;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::NO_DOTS`: not accessible
   |
  ::: mattrib.rs:85:1
   |
85 | const NO_DOTS: u32 = 8;
   | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::NO_DOTS`: not accessible
   |
  ::: mdel.rs:39:5
   |
39 |     pub const NO_DOTS: u32 = 0x04;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::NO_DOTS`: not accessible
   |
  ::: mdir.rs:77:1
   |
77 | const NO_DOTS: u32 = 0x08;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::NO_DOTS`: not accessible
   |
  ::: vfat.rs:34:1
   |
34 | const NO_DOTS: u32 = 0x100;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::NO_DOTS`: not accessible

error[E0425]: cannot find function `main_loop` in this scope
   --> mcd.rs:93:25
    |
93  |         let exit_code = main_loop(&mp, &matches.free, 1)?;
    |                         ^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mdel.rs:70:5
    |
70  |     pub fn main_loop(mp: &MainParam, args: &[&str]) -> i32 { 0 }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::main_loop`: not accessible
    |
   ::: mmd.rs:109:5
    |
109 |     pub fn main_loop(mp: *mut MainParam, _argv: *mut *mut libc::c_char, _argc: i32) -> i32 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::main_loop`: not accessible
    |
   ::: mshortname.rs:91:1
    |
91  | fn main_loop(_mp: &MainParam, _args: &[String]) -> i32 { 0 }
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::main_loop`: not accessible

error[E0425]: cannot find function `open_dos2unix` in this scope
   --> mcopy.rs:166:18
    |
166 |         source = open_dos2unix(source, arg.convert_charset)?;
    |                  ^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::dos2unix::open_dos2unix` exists but is inaccessible
   --> dos2unix.rs:64:1
    |
64  | fn open_dos2unix(next: Box<dyn Read>, _convert_charset: bool) -> io::Result<Box<dyn Read>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find value `dos_copydir` in this scope
   --> mcopy.rs:315:35
    |
315 |             arg.mp.dir_callback = dos_copydir;
    |                                   ^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `dos_to_dos` in this scope
   --> mcopy.rs:316:31
    |
316 |             arg.mp.callback = dos_to_dos;
    |                               ^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `unix_to_dos` in this scope
   --> mcopy.rs:317:36
    |
250 | fn dos_to_unix(_entry: Option<&Direntry>, mp: &MainParam) -> io::Result<()> {
    | --------------------------------------------------------------------------- similarly named function `dos_to_unix` defined here
...
317 |             arg.mp.unix_callback = unix_to_dos;
    |                                    ^^^^^^^^^^^ help: a function with a similar name exists: `dos_to_unix`

error[E0425]: cannot find function `main_loop` in this scope
   --> mcopy.rs:321:5
    |
321 |     main_loop(&arg.mp, &args)
    |     ^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mdel.rs:70:5
    |
70  |     pub fn main_loop(mp: &MainParam, args: &[&str]) -> i32 { 0 }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::main_loop`: not accessible
    |
   ::: mmd.rs:109:5
    |
109 |     pub fn main_loop(mp: *mut MainParam, _argv: *mut *mut libc::c_char, _argc: i32) -> i32 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::main_loop`: not accessible
    |
   ::: mshortname.rs:91:1
    |
91  | fn main_loop(_mp: &MainParam, _args: &[String]) -> i32 { 0 }
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::main_loop`: not accessible

error[E0412]: cannot find type `Direntry` in this scope
  --> mdoctorfat.rs:47:30
   |
47 | fn dos_doctorfat(entry: &mut Direntry, arg: &ArgData) -> io::Result<()> {
   |                              ^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
21 | use crate::direntry::Direntry;
   |

error[E0425]: cannot find function `mversion` in this scope
  --> mdoctorfat.rs:65:46
   |
65 |     eprintln!("Mtools version {}, dated {}", mversion(), mdate());
   |                                              ^^^^^^^^ not found in this scope
   |
help: consider importing this static
   |
21 | use crate::mtools::mversion;
   |

error[E0425]: cannot find function `mdate` in this scope
  --> mdoctorfat.rs:65:58
   |
65 |     eprintln!("Mtools version {}, dated {}", mversion(), mdate());
   |                                                          ^^^^^ not found in this scope
   |
help: consider importing this static
   |
21 | use crate::mtools::mdate;
   |

error[E0425]: cannot find function `progname` in this scope
   --> mdoctorfat.rs:66:42
    |
66  |     eprintln!("Usage: [-b] {} file fat", progname());
    |                                          ^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> mbadblocks.rs:274:1
    |
274 | fn progname() -> String { String::new() }
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::progname`: not accessible
    |
   ::: mdel.rs:45:5
    |
45  |     pub static mut progname: &'static str = "";
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::progname`: not accessible
    |
   ::: minfo.rs:223:1
    |
223 | fn progname() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::minfo::progname`: not accessible

error[E0433]: failed to resolve: use of undeclared type `Fs`
   --> mdoctorfat.rs:110:24
    |
110 |     let mut fs = match Fs::new(&mut file) {
    |                        ^^ help: a trait with a similar name exists: `Fn`
    |
   ::: /home/c2rust/.rustup/toolchains/nightly-2022-08-08-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:74:1
    |
74  | pub trait Fn<Args>: FnMut<Args> {
    | ------------------------------- similarly named trait `Fn` defined here
    |
note: these structs exist but are inaccessible
   --> fat.rs:23:1
    |
23  | struct Fs {
    | ^^^^^^^^^ `crate::fat::Fs`: not accessible
    |
   ::: file.rs:40:1
    |
40  | struct Fs {
    | ^^^^^^^^^ `crate::file::Fs`: not accessible
    |
   ::: init.rs:131:1
    |
131 | struct Fs {
    | ^^^^^^^^^ `crate::init::Fs`: not accessible
    |
   ::: mbadblocks.rs:38:1
    |
38  | struct Fs {
    | ^^^^^^^^^ `crate::mbadblocks::Fs`: not accessible
    |
   ::: mformat.rs:35:1
    |
35  | struct Fs {
    | ^^^^^^^^^ `crate::mformat::Fs`: not accessible

error[E0433]: failed to resolve: use of undeclared type `Direntry`
   --> mdoctorfat.rs:118:27
    |
118 |     let mut entry = match Direntry::new(&fs) {
    |                           ^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
21  | use crate::direntry::Direntry;
    |

error[E0425]: cannot find value `dos_name` in this scope
  --> mk_direntry.rs:82:29
   |
82 |             name_converter: dos_name,
   |                             ^^^^^^^^ not found in this scope
   |
help: consider importing this function
   |
22 | use crate::file_name::dos_name;
   |

error[E0425]: cannot find function `opentty` in this scope
   --> mk_direntry.rs:157:35
    |
157 |     if a == ClashAction::None && !opentty(1) {
    |                                   ^^^^^^^ not found in this scope
    |
note: function `crate::tty::opentty` exists but is inaccessible
   --> tty.rs:90:1
    |
90  | fn opentty(mode: i32) -> io::Result<Option<&'static File>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `unix_normalize` in this scope
   --> mk_direntry.rs:162:9
    |
162 |         unix_normalize(cp, dosname)
    |         ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::file_name::unix_normalize;
    |

error[E0425]: cannot find value `mtools_raw_tty` in this scope
   --> mk_direntry.rs:184:12
    |
184 |         if mtools_raw_tty {
    |            ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this static
    |
22  | use crate::mtools::mtools_raw_tty;
    |

error[E0425]: cannot find value `got_signal` in this scope
   --> mk_direntry.rs:228:13
    |
228 |             got_signal = true;
    |             ^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
22  | use crate::mtools::got_signal;
    |
22  | use crate::signal::got_signal;
    |

error[E0425]: cannot find function `autorename_long` in this scope
   --> mk_direntry.rs:238:17
    |
238 |                 autorename_long(longname, true);
    |                 ^^^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::vfat::autorename_long` exists but is inaccessible
   --> vfat.rs:234:1
    |
234 | fn autorename_long(name: &mut [u8], bump: bool) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `autorename_short` in this scope
   --> mk_direntry.rs:241:17
    |
241 |                 autorename_short(dosname, true);
    |                 ^^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> file_name.rs:409:1
    |
409 | fn autorename_short(dn: &mut DosName, _long: bool) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::file_name::autorename_short`: not accessible
    |
   ::: vfat.rs:230:1
    |
230 | fn autorename_short(name: &mut DosName, bump: bool) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::autorename_short`: not accessible

error[E0412]: cannot find type `ScanState` in this scope
   --> mk_direntry.rs:283:15
    |
283 |     ssp: &mut ScanState,
    |               ^^^^^^^^^ not found in this scope
    |
note: struct `crate::vfat::ScanState` exists but is inaccessible
   --> vfat.rs:114:1
    |
114 | struct ScanState {
    | ^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `get_dosconvert` in this scope
   --> mk_direntry.rs:286:14
    |
286 |     let cp = get_dosconvert(dir);
    |              ^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `RESERVED` in this scope
   --> mk_direntry.rs:291:16
    |
291 |         (true, RESERVED)
    |                ^^^^^^^^ not found in this scope

error[E0425]: cannot find value `LONG_ILLEGALS` in this scope
   --> mk_direntry.rs:292:43
    |
292 |     } else if contains_illegals(longname, LONG_ILLEGALS, 1024) {
    |                                           ^^^^^^^^^^^^^ not found in this scope
    |
note: constant `crate::vfat::LONG_ILLEGALS` exists but is inaccessible
   --> vfat.rs:135:1
    |
135 | const LONG_ILLEGALS: &str = "\"*\\<>/?:|\x05";
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find value `ILLEGALS` in this scope
   --> mk_direntry.rs:293:16
    |
293 |         (true, ILLEGALS)
    |                ^^^^^^^^ not found in this scope

error[E0425]: cannot find value `RESERVED` in this scope
   --> mk_direntry.rs:296:17
    |
296 |         (false, RESERVED)
    |                 ^^^^^^^^ not found in this scope

error[E0425]: cannot find value `SHORT_ILLEGALS` in this scope
   --> mk_direntry.rs:297:111
    |
297 |     } else if !ch.is_label && contains_illegals(&dosname.base.iter().map(|&b| b as char).collect::<String>(), SHORT_ILLEGALS, 11) {
    |                                                                                                               ^^^^^^^^^^^^^^ not found in this scope
    |
note: constant `crate::vfat::SHORT_ILLEGALS` exists but is inaccessible
   --> vfat.rs:134:1
    |
134 | const SHORT_ILLEGALS: &str = ";+=[]',\"*\\<>/?:|";
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find value `ILLEGALS` in this scope
   --> mk_direntry.rs:299:17
    |
299 |         (false, ILLEGALS)
    |                 ^^^^^^^^ not found in this scope

error[E0425]: cannot find function `lookup_for_insert` in this scope
   --> mk_direntry.rs:301:15
    |
301 | ...   match lookup_for_insert(dir, &mut entry, dosname, longname, ssp, ch.ignore_entry, ch.source_entry, pessimistic_short_rename && ch.u...
    |             ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `dir_read` in this scope
   --> mk_direntry.rs:322:12
    |
322 |         if dir_read(&mut entry).is_err() {
    |            ^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::directory::dir_read;
    |

error[E0425]: cannot find function `is_dir` in this scope
   --> mk_direntry.rs:325:50
    |
325 |         no_overwrite = match_pos == ch.source || is_dir(&entry);
    |                                                  ^^^^^^ not found in this scope

error[E0425]: cannot find function `ask_confirmation` in this scope
   --> mk_direntry.rs:331:43
    |
331 |         if (entry.dir.attr & 0x5) != 0 && ask_confirmation("file is read only, overwrite anyway (y/n)? ") {
    |                                           ^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::mtools::ask_confirmation;
    |

error[E0425]: cannot find function `fat_free_with_direntry` in this scope
   --> mk_direntry.rs:334:12
    |
334 |         if fat_free_with_direntry(&entry).is_err() {
    |            ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> fat_free.rs:102:1
    |
102 | fn fat_free_with_direntry(entry: &Direntry_t) -> io::Result<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::fat_free::fat_free_with_direntry`: not accessible
    |
   ::: mdel.rs:56:5
    |
56  |     pub fn fat_free_with_direntry(entry: &Direntry) -> io::Result<()> { Ok(()) }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::fat_free_with_direntry`: not accessible

error[E0425]: cannot find function `wipe_entry` in this scope
   --> mk_direntry.rs:337:9
    |
337 |         wipe_entry(&entry);
    |         ^^^^^^^^^^ not found in this scope
    |
note: function `crate::mdel::wipe_entry` exists but is inaccessible
   --> mdel.rs:80:1
    |
80  | fn wipe_entry(entry: &mut mtools::Direntry) -> io::Result<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0412]: cannot find type `ScanState` in this scope
   --> mk_direntry.rs:348:11
    |
348 |     ssp: &ScanState,
    |           ^^^^^^^^^ not found in this scope
    |
note: struct `crate::vfat::ScanState` exists but is inaccessible
   --> vfat.rs:114:1
    |
114 | struct ScanState {
    | ^^^^^^^^^^^^^^^^ not accessible

error[E0405]: cannot find trait `Any` in this scope
   --> mk_direntry.rs:349:42
    |
349 |     cb: &dyn Fn(&DosName, &str, &mut dyn Any, &Direntry) -> i32,
    |                                          ^^^ not found in this scope
    |
help: consider importing one of these items
    |
22  | use core::any::Any;
    |
22  | use std::any::Any;
    |

error[E0405]: cannot find trait `Any` in this scope
   --> mk_direntry.rs:350:19
    |
350 |     arg: &mut dyn Any,
    |                   ^^^ not found in this scope
    |
help: consider importing one of these items
    |
22  | use core::any::Any;
    |
22  | use std::any::Any;
    |

error[E0425]: cannot find function `fat_error` in this scope
   --> mk_direntry.rs:353:8
    |
353 |     if fat_error(dir) {
    |        ^^^^^^^^^ not found in this scope
    |
note: function `crate::mainloop::fat_error` exists but is inaccessible
   --> mainloop.rs:37:5
    |
37  |     fn fat_error(stream: *mut Stream_t) -> c_int;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `set_entry_to_pos` in this scope
   --> mk_direntry.rs:359:5
    |
359 |     set_entry_to_pos(&mut entry, ssp.slot);
    |     ^^^^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::mdel::mtools::set_entry_to_pos` exists but is inaccessible
   --> mdel.rs:50:5
    |
50  |     pub fn set_entry_to_pos(entry: &mut Direntry, pos: u32) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `native_to_wchar` in this scope
   --> mk_direntry.rs:360:5
    |
360 |     native_to_wchar(longname, &mut entry.name, MAX_VNAMELEN, 0, 0);
    |     ^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::file_name::native_to_wchar;
    |

error[E0425]: cannot find value `MAX_VNAMELEN` in this scope
   --> mk_direntry.rs:360:48
    |
360 |     native_to_wchar(longname, &mut entry.name, MAX_VNAMELEN, 0, 0);
    |                                                ^^^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:68:1
    |
68  | const MAX_VNAMELEN: usize = 255;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::MAX_VNAMELEN`: not accessible
    |
   ::: mdir.rs:35:1
    |
35  | const MAX_VNAMELEN: usize = 256;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::MAX_VNAMELEN`: not accessible
    |
   ::: vfat.rs:19:1
    |
19  | const MAX_VNAMELEN: usize = 255;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::MAX_VNAMELEN`: not accessible

error[E0425]: cannot find value `MAX_VNAMELEN` in this scope
   --> mk_direntry.rs:361:16
    |
361 |     entry.name[MAX_VNAMELEN] = '\0';
    |                ^^^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:68:1
    |
68  | const MAX_VNAMELEN: usize = 255;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::MAX_VNAMELEN`: not accessible
    |
   ::: mdir.rs:35:1
    |
35  | const MAX_VNAMELEN: usize = 256;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::MAX_VNAMELEN`: not accessible
    |
   ::: vfat.rs:19:1
    |
19  | const MAX_VNAMELEN: usize = 255;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::MAX_VNAMELEN`: not accessible

error[E0425]: cannot find value `EXTCASE` in this scope
   --> mk_direntry.rs:362:30
    |
362 |     entry.dir.case = case & (EXTCASE | BASECASE);
    |                              ^^^^^^^ not found in this scope
    |
note: constant `crate::file_name::EXTCASE` exists but is inaccessible
   --> file_name.rs:402:1
    |
402 | const EXTCASE: i32 = 0x08;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find value `BASECASE` in this scope
   --> mk_direntry.rs:362:40
    |
362 |     entry.dir.case = case & (EXTCASE | BASECASE);
    |                                        ^^^^^^^^ not found in this scope
    |
note: constant `crate::file_name::BASECASE` exists but is inaccessible
   --> file_name.rs:401:1
    |
401 | const BASECASE: i32 = 0x04;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `write_vfat` in this scope
   --> mk_direntry.rs:366:24
    |
366 |             ssp.slot = write_vfat(dir, dosname, longname, ssp.free_start, &entry);
    |                        ^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `write_vfat` in this scope
   --> mk_direntry.rs:369:13
    |
369 |             write_vfat(dir, dosname, "", ssp.free_start, &entry);
    |             ^^^^^^^^^^ not found in this scope

error[E0405]: cannot find trait `Any` in this scope
   --> mk_direntry.rs:387:42
    |
387 |     cb: &dyn Fn(&DosName, &str, &mut dyn Any, &Direntry) -> i32,
    |                                          ^^^ not found in this scope
    |
help: consider importing one of these items
    |
22  | use core::any::Any;
    |
22  | use std::any::Any;
    |

error[E0405]: cannot find trait `Any` in this scope
   --> mk_direntry.rs:388:19
    |
388 |     arg: &mut dyn Any,
    |                   ^^^ not found in this scope
    |
help: consider importing one of these items
    |
22  | use core::any::Any;
    |
22  | use std::any::Any;
    |

error[E0425]: cannot find value `VBUFSIZE` in this scope
   --> mk_direntry.rs:391:46
    |
391 |     let mut longname = String::with_capacity(VBUFSIZE);
    |                                              ^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:69:1
    |
69  | const VBUFSIZE: usize = 1024;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::VBUFSIZE`: not accessible
    |
   ::: mdir.rs:36:1
    |
36  | const VBUFSIZE: usize = MAX_VNAMELEN * 4 + 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::VBUFSIZE`: not accessible
    |
   ::: mlabel.rs:37:1
    |
37  | const VBUFSIZE: usize = 256;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mlabel::VBUFSIZE`: not accessible
    |
   ::: vfat.rs:18:1
    |
18  | const VBUFSIZE: usize = (MAX_VFAT_SUBENTRIES * VSE_NAMELEN) + 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::VBUFSIZE`: not accessible

error[E0425]: cannot find function `get_dosconvert` in this scope
   --> mk_direntry.rs:392:14
    |
392 |     let cp = get_dosconvert(dir);
    |              ^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `is_special` in this scope
   --> mk_direntry.rs:396:8
    |
396 |     if is_special(argname) {
    |        ^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::file_name::is_special;
    |

error[E0425]: cannot find value `dos_name` in this scope
   --> mk_direntry.rs:401:29
    |
401 |     if ch.name_converter == dos_name {
    |                             ^^^^^^^^
    |
help: a local variable with a similar name exists
    |
401 |     if ch.name_converter == dosname {
    |                             ~~~~~~~
help: consider importing this function
    |
22  | use crate::file_name::dos_name;
    |

error[E0433]: failed to resolve: use of undeclared type `ScanState`
   --> mk_direntry.rs:439:20
    |
439 |     let mut scan = ScanState::default();
    |                    ^^^^^^^^^ not found in this scope
    |
note: struct `crate::vfat::ScanState` exists but is inaccessible
   --> vfat.rs:114:1
    |
114 | struct ScanState {
    | ^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find value `progname` in this scope
   --> mk_direntry.rs:451:57
    |
451 |                     eprintln!("{}: No directory slots", progname);
    |                                                         ^^^^^^^^ help: a local variable with a similar name exists: `argname`
    |
note: these items exist but are inaccessible
   --> mbadblocks.rs:274:1
    |
274 | fn progname() -> String { String::new() }
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::progname`: not accessible
    |
   ::: mdel.rs:45:5
    |
45  |     pub static mut progname: &'static str = "";
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::progname`: not accessible
    |
   ::: minfo.rs:223:1
    |
223 | fn progname() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::minfo::progname`: not accessible

error[E0425]: cannot find function `dir_grow` in this scope
   --> mk_direntry.rs:455:20
    |
455 |                 if dir_grow(dir, scan.max_entry).is_err() {
    |                    ^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::directory::dir_grow;
    |

error[E0425]: cannot find value `ret` in this scope
   --> mk_direntry.rs:468:64
    |
468 |                 eprintln!("Internal error: clash_action={:?}", ret);
    |                                                                ^^^ not found in this scope

error[E0405]: cannot find trait `Any` in this scope
   --> mk_direntry.rs:479:42
    |
479 |     cb: &dyn Fn(&DosName, &str, &mut dyn Any, &Direntry) -> i32,
    |                                          ^^^ not found in this scope
    |
help: consider importing one of these items
    |
22  | use core::any::Any;
    |
22  | use std::any::Any;
    |

error[E0405]: cannot find trait `Any` in this scope
   --> mk_direntry.rs:480:19
    |
480 |     arg: &mut dyn Any,
    |                   ^^^ not found in this scope
    |
help: consider importing one of these items
    |
22  | use core::any::Any;
    |
22  | use std::any::Any;
    |

error[E0425]: cannot find value `mt_mwrite` in this scope
   --> mk_direntry.rs:485:5
    |
485 |     mt_mwrite
    |     ^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `native_to_wchar` in this scope
   --> mlabel.rs:104:15
    |
104 |     let len = native_to_wchar(filename, &mut wbuffer, 11, 0, 0);
    |               ^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::file_name::native_to_wchar;
    |

error[E0425]: cannot find function `ch_towupper` in this scope
   --> mlabel.rs:127:26
    |
127 |             wbuffer[i] = ch_towupper(wbuffer[i]);
    |                          ^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `wchar_to_dos` in this scope
   --> mlabel.rs:146:5
    |
146 |     wchar_to_dos(cp, &wbuffer, &mut ans.base, len, mangled);
    |     ^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::file_name::wchar_to_dos;
    |

error[E0425]: cannot find function `mk_entry` in this scope
   --> mlabel.rs:168:5
    |
168 |     mk_entry(dosname, 0x8, 0, 0, now as i32, &mut entry.dir);
    |     ^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::directory::mk_entry;
    |

error[E0425]: cannot find value `mversion` in this scope
   --> mlabel.rs:173:46
    |
173 |     eprintln!("Mtools version {}, dated {}", mversion, mdate);
    |                                              ^^^^^^^^ not found in this scope
    |
help: consider importing this static
    |
22  | use crate::mtools::mversion;
    |

error[E0425]: cannot find value `mdate` in this scope
   --> mlabel.rs:173:56
    |
173 |     eprintln!("Mtools version {}, dated {}", mversion, mdate);
    |                                                        ^^^^^ not found in this scope
    |
help: consider importing this static
    |
22  | use crate::mtools::mdate;
    |

error[E0425]: cannot find value `progname` in this scope
   --> mlabel.rs:174:56
    |
174 |     eprintln!("Usage: {} [-vscVn] [-N serial] drive:", progname);
    |                                                        ^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> mbadblocks.rs:274:1
    |
274 | fn progname() -> String { String::new() }
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::progname`: not accessible
    |
   ::: mdel.rs:45:5
    |
45  |     pub static mut progname: &'static str = "";
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::progname`: not accessible
    |
   ::: minfo.rs:223:1
    |
223 | fn progname() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::minfo::progname`: not accessible

error[E0425]: cannot find value `optind` in this scope
   --> mlabel.rs:206:15
    |
206 |     if argc - optind > 1 {
    |               ^^^^^^ not found in this scope

error[E0425]: cannot find value `optind` in this scope
   --> mlabel.rs:210:15
    |
210 |     if argc - optind == 1 {
    |               ^^^^^^ not found in this scope

error[E0425]: cannot find value `optind` in this scope
   --> mlabel.rs:211:25
    |
211 |         let arg = &argv[optind as usize];
    |                         ^^^^^^ not found in this scope

error[E0425]: cannot find function `get_default_drive` in this scope
   --> mlabel.rs:218:17
    |
218 |         drive = get_default_drive();
    |                 ^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> config.rs:145:1
    |
145 | fn get_default_drive() -> char {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::config::get_default_drive`: not accessible
    |
   ::: mainloop.rs:16:5
    |
16  |     fn get_default_drive() -> c_char;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::get_default_drive`: not accessible
    |
   ::: mcat.rs:151:1
    |
151 | fn get_default_drive() -> char {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mcat::get_default_drive`: not accessible

error[E0425]: cannot find function `open_root_dir` in this scope
   --> mlabel.rs:237:16
    |
237 |     root_dir = open_root_dir(drive, if is_rop.is_some() { 0 } else { O_RDWR }, is_rop.is_some());
    |                ^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mbadblocks.rs:275:1
    |
275 | fn open_root_dir(path: &str, options: std::fs::OpenOptions) -> io::Result<File> { File::open(path) }
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::open_root_dir`: not accessible
    |
   ::: stream.rs:177:1
    |
177 | fn open_root_dir(drivename: char, flags: i32, is_rop: &mut bool) -> io::Result<Option<Arc<Stream>>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::stream::open_root_dir`: not accessible
    |
   ::: streamcache.rs:67:1
    |
67  | fn open_root_dir(drive: char, flags: i32, is_rop: &mut i32) -> Option<Arc<StreamT>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::streamcache::open_root_dir`: not accessible

error[E0425]: cannot find value `O_RDWR` in this scope
   --> mlabel.rs:237:70
    |
237 |     root_dir = open_root_dir(drive, if is_rop.is_some() { 0 } else { O_RDWR }, is_rop.is_some());
    |                                                                      ^^^^^^ not found in this scope
    |
help: consider importing this constant
    |
22  | use libc::O_RDWR;
    |

error[E0425]: cannot find function `initialize_direntry` in this scope
   --> mlabel.rs:248:5
    |
248 |     initialize_direntry(&mut entry, root_dir.as_ref().unwrap());
    |     ^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::mdel::mtools::initialize_direntry` exists but is inaccessible
   --> mdel.rs:49:5
    |
49  |     pub fn initialize_direntry(entry: &mut Direntry, dir: *const ()) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `vfat_lookup` in this scope
   --> mlabel.rs:249:13
    |
249 |     let r = vfat_lookup(
    |             ^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mainloop.rs:18:5
    |
18  | /     fn vfat_lookup(
19  | |         entry: *mut direntry_t,
20  | |         name: *const c_char,
21  | |         len: usize,
...   |
26  | |         longlen: usize,
27  | |     ) -> c_int;
    | |_______________^ `crate::mainloop::vfat_lookup`: not accessible
    |
   ::: mdel.rs:58:5
    |
58  | /     pub fn vfat_lookup(
59  | |         entry: &mut Direntry,
60  | |         pattern: &str,
61  | |         _: u32,
...   |
66  | |         _: u32,
67  | |     ) -> i32 { 0 }
    | |__________________^ `crate::mdel::mtools::vfat_lookup`: not accessible

error[E0425]: cannot find value `ACCEPT_LABEL` in this scope
   --> mlabel.rs:253:9
    |
253 |         ACCEPT_LABEL | MATCH_ANY,
    |         ^^^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mdir.rs:80:1
    |
80  | const ACCEPT_LABEL: u32 = 0x40;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ACCEPT_LABEL`: not accessible
    |
   ::: vfat.rs:29:1
    |
29  | const ACCEPT_LABEL: u32 = 0x08;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::ACCEPT_LABEL`: not accessible

error[E0425]: cannot find value `MATCH_ANY` in this scope
   --> mlabel.rs:253:24
    |
253 |         ACCEPT_LABEL | MATCH_ANY,
    |                        ^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mdir.rs:81:1
    |
81  | const MATCH_ANY: u32 = 0x80;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::MATCH_ANY`: not accessible
    |
   ::: vfat.rs:32:1
    |
32  | const MATCH_ANY: u32 = 0x40;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::MATCH_ANY`: not accessible

error[E0425]: cannot find function `is_not_found` in this scope
   --> mlabel.rs:265:12
    |
265 |         if is_not_found(&entry) {
    |            ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `is_not_found` in this scope
   --> mlabel.rs:288:45
    |
288 |     if (!show || !new_label.is_empty()) && !is_not_found(&entry) {
    |                                             ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `ask_confirmation` in this scope
   --> mlabel.rs:290:16
    |
290 |             if ask_confirmation("Delete volume label (y/n): ") {
    |                ^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::mtools::ask_confirmation;
    |

error[E0425]: cannot find function `wipe_entry` in this scope
   --> mlabel.rs:295:9
    |
295 |         wipe_entry(&mut entry);
    |         ^^^^^^^^^^ not found in this scope
    |
note: function `crate::mdel::wipe_entry` exists but is inaccessible
   --> mdel.rs:80:1
    |
80  | fn wipe_entry(entry: &mut mtools::Direntry) -> io::Result<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `mwrite_one` in this scope
   --> mlabel.rs:300:21
    |
300 |         result = if mwrite_one(
    |                     ^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mk_direntry.rs:475:1
    |
475 | / fn mwrite_one(
476 | |     dir: &Stream,
477 | |     argname: Option<&str>,
478 | |     shortname: Option<&str>,
...   |
484 | |     let shortname = shortname.map(|s| s.to_string());
485 | |     mt_mwrite
    | |_____________^ `crate::mk_direntry::mwrite_one`: not accessible
    |
   ::: mmd.rs:97:5
    |
97  | /     pub fn mwrite_one(
98  | |         _dir: *mut Stream,
99  | |         _filename: &str,
100 | |         _flags: i32,
...   |
106 | |         1
107 | |     }
    | |_____^ `crate::mmd::mtools::mwrite_one`: not accessible

error[E0425]: cannot find function `get_fs` in this scope
   --> mlabel.rs:316:18
    |
316 |         let fs = get_fs(root_dir.as_ref().unwrap());
    |                  ^^^^^^ not found in this scope
    |
note: function `crate::fat_free::get_fs` exists but is inaccessible
   --> fat_free.rs:48:1
    |
48  | fn get_fs(_dir: &Stream_t) -> Fs_t {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `force_pread` in this scope
   --> mlabel.rs:317:21
    |
317 |         have_boot = force_pread(fs, &mut boot.characters, 0, std::mem::size_of::<BootSector>())
    |                     ^^^^^^^^^^^ not found in this scope
    |
note: function `crate::force_io::force_pread` exists but is inaccessible
   --> force_io.rs:83:1
    |
83  | fn force_pread(stream: &Stream, buf: &mut [u8], start: u64, len: usize) -> io::Result<usize> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find value `boot` in this scope
   --> mlabel.rs:317:42
    |
317 |         have_boot = force_pread(fs, &mut boot.characters, 0, std::mem::size_of::<BootSector>())
    |                                          ^^^^ not found in this scope

error[E0412]: cannot find type `BootSector` in this scope
   --> mlabel.rs:317:82
    |
317 |         have_boot = force_pread(fs, &mut boot.characters, 0, std::mem::size_of::<BootSector>())
    |                                                                                  ^^^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> init.rs:41:1
    |
41  | struct BootSector {
    | ^^^^^^^^^^^^^^^^^ `crate::init::BootSector`: not accessible
    |
   ::: mformat.rs:69:1
    |
69  | union BootSector {
    | ^^^^^^^^^^^^^^^^ `crate::mformat::BootSector`: not accessible
    |
   ::: minfo.rs:32:1
    |
32  | struct BootSector {
    | ^^^^^^^^^^^^^^^^^ `crate::minfo::BootSector`: not accessible

error[E0412]: cannot find type `BootSector` in this scope
   --> mlabel.rs:318:36
    |
318 |             == std::mem::size_of::<BootSector>();
    |                                    ^^^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> init.rs:41:1
    |
41  | struct BootSector {
    | ^^^^^^^^^^^^^^^^^ `crate::init::BootSector`: not accessible
    |
   ::: mformat.rs:69:1
    |
69  | union BootSector {
    | ^^^^^^^^^^^^^^^^ `crate::mformat::BootSector`: not accessible
    |
   ::: minfo.rs:32:1
    |
32  | struct BootSector {
    | ^^^^^^^^^^^^^^^^^ `crate::minfo::BootSector`: not accessible

error[E0433]: failed to resolve: use of undeclared type `SystemTime`
  --> mmd.rs:90:16
   |
90 |         *now = SystemTime::now()
   |                ^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
9  |     use crate::mmd::SystemTime;
   |
9  |     use std::time::SystemTime;
   |

error[E0425]: cannot find value `UNIX_EPOCH` in this scope
  --> mmd.rs:91:29
   |
91 |             .duration_since(UNIX_EPOCH)
   |                             ^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
9  |     use crate::mmd::UNIX_EPOCH;
   |
9  |     use std::time::UNIX_EPOCH;
   |

error[E0425]: cannot find value `optind` in crate `libc`
   --> mmd.rs:326:30
    |
326 |     if argc - unsafe { libc::optind } < 1 {
    |                              ^^^^^^ not found in `libc`

error[E0425]: cannot find value `optind` in crate `libc`
   --> mmd.rs:335:36
    |
335 |         unsafe { argv.offset(libc::optind as isize) },
    |                                    ^^^^^^ not found in `libc`

error[E0425]: cannot find value `optind` in crate `libc`
   --> mmd.rs:336:31
    |
336 |         argc - unsafe { libc::optind },
    |                               ^^^^^^ not found in `libc`

error[E0412]: cannot find type `MainParam` in this scope
  --> mmove.rs:44:9
   |
44 |     mp: MainParam,
   |         ^^^^^^^^^ not found in this scope
   |
note: these structs exist but are inaccessible
  --> mattrib.rs:42:1
   |
42 | struct MainParam<'a> {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
   |
  ::: mdel.rs:30:5
   |
30 |     pub struct MainParam;
   |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
   |
  ::: mdir.rs:59:1
   |
59 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
   |
  ::: mmd.rs:9:5
   |
9  |     pub struct MainParam {
   |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
   |
  ::: mshortname.rs:28:1
   |
28 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
   |
  ::: unixdir.rs:85:1
   |
85 | struct MainParam;
   | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0412]: cannot find type `Direntry` in this scope
  --> mmove.rs:45:19
   |
45 |     entry: Option<Direntry>,
   |                   ^^^^^^^^
   |
  ::: mtools.rs:54:1
   |
54 | pub struct Directory {
   | -------------------- similarly named struct `Directory` defined here
   |
help: a struct with a similar name exists
   |
45 |     entry: Option<Directory>,
   |                   ~~~~~~~~~
help: consider importing this struct
   |
22 | use crate::direntry::Direntry;
   |

error[E0412]: cannot find type `ClashHandling` in this scope
  --> mmove.rs:46:9
   |
46 |     ch: ClashHandling,
   |         ^^^^^^^^^^^^^ not found in this scope
   |
note: these items exist but are inaccessible
  --> mk_direntry.rs:63:1
   |
63 | struct ClashHandling {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mk_direntry::ClashHandling`: not accessible
   |
  ::: mlabel.rs:74:1
   |
74 | struct ClashHandling {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mlabel::ClashHandling`: not accessible
   |
  ::: mmd.rs:32:5
   |
32 |     pub enum ClashHandling {
   |     ^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ClashHandling`: not accessible

error[E0412]: cannot find type `Direntry` in this scope
  --> mmove.rs:49:91
   |
49 | fn renameit(dosname: &DosName, longname: Option<&str>, arg0: &mut Arg, target_entry: &mut Direntry) -> Result<(), Error> {
   |                                                                                           ^^^^^^^^
   |
  ::: mtools.rs:54:1
   |
54 | pub struct Directory {
   | -------------------- similarly named struct `Directory` defined here
   |
help: a struct with a similar name exists
   |
49 | fn renameit(dosname: &DosName, longname: Option<&str>, arg0: &mut Arg, target_entry: &mut Directory) -> Result<(), Error> {
   |                                                                                           ~~~~~~~~~
help: consider importing this struct
   |
22 | use crate::direntry::Direntry;
   |

error[E0425]: cannot find function `dosname_to_direntry` in this scope
   --> mmove.rs:54:5
    |
54  |     dosname_to_direntry(dosname, &mut target_entry.dir)?;
    |     ^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::directory::dosname_to_direntry` exists but is inaccessible
   --> directory.rs:173:1
    |
173 | fn dosname_to_direntry(dn: &DosName, dir: &mut Directory) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `is_dir` in this scope
  --> mmove.rs:56:8
   |
56 |     if is_dir(target_entry) {
   |        ^^^^^^ not found in this scope

error[E0425]: cannot find function `get_direntry` in this scope
  --> mmove.rs:57:27
   |
57 |         let moved_entry = get_direntry(&arg.mp.file)?;
   |                           ^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `Direntry`
  --> mmove.rs:60:33
   |
60 |             let mut sub_entry = Direntry::new();
   |                                 ^^^^^^^^
   |
  ::: mtools.rs:54:1
   |
54 | pub struct Directory {
   | -------------------- similarly named struct `Directory` defined here
   |
help: a struct with a similar name exists
   |
60 |             let mut sub_entry = Directory::new();
   |                                 ~~~~~~~~~
help: consider importing this struct
   |
22 | use crate::direntry::Direntry;
   |

error[E0425]: cannot find function `initialize_direntry` in this scope
  --> mmove.rs:61:13
   |
61 |             initialize_direntry(&mut sub_entry, &arg.mp.file)?;
   |             ^^^^^^^^^^^^^^^^^^^ not found in this scope
   |
note: function `crate::mdel::mtools::initialize_direntry` exists but is inaccessible
  --> mdel.rs:49:5
   |
49 |     pub fn initialize_direntry(entry: &mut Direntry, dir: *const ()) {}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `vfat_lookup` in this scope
  --> mmove.rs:63:19
   |
63 |             match vfat_lookup(&mut sub_entry, "..", 2, ACCEPT_DIR, None, 0, None, 0) {
   |                   ^^^^^^^^^^^ not found in this scope
   |
note: these functions exist but are inaccessible
  --> mainloop.rs:18:5
   |
18 | /     fn vfat_lookup(
19 | |         entry: *mut direntry_t,
20 | |         name: *const c_char,
21 | |         len: usize,
...  |
26 | |         longlen: usize,
27 | |     ) -> c_int;
   | |_______________^ `crate::mainloop::vfat_lookup`: not accessible
   |
  ::: mdel.rs:58:5
   |
58 | /     pub fn vfat_lookup(
59 | |         entry: &mut Direntry,
60 | |         pattern: &str,
61 | |         _: u32,
...  |
66 | |         _: u32,
67 | |     ) -> i32 { 0 }
   | |__________________^ `crate::mdel::mtools::vfat_lookup`: not accessible

error[E0425]: cannot find value `ACCEPT_DIR` in this scope
  --> mmove.rs:63:56
   |
63 |             match vfat_lookup(&mut sub_entry, "..", 2, ACCEPT_DIR, None, 0, None, 0) {
   |                                                        ^^^^^^^^^^ not found in this scope
   |
note: these constants exist but are inaccessible
  --> mainloop.rs:72:1
   |
72 | const ACCEPT_DIR: c_int = 0x02;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ACCEPT_DIR`: not accessible
   |
  ::: mattrib.rs:83:1
   |
83 | const ACCEPT_DIR: u32 = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::ACCEPT_DIR`: not accessible
   |
  ::: mdel.rs:38:5
   |
38 |     pub const ACCEPT_DIR: u32 = 0x02;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ACCEPT_DIR`: not accessible
   |
  ::: mdir.rs:74:1
   |
74 | const ACCEPT_DIR: u32 = 0x01;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ACCEPT_DIR`: not accessible
   |
  ::: mshortname.rs:93:1
   |
93 | const ACCEPT_DIR: u32 = 0x2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::ACCEPT_DIR`: not accessible
   |
  ::: vfat.rs:30:1
   |
30 | const ACCEPT_DIR: u32 = 0x10;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::ACCEPT_DIR`: not accessible

error[E0425]: cannot find function `get_data` in this scope
  --> mmove.rs:69:21
   |
69 |                     get_data(&target_entry.dir, 0, 0, 0, &mut fat)?;
   |                     ^^^^^^^^ not found in this scope

error[E0425]: cannot find function `fat32_root_cluster` in this scope
  --> mmove.rs:70:31
   |
70 |                     if fat == fat32_root_cluster(&target_entry.dir) {
   |                               ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
note: function `crate::fat_free::fat32_root_cluster` exists but is inaccessible
  --> fat_free.rs:56:1
   |
56 | fn fat32_root_cluster(_dir: &Stream_t) -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `dir_write` in this scope
  --> mmove.rs:76:21
   |
76 |                     dir_write(&sub_entry)?;
   |                     ^^^^^^^^^ not found in this scope
   |
note: these functions exist but are inaccessible
  --> mattrib.rs:92:1
   |
92 | fn dir_write(_entry: &Direntry) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::dir_write`: not accessible
   |
  ::: mdel.rs:52:5
   |
52 |     pub fn dir_write(entry: &mut Direntry) -> io::Result<()> { Ok(()) }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::dir_write`: not accessible
   |
  ::: mmd.rs:75:5
   |
75 |     pub fn dir_write(_entry: &Direntry) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::dir_write`: not accessible

error[E0425]: cannot find function `wipe_entry` in this scope
  --> mmove.rs:84:13
   |
84 |             wipe_entry(&moved_entry)?;
   |             ^^^^^^^^^^ not found in this scope
   |
note: function `crate::mdel::wipe_entry` exists but is inaccessible
  --> mdel.rs:80:1
   |
80 | fn wipe_entry(entry: &mut mtools::Direntry) -> io::Result<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `wipe_entry` in this scope
  --> mmove.rs:93:5
   |
93 |     wipe_entry(arg.mp.direntry.as_mut().unwrap())?;
   |     ^^^^^^^^^^ not found in this scope
   |
note: function `crate::mdel::wipe_entry` exists but is inaccessible
  --> mdel.rs:80:1
   |
80 | fn wipe_entry(entry: &mut mtools::Direntry) -> io::Result<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0412]: cannot find type `Direntry` in this scope
  --> mmove.rs:97:28
   |
97 | fn rename_file(entry: &mut Direntry, mp: &mut MainParam) -> Result<i32, Error> {
   |                            ^^^^^^^^
   |
  ::: mtools.rs:54:1
   |
54 | pub struct Directory {
   | -------------------- similarly named struct `Directory` defined here
   |
help: a struct with a similar name exists
   |
97 | fn rename_file(entry: &mut Directory, mp: &mut MainParam) -> Result<i32, Error> {
   |                            ~~~~~~~~~
help: consider importing this struct
   |
22 | use crate::direntry::Direntry;
   |

error[E0412]: cannot find type `MainParam` in this scope
  --> mmove.rs:97:47
   |
97 | fn rename_file(entry: &mut Direntry, mp: &mut MainParam) -> Result<i32, Error> {
   |                                               ^^^^^^^^^ not found in this scope
   |
note: these structs exist but are inaccessible
  --> mattrib.rs:42:1
   |
42 | struct MainParam<'a> {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
   |
  ::: mdel.rs:30:5
   |
30 |     pub struct MainParam;
   |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
   |
  ::: mdir.rs:59:1
   |
59 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
   |
  ::: mmd.rs:9:5
   |
9  |     pub struct MainParam {
   |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
   |
  ::: mshortname.rs:28:1
   |
28 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
   |
  ::: unixdir.rs:85:1
   |
85 | struct MainParam;
   | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0425]: cannot find function `mp_pick_target_name` in this scope
   --> mmove.rs:111:20
    |
111 |     let longname = mp_pick_target_name(mp)?;
    |                    ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `mwrite_one` in this scope
   --> mmove.rs:113:18
    |
113 |     let result = mwrite_one(target_dir, longname, shortname, renameit, arg as *mut Arg as *mut c_void, &mut arg.ch)?;
    |                  ^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mk_direntry.rs:475:1
    |
475 | / fn mwrite_one(
476 | |     dir: &Stream,
477 | |     argname: Option<&str>,
478 | |     shortname: Option<&str>,
...   |
484 | |     let shortname = shortname.map(|s| s.to_string());
485 | |     mt_mwrite
    | |_____________^ `crate::mk_direntry::mwrite_one`: not accessible
    |
   ::: mmd.rs:97:5
    |
97  | /     pub fn mwrite_one(
98  | |         _dir: *mut Stream,
99  | |         _filename: &str,
100 | |         _flags: i32,
...   |
106 | |         1
107 | |     }
    | |_____^ `crate::mmd::mtools::mwrite_one`: not accessible

error[E0425]: cannot find value `GOT_ONE` in this scope
   --> mmove.rs:116:12
    |
116 |         Ok(GOT_ONE)
    |            ^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:80:1
    |
80  | const GOT_ONE: c_int = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::GOT_ONE`: not accessible
    |
   ::: mattrib.rs:81:1
    |
81  | const GOT_ONE: i32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::GOT_ONE`: not accessible
    |
   ::: mdel.rs:42:5
    |
42  |     pub const GOT_ONE: i32 = 1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::GOT_ONE`: not accessible
    |
   ::: mdir.rs:83:1
    |
83  | const GOT_ONE: i32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::GOT_ONE`: not accessible
    |
   ::: mmd.rs:43:5
    |
43  |     pub const GOT_ONE: i32 = 0;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::GOT_ONE`: not accessible
    |
   ::: mshortname.rs:26:1
    |
26  | const GOT_ONE: i32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::GOT_ONE`: not accessible

error[E0425]: cannot find value `ERROR_ONE` in this scope
   --> mmove.rs:118:12
    |
118 |         Ok(ERROR_ONE)
    |            ^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:82:1
    |
82  | const ERROR_ONE: c_int = 16;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ERROR_ONE`: not accessible
    |
   ::: mdel.rs:41:5
    |
41  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ERROR_ONE`: not accessible
    |
   ::: mdir.rs:84:1
    |
84  | const ERROR_ONE: i32 = -1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ERROR_ONE`: not accessible
    |
   ::: mmd.rs:42:5
    |
42  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ERROR_ONE`: not accessible

error[E0412]: cannot find type `Direntry` in this scope
   --> mmove.rs:122:33
    |
122 | fn rename_directory(entry: &mut Direntry, mp: &mut MainParam) -> Result<i32, Error> {
    |                                 ^^^^^^^^
    |
   ::: mtools.rs:54:1
    |
54  | pub struct Directory {
    | -------------------- similarly named struct `Directory` defined here
    |
help: a struct with a similar name exists
    |
122 | fn rename_directory(entry: &mut Directory, mp: &mut MainParam) -> Result<i32, Error> {
    |                                 ~~~~~~~~~
help: consider importing this struct
    |
22  | use crate::direntry::Direntry;
    |

error[E0412]: cannot find type `MainParam` in this scope
   --> mmove.rs:122:52
    |
122 | fn rename_directory(entry: &mut Direntry, mp: &mut MainParam) -> Result<i32, Error> {
    |                                                    ^^^^^^^^^ not found in this scope
    |
note: these structs exist but are inaccessible
   --> mattrib.rs:42:1
    |
42  | struct MainParam<'a> {
    | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
    |
   ::: mdel.rs:30:5
    |
30  |     pub struct MainParam;
    |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
    |
   ::: mdir.rs:59:1
    |
59  | struct MainParam {
    | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
    |
   ::: mmd.rs:9:5
    |
9   |     pub struct MainParam {
    |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
    |
   ::: mshortname.rs:28:1
    |
28  | struct MainParam {
    | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
    |
   ::: unixdir.rs:85:1
    |
85  | struct MainParam;
    | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0425]: cannot find function `is_subdir_of` in this scope
   --> mmove.rs:123:8
    |
123 |     if is_subdir_of(&mp.target_dir.as_ref().unwrap(), &mp.file) {
    |        ^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::direntry::is_subdir_of;
    |

error[E0425]: cannot find function `fprint_pwd` in this scope
   --> mmove.rs:125:9
    |
125 |         fprint_pwd(io::stderr(), entry, false)?;
    |         ^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mattrib.rs:96:1
    |
96  | fn fprint_pwd(_stream: &mut dyn Write, _entry: &Direntry, _full: bool) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::fprint_pwd`: not accessible
    |
   ::: mdel.rs:54:5
    |
54  |     pub fn fprint_pwd(stderr: &mut io::Stderr, entry: &Direntry, _: u32) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::fprint_pwd`: not accessible

error[E0425]: cannot find function `fprint_pwd` in this scope
   --> mmove.rs:127:9
    |
127 |         fprint_pwd(io::stderr(), &get_direntry(&mp.target_dir.as_ref().unwrap())?, false)?;
    |         ^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mattrib.rs:96:1
    |
96  | fn fprint_pwd(_stream: &mut dyn Write, _entry: &Direntry, _full: bool) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::fprint_pwd`: not accessible
    |
   ::: mdel.rs:54:5
    |
54  |     pub fn fprint_pwd(stderr: &mut io::Stderr, entry: &Direntry, _: u32) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::fprint_pwd`: not accessible

error[E0425]: cannot find function `get_direntry` in this scope
   --> mmove.rs:127:35
    |
127 |         fprint_pwd(io::stderr(), &get_direntry(&mp.target_dir.as_ref().unwrap())?, false)?;
    |                                   ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `ERROR_ONE` in this scope
   --> mmove.rs:129:19
    |
129 |         return Ok(ERROR_ONE);
    |                   ^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:82:1
    |
82  | const ERROR_ONE: c_int = 16;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ERROR_ONE`: not accessible
    |
   ::: mdel.rs:41:5
    |
41  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ERROR_ONE`: not accessible
    |
   ::: mdir.rs:84:1
    |
84  | const ERROR_ONE: i32 = -1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ERROR_ONE`: not accessible
    |
   ::: mmd.rs:42:5
    |
42  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ERROR_ONE`: not accessible

error[E0425]: cannot find function `is_root_entry` in this scope
   --> mmove.rs:132:8
    |
132 |     if is_root_entry(entry) {
    |        ^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mattrib.rs:87:1
    |
87  | fn is_root_entry(entry: &Direntry) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::is_root_entry`: not accessible
    |
   ::: mdel.rs:53:5
    |
53  |     pub fn is_root_entry(entry: &Direntry) -> bool { false }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::is_root_entry`: not accessible

error[E0425]: cannot find function `fprint_pwd` in this scope
   --> mmove.rs:134:9
    |
134 |         fprint_pwd(io::stderr(), entry, false)?;
    |         ^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mattrib.rs:96:1
    |
96  | fn fprint_pwd(_stream: &mut dyn Write, _entry: &Direntry, _full: bool) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::fprint_pwd`: not accessible
    |
   ::: mdel.rs:54:5
    |
54  |     pub fn fprint_pwd(stderr: &mut io::Stderr, entry: &Direntry, _: u32) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::fprint_pwd`: not accessible

error[E0425]: cannot find value `ERROR_ONE` in this scope
   --> mmove.rs:135:19
    |
135 |         return Ok(ERROR_ONE);
    |                   ^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:82:1
    |
82  | const ERROR_ONE: c_int = 16;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ERROR_ONE`: not accessible
    |
   ::: mdel.rs:41:5
    |
41  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ERROR_ONE`: not accessible
    |
   ::: mdir.rs:84:1
    |
84  | const ERROR_ONE: i32 = -1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ERROR_ONE`: not accessible
    |
   ::: mmd.rs:42:5
    |
42  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ERROR_ONE`: not accessible

error[E0425]: cannot find value `ERROR_ONE` in this scope
   --> mmove.rs:139:14
    |
139 |     if ret & ERROR_ONE != 0 {
    |              ^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:82:1
    |
82  | const ERROR_ONE: c_int = 16;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ERROR_ONE`: not accessible
    |
   ::: mdel.rs:41:5
    |
41  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ERROR_ONE`: not accessible
    |
   ::: mdir.rs:84:1
    |
84  | const ERROR_ONE: i32 = -1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ERROR_ONE`: not accessible
    |
   ::: mmd.rs:42:5
    |
42  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ERROR_ONE`: not accessible

error[E0412]: cannot find type `Direntry` in this scope
   --> mmove.rs:146:33
    |
146 | fn rename_oldsyntax(entry: &mut Direntry, mp: &mut MainParam) -> Result<i32, Error> {
    |                                 ^^^^^^^^
    |
   ::: mtools.rs:54:1
    |
54  | pub struct Directory {
    | -------------------- similarly named struct `Directory` defined here
    |
help: a struct with a similar name exists
    |
146 | fn rename_oldsyntax(entry: &mut Directory, mp: &mut MainParam) -> Result<i32, Error> {
    |                                 ~~~~~~~~~
help: consider importing this struct
    |
22  | use crate::direntry::Direntry;
    |

error[E0412]: cannot find type `MainParam` in this scope
   --> mmove.rs:146:52
    |
146 | fn rename_oldsyntax(entry: &mut Direntry, mp: &mut MainParam) -> Result<i32, Error> {
    |                                                    ^^^^^^^^^ not found in this scope
    |
note: these structs exist but are inaccessible
   --> mattrib.rs:42:1
    |
42  | struct MainParam<'a> {
    | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
    |
   ::: mdel.rs:30:5
    |
30  |     pub struct MainParam;
    |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
    |
   ::: mdir.rs:59:1
    |
59  | struct MainParam {
    | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
    |
   ::: mmd.rs:9:5
    |
9   |     pub struct MainParam {
    |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
    |
   ::: mshortname.rs:28:1
    |
28  | struct MainParam {
    | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
    |
   ::: unixdir.rs:85:1
    |
85  | struct MainParam;
    | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0425]: cannot find function `mwrite_one` in this scope
   --> mmove.rs:157:18
    |
157 |     let result = mwrite_one(target_dir, longname, shortname, renameit, arg as *mut Arg as *mut c_void, &mut arg.ch)?;
    |                  ^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mk_direntry.rs:475:1
    |
475 | / fn mwrite_one(
476 | |     dir: &Stream,
477 | |     argname: Option<&str>,
478 | |     shortname: Option<&str>,
...   |
484 | |     let shortname = shortname.map(|s| s.to_string());
485 | |     mt_mwrite
    | |_____________^ `crate::mk_direntry::mwrite_one`: not accessible
    |
   ::: mmd.rs:97:5
    |
97  | /     pub fn mwrite_one(
98  | |         _dir: *mut Stream,
99  | |         _filename: &str,
100 | |         _flags: i32,
...   |
106 | |         1
107 | |     }
    | |_____^ `crate::mmd::mtools::mwrite_one`: not accessible

error[E0425]: cannot find value `GOT_ONE` in this scope
   --> mmove.rs:160:12
    |
160 |         Ok(GOT_ONE)
    |            ^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:80:1
    |
80  | const GOT_ONE: c_int = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::GOT_ONE`: not accessible
    |
   ::: mattrib.rs:81:1
    |
81  | const GOT_ONE: i32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::GOT_ONE`: not accessible
    |
   ::: mdel.rs:42:5
    |
42  |     pub const GOT_ONE: i32 = 1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::GOT_ONE`: not accessible
    |
   ::: mdir.rs:83:1
    |
83  | const GOT_ONE: i32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::GOT_ONE`: not accessible
    |
   ::: mmd.rs:43:5
    |
43  |     pub const GOT_ONE: i32 = 0;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::GOT_ONE`: not accessible
    |
   ::: mshortname.rs:26:1
    |
26  | const GOT_ONE: i32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::GOT_ONE`: not accessible

error[E0425]: cannot find value `ERROR_ONE` in this scope
   --> mmove.rs:162:12
    |
162 |         Ok(ERROR_ONE)
    |            ^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:82:1
    |
82  | const ERROR_ONE: c_int = 16;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ERROR_ONE`: not accessible
    |
   ::: mdel.rs:41:5
    |
41  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ERROR_ONE`: not accessible
    |
   ::: mdir.rs:84:1
    |
84  | const ERROR_ONE: i32 = -1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ERROR_ONE`: not accessible
    |
   ::: mmd.rs:42:5
    |
42  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ERROR_ONE`: not accessible

error[E0425]: cannot find value `progname` in this scope
   --> mmove.rs:168:68
    |
168 |     eprintln!("Usage: {} [-vV] [-D clash_option] file targetfile", progname);
    |                                                                    ^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> mbadblocks.rs:274:1
    |
274 | fn progname() -> String { String::new() }
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::progname`: not accessible
    |
   ::: mdel.rs:45:5
    |
45  |     pub static mut progname: &'static str = "";
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::progname`: not accessible
    |
   ::: minfo.rs:223:1
    |
223 | fn progname() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::minfo::progname`: not accessible

error[E0425]: cannot find value `progname` in this scope
   --> mmove.rs:169:85
    |
169 |     eprintln!("       {} [-vV] [-D clash_option] file [files...] target_directory", progname);
    |                                                                                     ^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> mbadblocks.rs:274:1
    |
274 | fn progname() -> String { String::new() }
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::progname`: not accessible
    |
   ::: mdel.rs:45:5
    |
45  |     pub static mut progname: &'static str = "";
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::progname`: not accessible
    |
   ::: minfo.rs:223:1
    |
223 | fn progname() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::minfo::progname`: not accessible

error[E0433]: failed to resolve: use of undeclared type `MainParam`
   --> mmove.rs:177:13
    |
177 |         mp: MainParam::new(),
    |             ^^^^^^^^^ not found in this scope
    |
note: these structs exist but are inaccessible
   --> mattrib.rs:42:1
    |
42  | struct MainParam<'a> {
    | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
    |
   ::: mdel.rs:30:5
    |
30  |     pub struct MainParam;
    |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
    |
   ::: mdir.rs:59:1
    |
59  | struct MainParam {
    | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
    |
   ::: mmd.rs:9:5
    |
9   |     pub struct MainParam {
    |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
    |
   ::: mshortname.rs:28:1
    |
28  | struct MainParam {
    | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
    |
   ::: unixdir.rs:85:1
    |
85  | struct MainParam;
    | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0433]: failed to resolve: use of undeclared type `ClashHandling`
   --> mmove.rs:179:13
    |
179 |         ch: ClashHandling::new(),
    |             ^^^^^^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> mk_direntry.rs:63:1
    |
63  | struct ClashHandling {
    | ^^^^^^^^^^^^^^^^^^^^ `crate::mk_direntry::ClashHandling`: not accessible
    |
   ::: mlabel.rs:74:1
    |
74  | struct ClashHandling {
    | ^^^^^^^^^^^^^^^^^^^^ `crate::mlabel::ClashHandling`: not accessible
    |
   ::: mmd.rs:32:5
    |
32  |     pub enum ClashHandling {
    |     ^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ClashHandling`: not accessible

error[E0425]: cannot find function `init_clash_handling` in this scope
   --> mmove.rs:182:5
    |
182 |     init_clash_handling(&mut arg.ch);
    |     ^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::mmd::mtools::init_clash_handling` exists but is inaccessible
   --> mmd.rs:120:5
    |
120 |     pub fn init_clash_handling(ch: &mut ClashHandling) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `help_flag` in this scope
   --> mmove.rs:184:8
    |
184 |     if help_flag(argc, &argv) {
    |        ^^^^^^^^^ not found in this scope
    |
note: function `crate::mdel::mtools::help_flag` exists but is inaccessible
   --> mdel.rs:72:5
    |
72  |     pub fn help_flag(_: i32, _: &[&str]) -> bool { false }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `set_cmd_line_image` in this scope
   --> mmove.rs:208:9
    |
208 |         set_cmd_line_image(&img);
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mdel.rs:71:5
    |
71  |     pub fn set_cmd_line_image(_: &str) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::set_cmd_line_image`: not accessible
    |
   ::: mmd.rs:134:5
    |
134 |     pub fn set_cmd_line_image(_optarg: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::set_cmd_line_image`: not accessible
    |
   ::: mshortname.rs:89:1
    |
89  | fn set_cmd_line_image(_image: &str) {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::set_cmd_line_image`: not accessible

error[E0425]: cannot find function `handle_clash_options` in this scope
   --> mmove.rs:214:9
    |
214 |         handle_clash_options(&mut arg.ch, 'o');
    |         ^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::mmd::mtools::handle_clash_options` exists but is inaccessible
   --> mmd.rs:124:5
    |
124 |     pub fn handle_clash_options(ch: &mut ClashHandling, opt: char) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `handle_clash_options` in this scope
   --> mmove.rs:218:12
    |
218 |         if handle_clash_options(&mut arg.ch, opt.chars().next().unwrap()) {
    |            ^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: function `crate::mmd::mtools::handle_clash_options` exists but is inaccessible
   --> mmd.rs:124:5
    |
124 |     pub fn handle_clash_options(ch: &mut ClashHandling, opt: char) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `init_mp` in this scope
   --> mmove.rs:227:5
    |
227 |     init_mp(&mut arg.mp);
    |     ^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mainloop.rs:128:1
    |
128 | unsafe extern "C" fn init_mp(mp: *mut MainParam_t) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::init_mp`: not accessible
    |
   ::: mdel.rs:69:5
    |
69  |     pub fn init_mp(mp: &mut MainParam) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::init_mp`: not accessible
    |
   ::: mmd.rs:114:5
    |
114 |     pub fn init_mp(mp: &mut MainParam) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::init_mp`: not accessible
    |
   ::: mshortname.rs:90:1
    |
90  | fn init_mp(_mp: &mut MainParam) {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::init_mp`: not accessible

error[E0425]: cannot find value `ACCEPT_PLAIN` in this scope
   --> mmove.rs:252:26
    |
252 |     arg.mp.lookupflags = ACCEPT_PLAIN | ACCEPT_DIR | DO_OPEN_DIRS | NO_DOTS;
    |                          ^^^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mattrib.rs:82:1
    |
82  | const ACCEPT_PLAIN: u32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::ACCEPT_PLAIN`: not accessible
    |
   ::: mdel.rs:37:5
    |
37  |     pub const ACCEPT_PLAIN: u32 = 0x01;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ACCEPT_PLAIN`: not accessible
    |
   ::: mdir.rs:75:1
    |
75  | const ACCEPT_PLAIN: u32 = 0x02;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ACCEPT_PLAIN`: not accessible
    |
   ::: mshortname.rs:92:1
    |
92  | const ACCEPT_PLAIN: u32 = 0x1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::ACCEPT_PLAIN`: not accessible
    |
   ::: vfat.rs:31:1
    |
31  | const ACCEPT_PLAIN: u32 = 0x20;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::ACCEPT_PLAIN`: not accessible

error[E0425]: cannot find value `ACCEPT_DIR` in this scope
   --> mmove.rs:252:41
    |
252 |     arg.mp.lookupflags = ACCEPT_PLAIN | ACCEPT_DIR | DO_OPEN_DIRS | NO_DOTS;
    |                                         ^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:72:1
    |
72  | const ACCEPT_DIR: c_int = 0x02;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ACCEPT_DIR`: not accessible
    |
   ::: mattrib.rs:83:1
    |
83  | const ACCEPT_DIR: u32 = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::ACCEPT_DIR`: not accessible
    |
   ::: mdel.rs:38:5
    |
38  |     pub const ACCEPT_DIR: u32 = 0x02;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ACCEPT_DIR`: not accessible
    |
   ::: mdir.rs:74:1
    |
74  | const ACCEPT_DIR: u32 = 0x01;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ACCEPT_DIR`: not accessible
    |
   ::: mshortname.rs:93:1
    |
93  | const ACCEPT_DIR: u32 = 0x2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::ACCEPT_DIR`: not accessible
    |
   ::: vfat.rs:30:1
    |
30  | const ACCEPT_DIR: u32 = 0x10;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::ACCEPT_DIR`: not accessible

error[E0425]: cannot find value `DO_OPEN_DIRS` in this scope
   --> mmove.rs:252:54
    |
252 |     arg.mp.lookupflags = ACCEPT_PLAIN | ACCEPT_DIR | DO_OPEN_DIRS | NO_DOTS;
    |                                                      ^^^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:77:1
    |
77  | const DO_OPEN_DIRS: c_int = 0x40;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::DO_OPEN_DIRS`: not accessible
    |
   ::: mattrib.rs:84:1
    |
84  | const DO_OPEN_DIRS: u32 = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::DO_OPEN_DIRS`: not accessible
    |
   ::: mdir.rs:76:1
    |
76  | const DO_OPEN_DIRS: u32 = 0x04;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::DO_OPEN_DIRS`: not accessible
    |
   ::: mmd.rs:40:5
    |
40  |     pub const DO_OPEN_DIRS: u32 = 0x02;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::DO_OPEN_DIRS`: not accessible
    |
   ::: vfat.rs:35:1
    |
35  | const DO_OPEN_DIRS: u32 = 0x400;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::DO_OPEN_DIRS`: not accessible

error[E0425]: cannot find value `NO_DOTS` in this scope
   --> mmove.rs:252:69
    |
252 |     arg.mp.lookupflags = ACCEPT_PLAIN | ACCEPT_DIR | DO_OPEN_DIRS | NO_DOTS;
    |                                                                     ^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:73:1
    |
73  | const NO_DOTS: c_int = 0x04;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::NO_DOTS`: not accessible
    |
   ::: mattrib.rs:85:1
    |
85  | const NO_DOTS: u32 = 8;
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::NO_DOTS`: not accessible
    |
   ::: mdel.rs:39:5
    |
39  |     pub const NO_DOTS: u32 = 0x04;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::NO_DOTS`: not accessible
    |
   ::: mdir.rs:77:1
    |
77  | const NO_DOTS: u32 = 0x08;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::NO_DOTS`: not accessible
    |
   ::: vfat.rs:34:1
    |
34  | const NO_DOTS: u32 = 0x100;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::NO_DOTS`: not accessible

error[E0425]: cannot find function `dos_target_lookup` in this scope
   --> mmove.rs:255:9
    |
255 |         dos_target_lookup(&mut arg.mp, &matches.free[matches.free.len() - 1]);
    |         ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `mt_basename` in this scope
   --> mmove.rs:263:29
    |
263 |         arg.fromname = Some(mt_basename(&arg.fromname.unwrap()));
    |                             ^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
22  | use crate::missFuncs::mt_basename;
    |

error[E0425]: cannot find value `MAX_VNAMELEN` in this scope
   --> mmove.rs:268:32
    |
268 |     let mut longname = [0; 4 * MAX_VNAMELEN + 1];
    |                                ^^^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:68:1
    |
68  | const MAX_VNAMELEN: usize = 255;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::MAX_VNAMELEN`: not accessible
    |
   ::: mdir.rs:35:1
    |
35  | const MAX_VNAMELEN: usize = 256;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::MAX_VNAMELEN`: not accessible
    |
   ::: vfat.rs:19:1
    |
19  | const MAX_VNAMELEN: usize = 255;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::MAX_VNAMELEN`: not accessible

error[E0425]: cannot find function `main_loop` in this scope
   --> mmove.rs:278:21
    |
278 |     let exit_code = main_loop(&mut arg.mp, &matches.free[..matches.free.len() - 1]);
    |                     ^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mdel.rs:70:5
    |
70  |     pub fn main_loop(mp: &MainParam, args: &[&str]) -> i32 { 0 }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::main_loop`: not accessible
    |
   ::: mmd.rs:109:5
    |
109 |     pub fn main_loop(mp: *mut MainParam, _argv: *mut *mut libc::c_char, _argc: i32) -> i32 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::main_loop`: not accessible
    |
   ::: mshortname.rs:91:1
    |
91  | fn main_loop(_mp: &MainParam, _args: &[String]) -> i32 { 0 }
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::main_loop`: not accessible

error[E0425]: cannot find value `mversion` in this scope
   --> mpartition.rs:215:46
    |
215 |     eprintln!("Mtools version {}, dated {}", mversion, mdate);
    |                                              ^^^^^^^^ not found in this scope
    |
help: consider importing this static
    |
20  | use crate::mtools::mversion;
    |

error[E0425]: cannot find value `mdate` in this scope
   --> mpartition.rs:215:56
    |
215 |     eprintln!("Mtools version {}, dated {}", mversion, mdate);
    |                                                        ^^^^^ not found in this scope
    |
help: consider importing this static
    |
20  | use crate::mtools::mdate;
    |

error[E0425]: cannot find value `progname` in this scope
   --> mpartition.rs:219:9
    |
219 |         progname
    |         ^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> mbadblocks.rs:274:1
    |
274 | fn progname() -> String { String::new() }
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::progname`: not accessible
    |
   ::: mdel.rs:45:5
    |
45  |     pub static mut progname: &'static str = "";
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::progname`: not accessible
    |
   ::: minfo.rs:223:1
    |
223 | fn progname() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::minfo::progname`: not accessible

error[E0412]: cannot find type `MainParam` in this scope
  --> mshowfat.rs:31:9
   |
31 |     mp: MainParam,
   |         ^^^^^^^^^ not found in this scope
   |
note: these structs exist but are inaccessible
  --> mattrib.rs:42:1
   |
42 | struct MainParam<'a> {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
   |
  ::: mdel.rs:30:5
   |
30 |     pub struct MainParam;
   |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
   |
  ::: mdir.rs:59:1
   |
59 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
   |
  ::: mmd.rs:9:5
   |
9  |     pub struct MainParam {
   |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
   |
  ::: mshortname.rs:28:1
   |
28 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
   |
  ::: unixdir.rs:85:1
   |
85 | struct MainParam;
   | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0412]: cannot find type `direntry_t` in this scope
  --> mshowfat.rs:35:24
   |
35 | fn dos_showfat(entry: &direntry_t, mp: &MainParam) -> Result<i32, io::Error> {
   |                        ^^^^^^^^^^ not found in this scope
   |
note: struct `crate::mainloop::direntry_t` exists but is inaccessible
  --> mainloop.rs:92:1
   |
92 | struct direntry_t {
   | ^^^^^^^^^^^^^^^^^ not accessible

error[E0412]: cannot find type `MainParam` in this scope
  --> mshowfat.rs:35:41
   |
35 | fn dos_showfat(entry: &direntry_t, mp: &MainParam) -> Result<i32, io::Error> {
   |                                         ^^^^^^^^^ not found in this scope
   |
note: these structs exist but are inaccessible
  --> mattrib.rs:42:1
   |
42 | struct MainParam<'a> {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
   |
  ::: mdel.rs:30:5
   |
30 |     pub struct MainParam;
   |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
   |
  ::: mdir.rs:59:1
   |
59 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
   |
  ::: mmd.rs:9:5
   |
9  |     pub struct MainParam {
   |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
   |
  ::: mshortname.rs:28:1
   |
28 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
   |
  ::: unixdir.rs:85:1
   |
85 | struct MainParam;
   | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0425]: cannot find function `fprint_pwd` in this scope
  --> mshowfat.rs:39:5
   |
39 |     fprint_pwd(io::stdout(), entry, 0)?;
   |     ^^^^^^^^^^ not found in this scope
   |
note: these functions exist but are inaccessible
  --> mattrib.rs:96:1
   |
96 | fn fprint_pwd(_stream: &mut dyn Write, _entry: &Direntry, _full: bool) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::fprint_pwd`: not accessible
   |
  ::: mdel.rs:54:5
   |
54 |     pub fn fprint_pwd(stderr: &mut io::Stderr, entry: &Direntry, _: u32) {}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::fprint_pwd`: not accessible

error[E0425]: cannot find function `print_fat` in this scope
  --> mshowfat.rs:43:9
   |
43 |         print_fat(file)?;
   |         ^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `print_fat_with_offset` in this scope
  --> mshowfat.rs:45:9
   |
45 |         print_fat_with_offset(file, arg.offset)?;
   |         ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `GOT_ONE` in this scope
  --> mshowfat.rs:49:8
   |
49 |     Ok(GOT_ONE)
   |        ^^^^^^^ not found in this scope
   |
note: these constants exist but are inaccessible
  --> mainloop.rs:80:1
   |
80 | const GOT_ONE: c_int = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::GOT_ONE`: not accessible
   |
  ::: mattrib.rs:81:1
   |
81 | const GOT_ONE: i32 = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::GOT_ONE`: not accessible
   |
  ::: mdel.rs:42:5
   |
42 |     pub const GOT_ONE: i32 = 1;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::GOT_ONE`: not accessible
   |
  ::: mdir.rs:83:1
   |
83 | const GOT_ONE: i32 = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::GOT_ONE`: not accessible
   |
  ::: mmd.rs:43:5
   |
43 |     pub const GOT_ONE: i32 = 0;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::GOT_ONE`: not accessible
   |
  ::: mshortname.rs:26:1
   |
26 | const GOT_ONE: i32 = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::GOT_ONE`: not accessible

error[E0412]: cannot find type `MainParam` in this scope
  --> mshowfat.rs:52:23
   |
52 | fn unix_showfat(_mp: &MainParam) -> Result<i32, io::Error> {
   |                       ^^^^^^^^^ not found in this scope
   |
note: these structs exist but are inaccessible
  --> mattrib.rs:42:1
   |
42 | struct MainParam<'a> {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
   |
  ::: mdel.rs:30:5
   |
30 |     pub struct MainParam;
   |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
   |
  ::: mdir.rs:59:1
   |
59 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
   |
  ::: mmd.rs:9:5
   |
9  |     pub struct MainParam {
   |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
   |
  ::: mshortname.rs:28:1
   |
28 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
   |
  ::: unixdir.rs:85:1
   |
85 | struct MainParam;
   | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0425]: cannot find value `ERROR_ONE` in this scope
  --> mshowfat.rs:54:8
   |
54 |     Ok(ERROR_ONE)
   |        ^^^^^^^^^ not found in this scope
   |
note: these constants exist but are inaccessible
  --> mainloop.rs:82:1
   |
82 | const ERROR_ONE: c_int = 16;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ERROR_ONE`: not accessible
   |
  ::: mdel.rs:41:5
   |
41 |     pub const ERROR_ONE: i32 = -1;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ERROR_ONE`: not accessible
   |
  ::: mdir.rs:84:1
   |
84 | const ERROR_ONE: i32 = -1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ERROR_ONE`: not accessible
   |
  ::: mmd.rs:42:5
   |
42 |     pub const ERROR_ONE: i32 = -1;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ERROR_ONE`: not accessible

error[E0425]: cannot find value `mversion` in this scope
  --> mshowfat.rs:58:46
   |
58 |     eprintln!("Mtools version {}, dated {}", mversion, mdate);
   |                                              ^^^^^^^^ not found in this scope
   |
help: consider importing this static
   |
23 | use crate::mtools::mversion;
   |

error[E0425]: cannot find value `mdate` in this scope
  --> mshowfat.rs:58:56
   |
58 |     eprintln!("Mtools version {}, dated {}", mversion, mdate);
   |                                                        ^^^^^ not found in this scope
   |
help: consider importing this static
   |
23 | use crate::mtools::mdate;
   |

error[E0425]: cannot find value `progname` in this scope
   --> mshowfat.rs:59:34
    |
59  |     eprintln!("Usage: {} files", progname);
    |                                  ^^^^^^^^ not found in this scope
    |
note: these items exist but are inaccessible
   --> mbadblocks.rs:274:1
    |
274 | fn progname() -> String { String::new() }
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::mbadblocks::progname`: not accessible
    |
   ::: mdel.rs:45:5
    |
45  |     pub static mut progname: &'static str = "";
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::progname`: not accessible
    |
   ::: minfo.rs:223:1
    |
223 | fn progname() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::minfo::progname`: not accessible

error[E0433]: failed to resolve: use of undeclared type `MainParam`
  --> mshowfat.rs:65:13
   |
65 |         mp: MainParam::new(),
   |             ^^^^^^^^^ not found in this scope
   |
note: these structs exist but are inaccessible
  --> mattrib.rs:42:1
   |
42 | struct MainParam<'a> {
   | ^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::MainParam`: not accessible
   |
  ::: mdel.rs:30:5
   |
30 |     pub struct MainParam;
   |     ^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::MainParam`: not accessible
   |
  ::: mdir.rs:59:1
   |
59 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mdir::MainParam`: not accessible
   |
  ::: mmd.rs:9:5
   |
9  |     pub struct MainParam {
   |     ^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::MainParam`: not accessible
   |
  ::: mshortname.rs:28:1
   |
28 | struct MainParam {
   | ^^^^^^^^^^^^^^^^ `crate::mshortname::MainParam`: not accessible
   |
  ::: unixdir.rs:85:1
   |
85 | struct MainParam;
   | ^^^^^^^^^^^^^^^^^ `crate::unixdir::MainParam`: not accessible

error[E0425]: cannot find function `str_to_offset` in this scope
  --> mshowfat.rs:87:28
   |
87 |         arg.offset = match str_to_offset(&offset) {
   |                            ^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this function
   |
23 | use crate::misc::str_to_offset;
   |

error[E0425]: cannot find function `set_cmd_line_image` in this scope
   --> mshowfat.rs:97:9
    |
97  |         set_cmd_line_image(&image);
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mdel.rs:71:5
    |
71  |     pub fn set_cmd_line_image(_: &str) {}
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::set_cmd_line_image`: not accessible
    |
   ::: mmd.rs:134:5
    |
134 |     pub fn set_cmd_line_image(_optarg: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::set_cmd_line_image`: not accessible
    |
   ::: mshortname.rs:89:1
    |
89  | fn set_cmd_line_image(_image: &str) {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::set_cmd_line_image`: not accessible

error[E0425]: cannot find value `ACCEPT_PLAIN` in this scope
   --> mshowfat.rs:107:26
    |
107 |     arg.mp.lookupflags = ACCEPT_PLAIN | ACCEPT_DIR | DO_OPEN;
    |                          ^^^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mattrib.rs:82:1
    |
82  | const ACCEPT_PLAIN: u32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::ACCEPT_PLAIN`: not accessible
    |
   ::: mdel.rs:37:5
    |
37  |     pub const ACCEPT_PLAIN: u32 = 0x01;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ACCEPT_PLAIN`: not accessible
    |
   ::: mdir.rs:75:1
    |
75  | const ACCEPT_PLAIN: u32 = 0x02;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ACCEPT_PLAIN`: not accessible
    |
   ::: mshortname.rs:92:1
    |
92  | const ACCEPT_PLAIN: u32 = 0x1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::ACCEPT_PLAIN`: not accessible
    |
   ::: vfat.rs:31:1
    |
31  | const ACCEPT_PLAIN: u32 = 0x20;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::ACCEPT_PLAIN`: not accessible

error[E0425]: cannot find value `ACCEPT_DIR` in this scope
   --> mshowfat.rs:107:41
    |
107 |     arg.mp.lookupflags = ACCEPT_PLAIN | ACCEPT_DIR | DO_OPEN;
    |                                         ^^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:72:1
    |
72  | const ACCEPT_DIR: c_int = 0x02;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ACCEPT_DIR`: not accessible
    |
   ::: mattrib.rs:83:1
    |
83  | const ACCEPT_DIR: u32 = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mattrib::ACCEPT_DIR`: not accessible
    |
   ::: mdel.rs:38:5
    |
38  |     pub const ACCEPT_DIR: u32 = 0x02;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ACCEPT_DIR`: not accessible
    |
   ::: mdir.rs:74:1
    |
74  | const ACCEPT_DIR: u32 = 0x01;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ACCEPT_DIR`: not accessible
    |
   ::: mshortname.rs:93:1
    |
93  | const ACCEPT_DIR: u32 = 0x2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::ACCEPT_DIR`: not accessible
    |
   ::: vfat.rs:30:1
    |
30  | const ACCEPT_DIR: u32 = 0x10;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::ACCEPT_DIR`: not accessible

error[E0425]: cannot find value `DO_OPEN` in this scope
   --> mshowfat.rs:107:54
    |
107 |     arg.mp.lookupflags = ACCEPT_PLAIN | ACCEPT_DIR | DO_OPEN;
    |                                                      ^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:71:1
    |
71  | const DO_OPEN: c_int = 0x01;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::DO_OPEN`: not accessible
    |
   ::: mdir.rs:79:1
    |
79  | const DO_OPEN: u32 = 0x20;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::DO_OPEN`: not accessible
    |
   ::: vfat.rs:28:1
    |
28  | const DO_OPEN: u32 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^ `crate::vfat::DO_OPEN`: not accessible

error[E0425]: cannot find function `main_loop` in this scope
   --> mshowfat.rs:109:21
    |
109 |     let ret = match main_loop(&arg.mp, &matches.free) {
    |                     ^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> mdel.rs:70:5
    |
70  |     pub fn main_loop(mp: &MainParam, args: &[&str]) -> i32 { 0 }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::main_loop`: not accessible
    |
   ::: mmd.rs:109:5
    |
109 |     pub fn main_loop(mp: *mut MainParam, _argv: *mut *mut libc::c_char, _argc: i32) -> i32 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::main_loop`: not accessible
    |
   ::: mshortname.rs:91:1
    |
91  | fn main_loop(_mp: &MainParam, _args: &[String]) -> i32 { 0 }
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mshortname::main_loop`: not accessible

error[E0425]: cannot find value `ERROR_ONE` in this scope
   --> mshowfat.rs:113:13
    |
113 |             ERROR_ONE
    |             ^^^^^^^^^ not found in this scope
    |
note: these constants exist but are inaccessible
   --> mainloop.rs:82:1
    |
82  | const ERROR_ONE: c_int = 16;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mainloop::ERROR_ONE`: not accessible
    |
   ::: mdel.rs:41:5
    |
41  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdel::mtools::ERROR_ONE`: not accessible
    |
   ::: mdir.rs:84:1
    |
84  | const ERROR_ONE: i32 = -1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mdir::ERROR_ONE`: not accessible
    |
   ::: mmd.rs:42:5
    |
42  |     pub const ERROR_ONE: i32 = -1;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::mmd::mtools::ERROR_ONE`: not accessible

error[E0412]: cannot find type `ScsiIoMode` in this scope
  --> mzip.rs:75:48
   |
75 |     fn zip_cmd(&mut self, cdb: &[u8; 6], mode: ScsiIoMode, data: &mut [u8]) -> io::Result<()> {
   |                                                ^^^^^^^^^^ not found in this scope
   |
help: consider importing this enum
   |
6  | use crate::scsi::ScsiIoMode;
   |

error[E0425]: cannot find function `reclaim_privs` in this scope
   --> mzip.rs:77:13
    |
77  |             reclaim_privs();
    |             ^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> privileges.rs:66:5
    |
66  |     pub fn reclaim_privs() -> Result<(), nix::Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::privileges::priv_unix::reclaim_privs`: not accessible
    |
   ::: scsi_io.rs:372:5
    |
372 |     fn reclaim_privs();
    |     ^^^^^^^^^^^^^^^^^^^ `crate::scsi_io::reclaim_privs`: not accessible

error[E0425]: cannot find function `scsi_cmd` in this scope
  --> mzip.rs:80:22
   |
80 |         let result = scsi_cmd(&mut self.fd, cdb, mode, data, self.extra_data.as_mut());
   |                      ^^^^^^^^ not found in this scope
   |
help: consider importing this function
   |
6  | use crate::scsi::scsi_cmd;
   |

error[E0425]: cannot find function `drop_privs` in this scope
   --> mzip.rs:83:13
    |
83  |             drop_privs();
    |             ^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
   --> privileges.rs:78:5
    |
78  |     pub fn drop_privs() -> Result<(), nix::Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `crate::privileges::priv_unix::drop_privs`: not accessible
    |
   ::: scsi_io.rs:373:5
    |
373 |     fn drop_privs();
    |     ^^^^^^^^^^^^^^^^ `crate::scsi_io::drop_privs`: not accessible

error[E0425]: cannot find value `SCSI_IOMEGA` in this scope
   --> mzip.rs:113:28
    |
113 |         self.short_command(SCSI_IOMEGA, mode.to_u8(), data_len, data)
    |                            ^^^^^^^^^^^ not found in this scope
    |
help: consider importing this constant
    |
6   | use crate::scsi::SCSI_IOMEGA;
    |

error[E0412]: cannot find type `OpenImageFlags` in this scope
  --> open_image.rs:49:12
   |
49 |     flags: OpenImageFlags,
   |            ^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `simple_file_open_with_lm` in module `plain_io`
  --> open_image.rs:97:32
   |
97 |             stream = plain_io::simple_file_open_with_lm(
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^ not found in `plain_io`

error[E0425]: cannot find function `remap` in module `remap`
   --> open_image.rs:125:31
    |
125 |         let remapped = remap::remap(&mut *stream, out_dev, errmsg);
    |                               ^^^^^ not found in `remap`
    |
help: consider importing this function
    |
1   | use crate::remap::remap;
    |
help: if you import `remap`, refer to it directly
    |
125 -         let remapped = remap::remap(&mut *stream, out_dev, errmsg);
125 +         let remapped = remap(&mut *stream, out_dev, errmsg);
    |

error[E0425]: cannot find function `open_offset` in module `offset`
   --> open_image.rs:133:30
    |
133 |         let offset = offset::open_offset(&mut *stream, out_dev, dev.offset, errmsg, max_size);
    |                              ^^^^^^^^^^^ not found in `offset`
    |
note: function `crate::offset::open_offset` exists but is inaccessible
   --> offset.rs:78:1
    |
78  | / fn open_offset(
79  | |     next: Box<dyn Stream>,
80  | |     dev: &mut Device,
81  | |     offset: i64,
...   |
104 | |     Ok(this)
105 | | }
    | |_^ not accessible

error[E0425]: cannot find function `open_swap` in module `swap`
   --> open_image.rs:141:26
    |
141 |         let swap = swap::open_swap(&mut *stream);
    |                          ^^^^^^^^^ not found in `swap`
    |
note: function `crate::swap::open_swap` exists but is inaccessible
   --> swap.rs:70:1
    |
70  | fn open_swap(next: Arc<dyn Stream>) -> Arc<dyn Stream> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0425]: cannot find function `open_partition` in module `partition`
   --> open_image.rs:155:36
    |
155 |         let partition = partition::open_partition(&mut *stream, out_dev, errmsg, max_size);
    |                                    ^^^^^^^^^^^^^^ not found in `partition`
    |
help: consider importing this function
    |
1   | use crate::partition::open_partition;
    |
help: if you import `open_partition`, refer to it directly
    |
155 -         let partition = partition::open_partition(&mut *stream, out_dev, errmsg, max_size);
155 +         let partition = open_partition(&mut *stream, out_dev, errmsg, max_size);
    |

error[E0412]: cannot find type `ScsiIoMode` in this scope
   --> scsi_io.rs:355:20
    |
355 |         direction: ScsiIoMode,
    |                    ^^^^^^^^^^ not found in this scope
    |
help: consider importing this enum
    |
1   | use crate::scsi::ScsiIoMode;
    |

error[E0412]: cannot find type `Device` in this scope
   --> scsi_io.rs:369:28
    |
369 |     fn is_scsi(dev: *const Device) -> bool;
    |                            ^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
1   | use crate::device::Device;
    |
1   | use crate::lba::Device;
    |
1   | use crate::lockdev::Device;
    |
1   | use crate::old_dos::Device;
    |
      and 3 other candidates

error[E0412]: cannot find type `Device` in this scope
   --> scsi_io.rs:370:34
    |
370 |     fn is_privileged(dev: *const Device) -> bool;
    |                                  ^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
1   | use crate::device::Device;
    |
1   | use crate::lba::Device;
    |
1   | use crate::lockdev::Device;
    |
1   | use crate::old_dos::Device;
    |
      and 3 other candidates

error[E0412]: cannot find type `Device` in this scope
   --> scsi_io.rs:371:30
    |
371 |     fn is_nolock(dev: *const Device) -> bool;
    |                              ^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
1   | use crate::device::Device;
    |
1   | use crate::lba::Device;
    |
1   | use crate::lockdev::Device;
    |
1   | use crate::old_dos::Device;
    |
      and 3 other candidates

error[E0412]: cannot find type `Device` in this scope
   --> scsi_io.rs:374:27
    |
374 |     fn precmd(dev: *const Device);
    |                           ^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
1   | use crate::device::Device;
    |
1   | use crate::lba::Device;
    |
1   | use crate::lockdev::Device;
    |
1   | use crate::old_dos::Device;
    |
      and 3 other candidates

error[E0412]: cannot find type `Device` in this scope
   --> scsi_io.rs:379:21
    |
379 |         dev: *const Device,
    |                     ^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
1   | use crate::device::Device;
    |
1   | use crate::lba::Device;
    |
1   | use crate::lockdev::Device;
    |
1   | use crate::old_dos::Device;
    |
      and 3 other candidates

error[E0425]: cannot find value `FSS` in this scope
  --> streamcache.rs:44:19
   |
44 |     let mut fss = FSS.lock().unwrap();
   |                   ^^^ not found in this scope

error[E0425]: cannot find value `IS_INITIALIZED` in this scope
  --> streamcache.rs:59:30
   |
59 |     let mut is_initialized = IS_INITIALIZED.lock().unwrap();
   |                              ^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `exit_func` in module `process`
  --> streamcache.rs:64:14
   |
64 |     process::exit_func(finish_sc);
   |              ^^^^^^^^^ not found in `process`

error[E0425]: cannot find value `FSS` in this scope
  --> streamcache.rs:71:19
   |
71 |     let mut fss = FSS.lock().unwrap();
   |                   ^^^ not found in this scope

error[E0412]: cannot find type `ModeFlags` in this scope
  --> xdf_io.rs:37:11
   |
37 |     mode: ModeFlags,
   |           ^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `Compactify` in this scope
   --> xdf_io.rs:114:116
    |
114 |     fn add_to_request(&mut self, ptr: u8, request: &mut RawRequest, nr: &mut i32, direction: i32, compactify: &mut Compactify) -> i32 {
    |                                                                                                                    ^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `Compactify` in this scope
   --> xdf_io.rs:119:111
    |
119 |     fn add_to_request_if_invalid(&mut self, ptr: u8, request: &mut RawRequest, nr: &mut i32, compactify: &mut Compactify) {
    |                                                                                                               ^^^^^^^^^^ not found in this scope

warning: unused `#[macro_use]` import
  --> c2rust-lib.rs:13:1
   |
13 | #[macro_use]
   | ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused `#[macro_use]` import
  --> c2rust-lib.rs:14:31
   |
14 | extern crate c2rust_bitfields;#[macro_use]
   |                               ^^^^^^^^^^^^

warning: unused import: `max`
 --> buffer.rs:2:21
  |
2 | use std::cmp::{min, max};
  |                     ^^^

warning: unused import: `std::ptr`
 --> buffer.rs:3:5
  |
3 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::mem`
 --> buffer.rs:4:5
  |
4 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::os::raw::c_void`
 --> buffer.rs:5:5
  |
5 | use std::os::raw::c_void;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unnecessary parentheses around block return value
  --> buffer.rs:35:9
   |
35 |         (self.cylinder_size - (pos % self.cylinder_size as u64) as usize)
   |         ^                                                               ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
35 -         (self.cylinder_size - (pos % self.cylinder_size as u64) as usize)
35 +         self.cylinder_size - (pos % self.cylinder_size as u64) as usize
   |

warning: unused import: `CStr`
  --> charsetConv.rs:21:25
   |
21 | use std::ffi::{CString, CStr};
   |                         ^^^^

warning: unused import: `std::ptr`
  --> charsetConv.rs:22:5
   |
22 | use std::ptr;
   |     ^^^^^^^^

warning: unused import: `c_void`
  --> charsetConv.rs:24:28
   |
24 | use std::os::raw::{c_char, c_void};
   |                            ^^^^^^

warning: unused import: `std::slice`
  --> charsetConv.rs:25:5
   |
25 | use std::slice;
   |     ^^^^^^^^^^

warning: unused imports: `CStr`, `CString`
 --> config.rs:2:16
  |
2 | use std::ffi::{CStr, CString};
  |                ^^^^  ^^^^^^^

warning: unused import: `std::mem`
 --> config.rs:5:5
  |
5 | use std::mem;
  |     ^^^^^^^^

warning: unused imports: `c_char`, `c_int`
 --> config.rs:6:20
  |
6 | use std::os::raw::{c_char, c_int};
  |                    ^^^^^^  ^^^^^

warning: unused import: `PathBuf`
 --> config.rs:7:23
  |
7 | use std::path::{Path, PathBuf};
  |                       ^^^^^^^

warning: unused import: `std::ptr`
 --> config.rs:8:5
  |
8 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::sync::Once`
  --> config.rs:10:5
   |
10 | use std::sync::Once;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `std::ffi::CStr`
  --> device.rs:17:5
   |
17 | use std::ffi::CStr;
   |     ^^^^^^^^^^^^^^

warning: unused import: `std::os::raw::c_char`
  --> device.rs:18:5
   |
18 | use std::os::raw::c_char;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
  --> device.rs:19:5
   |
19 | use std::ptr;
   |     ^^^^^^^^

warning: unused imports: `c_int`, `c_uchar`, `c_uint`
 --> devices.rs:6:20
  |
6 | use std::os::raw::{c_int, c_uint, c_uchar};
  |                    ^^^^^  ^^^^^^  ^^^^^^^

warning: unused import: `std::ffi::CStr`
 --> devices.rs:8:5
  |
8 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::ffi::OsString`
 --> dirCache.rs:1:5
  |
1 | use std::ffi::OsString;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
 --> dirCache.rs:3:5
  |
3 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::mem`
 --> dirCache.rs:4:5
  |
4 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::slice`
 --> dirCache.rs:5:5
  |
5 | use std::slice;
  |     ^^^^^^^^^^

warning: unused import: `std::ops::BitOrAssign`
 --> dirCache.rs:6:5
  |
6 | use std::ops::BitOrAssign;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::mem`
 --> directory.rs:3:5
  |
3 | use std::mem;
  |     ^^^^^^^^

warning: unused imports: `PathBuf`, `Path`
  --> direntry.rs:19:17
   |
19 | use std::path::{Path, PathBuf};
   |                 ^^^^  ^^^^^^^

warning: unused import: `std::fmt`
  --> direntry.rs:21:5
   |
21 | use std::fmt;
   |     ^^^^^^^^

warning: unused import: `std::ffi::OsStr`
 --> expand.rs:3:5
  |
3 | use std::ffi::OsStr;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::process::CommandExt`
 --> expand.rs:4:5
  |
4 | use std::os::unix::process::CommandExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Read`, `Write`
 --> fat.rs:1:21
  |
1 | use std::io::{self, Read, Write};
  |                     ^^^^  ^^^^^

warning: unused import: `std::ptr`
 --> fat.rs:3:5
  |
3 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::slice`
 --> fat.rs:4:5
  |
4 | use std::slice;
  |     ^^^^^^^^^^

warning: unused import: `std::convert::TryInto`
 --> fat.rs:5:5
  |
5 | use std::convert::TryInto;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `SeekFrom`
 --> file.rs:2:40
  |
2 | use std::io::{self, Read, Write, Seek, SeekFrom};
  |                                        ^^^^^^^^

warning: unused import: `UNIX_EPOCH`
 --> file.rs:3:29
  |
3 | use std::time::{SystemTime, UNIX_EPOCH};
  |                             ^^^^^^^^^^

warning: unused import: `std::path::Path`
 --> file.rs:5:5
  |
5 | use std::path::Path;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `CString`
 --> file_name.rs:3:22
  |
3 | use std::ffi::{CStr, CString};
  |                      ^^^^^^^

warning: unused imports: `c_char`, `c_int`
 --> file_name.rs:4:20
  |
4 | use std::os::raw::{c_char, c_int};
  |                    ^^^^^^  ^^^^^

warning: unused import: `std::ptr`
 --> file_name.rs:5:5
  |
5 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::mem`
 --> file_name.rs:6:5
  |
6 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::cmp`
 --> file_name.rs:7:5
  |
7 | use std::cmp;
  |     ^^^^^^^^

warning: unused import: `PathBuf`
 --> file_name.rs:8:23
  |
8 | use std::path::{Path, PathBuf};
  |                       ^^^^^^^

warning: unused imports: `CString`, `OsString`
 --> floppyd.rs:7:16
  |
7 | use std::ffi::{CString, OsString};
  |                ^^^^^^^  ^^^^^^^^

warning: unused imports: `File`, `OpenOptions`
 --> floppyd.rs:8:15
  |
8 | use std::fs::{File, OpenOptions};
  |               ^^^^  ^^^^^^^^^^^

warning: unused imports: `SeekFrom`, `Seek`
 --> floppyd.rs:9:28
  |
9 | use std::io::{Read, Write, Seek, SeekFrom};
  |                            ^^^^  ^^^^^^^^

warning: unused import: `FromRawFd`
  --> floppyd.rs:11:34
   |
11 | use std::os::unix::io::{AsRawFd, FromRawFd, RawFd};
   |                                  ^^^^^^^^^

warning: unused import: `std::path::Path`
  --> floppyd.rs:12:5
   |
12 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `std::process`
  --> floppyd.rs:13:5
   |
13 | use std::process;
   |     ^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
  --> floppyd.rs:14:5
   |
14 | use std::time::Duration;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `F_LOCK`, `F_TEST`, `F_TLOCK`, `O_WRONLY`, `SIGCHLD`, `SIGHUP`, `SIGINT`, `SIGQUIT`, `SIGTERM`, `SIG_IGN`, `alarm`, `c_int`, `dup2`, `exit`, `fork`, `getenv`, `getpid`, `gid_t`, `lockf`, `pid_t`, `setsid`, `uid_t`, `umask`
  --> floppyd.rs:17:11
   |
17 |     self, c_int, gid_t, pid_t, uid_t, 
   |           ^^^^^  ^^^^^  ^^^^^  ^^^^^
18 |     SIGCHLD, SIG_IGN, SIGHUP, SIGINT, SIGQUIT, SIGTERM, 
   |     ^^^^^^^  ^^^^^^^  ^^^^^^  ^^^^^^  ^^^^^^^  ^^^^^^^
19 |     alarm, close, dup2, exit, fork, getenv, getpid, 
   |     ^^^^^         ^^^^  ^^^^  ^^^^  ^^^^^^  ^^^^^^
20 |     lockf, open, setsid, umask, F_LOCK, F_TEST, F_TLOCK, 
   |     ^^^^^        ^^^^^^  ^^^^^  ^^^^^^  ^^^^^^  ^^^^^^^
21 |     O_RDONLY, O_RDWR, O_WRONLY
   |                       ^^^^^^^^

warning: unused import: `ffi::CString`
 --> floppyd_installtest.rs:2:5
  |
2 |     ffi::CString,
  |     ^^^^^^^^^^^^

warning: unused import: `SocketAddr`
 --> floppyd_io.rs:2:27
  |
2 | use std::net::{TcpStream, SocketAddr, ToSocketAddrs};
  |                           ^^^^^^^^^^

warning: unused import: `RawFd`
 --> floppyd_io.rs:3:34
  |
3 | use std::os::unix::io::{AsRawFd, RawFd};
  |                                  ^^^^^

warning: unused import: `std::ffi::CString`
 --> floppyd_io.rs:5:5
  |
5 | use std::ffi::CString;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
 --> floppyd_io.rs:6:5
  |
6 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::convert::TryInto`
  --> floppyd_io.rs:10:5
   |
10 | use std::convert::TryInto;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Read`, `Seek`
  --> force_io.rs:26:21
   |
26 | use std::io::{self, Read, Write, Seek};
   |                     ^^^^         ^^^^

warning: unused import: `std::cmp::min`
  --> force_io.rs:27:5
   |
27 | use std::cmp::min;
   |     ^^^^^^^^^^^^^

warning: unused import: `std::convert::TryInto`
 --> init.rs:8:5
  |
8 | use std::convert::TryInto;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> init.rs:11:5
   |
11 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CStr`, `CString`, `OsStr`, `OsString`
 --> mainloop.rs:1:16
  |
1 | use std::ffi::{CStr, CString, OsStr, OsString};
  |                ^^^^  ^^^^^^^  ^^^^^  ^^^^^^^^

warning: unused imports: `File`, `OpenOptions`
 --> mainloop.rs:2:15
  |
2 | use std::fs::{File, OpenOptions};
  |               ^^^^  ^^^^^^^^^^^

warning: unused imports: `Read`, `Write`, `self`
 --> mainloop.rs:3:15
  |
3 | use std::io::{self, Read, Write};
  |               ^^^^  ^^^^  ^^^^^

warning: unused import: `std::os::unix::ffi::OsStrExt`
 --> mainloop.rs:4:5
  |
4 | use std::os::unix::ffi::OsStrExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `PathBuf`, `Path`
 --> mainloop.rs:5:17
  |
5 | use std::path::{Path, PathBuf};
  |                 ^^^^  ^^^^^^^

warning: unused import: `std::slice`
 --> mainloop.rs:7:5
  |
7 | use std::slice;
  |     ^^^^^^^^^^

warning: unused import: `Ordering`
 --> mainloop.rs:8:37
  |
8 | use std::sync::atomic::{AtomicBool, Ordering};
  |                                     ^^^^^^^^

warning: unused import: `O_RDWR`
 --> mainloop.rs:9:45
  |
9 | use libc::{c_char, c_int, c_void, O_RDONLY, O_RDWR};
  |                                             ^^^^^^

warning: unused import: `std::ffi::CString`
  --> mattrib.rs:22:5
   |
22 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::ffi::OsStrExt`
  --> mattrib.rs:23:5
   |
23 | use std::os::unix::ffi::OsStrExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::path::Path`
  --> mattrib.rs:24:5
   |
24 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `OpenOptions`
  --> mattrib.rs:27:21
   |
27 | use std::fs::{File, OpenOptions};
   |                     ^^^^^^^^^^^

warning: unused import: `std::os::unix::fs::OpenOptionsExt`
  --> mattrib.rs:28:5
   |
28 | use std::os::unix::fs::OpenOptionsExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ffi::OsString`, `num::ParseIntError`, `path::Path`, `str::FromStr`
  --> mbadblocks.rs:25:5
   |
25 |     path::Path,
   |     ^^^^^^^^^^
26 |     process::exit,
27 |     ffi::OsString,
   |     ^^^^^^^^^^^^^
28 |     env,
29 |     str::FromStr,
   |     ^^^^^^^^^^^^
30 |     num::ParseIntError,
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `File`
  --> mcat.rs:24:15
   |
24 | use std::fs::{File, OpenOptions};
   |               ^^^^

warning: unused import: `std::path::Path`
  --> mcat.rs:26:5
   |
26 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `std::fs::File`
  --> mcd.rs:22:5
   |
22 | use std::fs::File;
   |     ^^^^^^^^^^^^^

warning: unused import: `std::path::PathBuf`
  --> mcd.rs:25:5
   |
25 | use std::path::PathBuf;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `File`
  --> mcopy.rs:23:21
   |
23 | use std::fs::{self, File, OpenOptions};
   |                     ^^^^

warning: unused import: `Read`
  --> mcopy.rs:24:21
   |
24 | use std::io::{self, Read, Write};
   |                     ^^^^

warning: unused import: `PermissionsExt`
  --> mcopy.rs:25:25
   |
25 | use std::os::unix::fs::{PermissionsExt, MetadataExt};
   |                         ^^^^^^^^^^^^^^

warning: unused imports: `SystemTime`, `UNIX_EPOCH`
  --> mcopy.rs:27:17
   |
27 | use std::time::{SystemTime, UNIX_EPOCH};
   |                 ^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `stat`
  --> mcopy.rs:28:26
   |
28 | use libc::{self, time_t, stat, S_ISDIR, S_ISREG};
   |                          ^^^^

warning: unused imports: `DosName`, `print_oom`
  --> mcopy.rs:33:65
   |
33 | use crate::mtools::{MainParam, ClashHandling, Direntry, Stream, DosName, get_time_now, print_oom};
   |                                                                 ^^^^^^^                ^^^^^^^^^

warning: unused import: `OsStr`
  --> mdel.rs:22:16
   |
22 | use std::ffi::{OsStr, OsString};
   |                ^^^^^

warning: unused import: `Write`
  --> mdel.rs:23:21
   |
23 | use std::io::{self, Write};
   |                     ^^^^^

warning: unused import: `std::os::unix::ffi::OsStrExt`
  --> mdel.rs:24:5
   |
24 | use std::os::unix::ffi::OsStrExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `OsString`
  --> mdir.rs:22:25
   |
22 | use std::ffi::{CString, OsString};
   |                         ^^^^^^^^

warning: unused import: `std::os::unix::ffi::OsStringExt`
  --> mdir.rs:23:5
   |
23 | use std::os::unix::ffi::OsStringExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `PathBuf`, `Path`
  --> mdir.rs:24:17
   |
24 | use std::path::{Path, PathBuf};
   |                 ^^^^  ^^^^^^^

warning: unused import: `Write`
  --> mdir.rs:25:21
   |
25 | use std::io::{self, Write};
   |                     ^^^^^

warning: unused import: `std::fmt`
  --> mdir.rs:26:5
   |
26 | use std::fmt;
   |     ^^^^^^^^

warning: unused imports: `SystemTime`, `UNIX_EPOCH`
  --> mdir.rs:27:17
   |
27 | use std::time::{SystemTime, UNIX_EPOCH};
   |                 ^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `std::convert::TryFrom`
  --> mdir.rs:28:5
   |
28 | use std::convert::TryFrom;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::mem`
  --> mdir.rs:29:5
   |
29 | use std::mem;
   |     ^^^^^^^^

warning: unused import: `c_int`
  --> mdir.rs:31:28
   |
31 | use std::os::raw::{c_char, c_int};
   |                            ^^^^^

warning: unused import: `std::collections::HashMap`
  --> mdir.rs:32:5
   |
32 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `free`, `isdigit`, `malloc`, `printf`, `putchar`, `sprintf`, `strcpy`, `strlen`, `strncasecmp`, `strncpy`
  --> mdir.rs:33:12
   |
33 | use libc::{strncasecmp, strcpy, strncpy, strlen, sprintf, malloc, free, isdigit, putchar, printf};
   |            ^^^^^^^^^^^  ^^^^^^  ^^^^^^^  ^^^^^^  ^^^^^^^  ^^^^^^  ^^^^  ^^^^^^^  ^^^^^^^  ^^^^^^

warning: unused import: `std::ffi::OsString`
  --> mdoctorfat.rs:22:5
   |
22 | use std::ffi::OsString;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `File`
  --> mdoctorfat.rs:23:15
   |
23 | use std::fs::{File, OpenOptions};
   |               ^^^^

warning: unused import: `std::path::PathBuf`
  --> mdoctorfat.rs:26:5
   |
26 | use std::path::PathBuf;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `std::path::Path`
  --> mdu.rs:24:5
   |
24 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `std::mem`
 --> mformat.rs:1:5
  |
1 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::ptr`
 --> mformat.rs:2:5
  |
2 | use std::ptr;
  |     ^^^^^^^^

warning: unused imports: `c_int`, `c_uchar`, `c_uint`
 --> mformat.rs:3:36
  |
3 | use std::os::raw::{c_void, c_char, c_int, c_uint, c_uchar};
  |                                    ^^^^^  ^^^^^^  ^^^^^^^

warning: unused imports: `CStr`, `CString`
 --> mformat.rs:4:16
  |
4 | use std::ffi::{CStr, CString};
  |                ^^^^  ^^^^^^^

warning: unused imports: `Read`, `Write`, `self`
 --> mformat.rs:5:15
  |
5 | use std::io::{self, Read, Write};
  |               ^^^^  ^^^^  ^^^^^

warning: unused imports: `File`, `OpenOptions`
 --> mformat.rs:6:15
  |
6 | use std::fs::{File, OpenOptions};
  |               ^^^^  ^^^^^^^^^^^

warning: unused import: `std::path::Path`
 --> mformat.rs:7:5
  |
7 | use std::path::Path;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::fs::OpenOptionsExt`
 --> mformat.rs:8:5
  |
8 | use std::os::unix::fs::OpenOptionsExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `O_CREAT`, `O_RDWR`, `O_TRUNC`
 --> mformat.rs:9:12
  |
9 | use libc::{O_RDWR, O_CREAT, O_TRUNC, O_BINARY};
  |            ^^^^^^  ^^^^^^^  ^^^^^^^

warning: unused import: `Write`
  --> minfo.rs:22:27
   |
22 | use std::io::{self, Read, Write, Seek, SeekFrom};
   |                           ^^^^^

warning: unused import: `std::path::Path`
  --> minfo.rs:23:5
   |
23 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `std::ffi::OsString`
  --> minfo.rs:25:5
   |
25 | use std::ffi::OsString;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::ffi::OsStringExt`
  --> minfo.rs:26:5
   |
26 | use std::os::unix::ffi::OsStringExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::mem`
  --> minfo.rs:27:5
   |
27 | use std::mem;
   |     ^^^^^^^^

warning: unused import: `std::convert::TryInto`
  --> minfo.rs:28:5
   |
28 | use std::convert::TryInto;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::fmt`
  --> minfo.rs:29:5
   |
29 | use std::fmt;
   |     ^^^^^^^^

warning: unused import: `Path`
 --> misc.rs:7:17
  |
7 | use std::path::{Path, PathBuf};
  |                 ^^^^

warning: unused imports: `getpwnam`, `getpwuid`, `passwd`, `uid_t`
  --> misc.rs:10:12
   |
10 | use libc::{uid_t, geteuid, getlogin, getpwnam, getpwuid, passwd};
   |            ^^^^^                     ^^^^^^^^  ^^^^^^^^  ^^^^^^

warning: unused imports: `CStr`, `CString`
  --> missFuncs.rs:20:16
   |
20 | use std::ffi::{CStr, CString};
   |                ^^^^  ^^^^^^^

warning: unused import: `std::os::raw::c_char`
  --> missFuncs.rs:21:5
   |
21 | use std::os::raw::c_char;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
  --> missFuncs.rs:22:5
   |
22 | use std::ptr;
   |     ^^^^^^^^

warning: unused import: `std::mem`
  --> missFuncs.rs:23:5
   |
23 | use std::mem;
   |     ^^^^^^^^

warning: unused import: `std::process`
  --> missFuncs.rs:24:5
   |
24 | use std::process;
   |     ^^^^^^^^^^^^

warning: unused imports: `CStr`, `CString`
  --> mk_direntry.rs:22:16
   |
22 | use std::ffi::{CStr, CString};
   |                ^^^^  ^^^^^^^

warning: unused import: `std::os::raw::c_char`
  --> mk_direntry.rs:23:5
   |
23 | use std::os::raw::c_char;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
  --> mk_direntry.rs:24:5
   |
24 | use std::ptr;
   |     ^^^^^^^^

warning: unused import: `std::fs::File`
  --> mk_direntry.rs:27:5
   |
27 | use std::fs::File;
   |     ^^^^^^^^^^^^^

warning: unused import: `std::path::Path`
  --> mk_direntry.rs:28:5
   |
28 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `std::convert::TryInto`
  --> mk_direntry.rs:29:5
   |
29 | use std::convert::TryInto;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CStr`, `CString`
  --> mlabel.rs:22:16
   |
22 | use std::ffi::{CStr, CString};
   |                ^^^^  ^^^^^^^

warning: unused imports: `Write`, `self`
  --> mlabel.rs:23:15
   |
23 | use std::io::{self, Write};
   |               ^^^^  ^^^^^

warning: unused import: `std::os::raw::c_int`
  --> mlabel.rs:24:5
   |
24 | use std::os::raw::c_int;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
  --> mlabel.rs:25:5
   |
25 | use std::ptr;
   |     ^^^^^^^^

warning: unused import: `std::path::Path`
  --> mlabel.rs:27:5
   |
27 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused imports: `File`, `OpenOptions`
  --> mlabel.rs:28:15
   |
28 | use std::fs::{File, OpenOptions};
   |               ^^^^  ^^^^^^^^^^^

warning: unused import: `std::os::unix::ffi::OsStrExt`
  --> mlabel.rs:29:5
   |
29 | use std::os::unix::ffi::OsStrExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::io::AsRawFd`
  --> mlabel.rs:30:5
   |
30 | use std::os::unix::io::AsRawFd;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ffi::CString`
 --> mmd.rs:1:5
  |
1 | use std::ffi::CString;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::ffi::OsStrExt`
 --> mmd.rs:2:5
  |
2 | use std::os::unix::ffi::OsStrExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::path::Path`
 --> mmd.rs:3:5
  |
3 | use std::path::Path;
  |     ^^^^^^^^^^^^^^^

warning: unused imports: `Write`, `self`
 --> mmd.rs:6:15
  |
6 | use std::io::{self, Write};
  |               ^^^^  ^^^^^

warning: unused imports: `ErrorKind`, `Error`, `self`
  --> mmount.rs:28:15
   |
28 | use std::io::{self, Error, ErrorKind};
   |               ^^^^  ^^^^^  ^^^^^^^^^

warning: unused import: `std::os::unix::process::CommandExt`
  --> mmount.rs:29:5
   |
29 | use std::os::unix::process::CommandExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Command`, `Stdio`
  --> mmount.rs:30:20
   |
30 | use std::process::{Command, exit, Stdio};
   |                    ^^^^^^^        ^^^^^

warning: unused import: `std::str`
  --> mmount.rs:31:5
   |
31 | use std::str;
   |     ^^^^^^^^

warning: unused imports: `O_LARGEFILE`, `O_RDONLY`, `O_RDWR`
  --> mmount.rs:32:12
   |
32 | use libc::{O_RDONLY, O_RDWR, O_LARGEFILE};
   |            ^^^^^^^^  ^^^^^^  ^^^^^^^^^^^

warning: unused imports: `CString`, `OsStr`
  --> mmove.rs:22:16
   |
22 | use std::ffi::{CString, OsStr};
   |                ^^^^^^^  ^^^^^

warning: unused import: `std::os::unix::ffi::OsStrExt`
  --> mmove.rs:23:5
   |
23 | use std::os::unix::ffi::OsStrExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `PathBuf`, `Path`
  --> mmove.rs:24:17
   |
24 | use std::path::{Path, PathBuf};
   |                 ^^^^  ^^^^^^^

warning: unused import: `Write`
  --> mmove.rs:25:21
   |
25 | use std::io::{self, Write, Error, ErrorKind};
   |                     ^^^^^

warning: unused imports: `File`, `OpenOptions`
  --> mmove.rs:26:15
   |
26 | use std::fs::{File, OpenOptions};
   |               ^^^^  ^^^^^^^^^^^

warning: unused import: `std::os::unix::fs::OpenOptionsExt`
  --> mmove.rs:27:5
   |
27 | use std::os::unix::fs::OpenOptionsExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
  --> mmove.rs:28:5
   |
28 | use std::ptr;
   |     ^^^^^^^^

warning: unused import: `std::mem`
  --> mmove.rs:29:5
   |
29 | use std::mem;
   |     ^^^^^^^^

warning: unused import: `std::convert::TryInto`
  --> mmove.rs:30:5
   |
30 | use std::convert::TryInto;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `c_int`
  --> mmove.rs:31:20
   |
31 | use libc::{O_RDWR, c_int, c_void};
   |                    ^^^^^

warning: unused import: `crate::mainloop::*`
  --> mmove.rs:35:5
   |
35 | use crate::mainloop::*;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::plain_io::*`
  --> mmove.rs:36:5
   |
36 | use crate::plain_io::*;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::file::*`
  --> mmove.rs:38:5
   |
38 | use crate::file::*;
   |     ^^^^^^^^^^^^^^

warning: unused import: `std::convert::TryFrom`
  --> mpartition.rs:20:5
   |
20 | use std::convert::TryFrom;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Write`, `self`
  --> mpartition.rs:21:15
   |
21 | use std::io::{self, Write};
   |               ^^^^  ^^^^^

warning: unused imports: `File`, `OpenOptions`
  --> mpartition.rs:23:15
   |
23 | use std::fs::{File, OpenOptions};
   |               ^^^^  ^^^^^^^^^^^

warning: unused import: `std::os::unix::fs::OpenOptionsExt`
  --> mpartition.rs:24:5
   |
24 | use std::os::unix::fs::OpenOptionsExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::path::Path`
  --> mpartition.rs:25:5
   |
25 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `std::mem`
  --> mpartition.rs:26:5
   |
26 | use std::mem;
   |     ^^^^^^^^

warning: unused imports: `Write`, `self`
  --> mshortname.rs:22:15
   |
22 | use std::io::{self, Write};
   |               ^^^^  ^^^^^

warning: unused import: `std::env`
  --> mshowfat.rs:23:5
   |
23 | use std::env;
   |     ^^^^^^^^

warning: unused import: `Write`
  --> mshowfat.rs:25:21
   |
25 | use std::io::{self, Write};
   |                     ^^^^^

warning: unused import: `std::str::FromStr`
  --> mshowfat.rs:27:5
   |
27 | use std::str::FromStr;
   |     ^^^^^^^^^^^^^^^^^

warning: unused imports: `CStr`, `CString`
 --> mtools.rs:3:16
  |
3 | use std::ffi::{CStr, CString};
  |                ^^^^  ^^^^^^^

warning: unused import: `c_char`
 --> mtools.rs:4:20
  |
4 | use std::os::raw::{c_char, c_int};
  |                    ^^^^^^

warning: unused import: `std::path::Path`
 --> mtools.rs:5:5
  |
5 | use std::path::Path;
  |     ^^^^^^^^^^^^^^^

warning: unused imports: `File`, `OpenOptions`
 --> mtools.rs:7:15
  |
7 | use std::fs::{File, OpenOptions};
  |               ^^^^  ^^^^^^^^^^^

warning: unused import: `Read`
 --> mtools.rs:8:21
  |
8 | use std::io::{self, Read, Write};
  |                     ^^^^

warning: unused import: `std::ptr`
 --> mtools.rs:9:5
  |
9 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::convert::TryInto`
  --> mtools.rs:11:5
   |
11 | use std::convert::TryInto;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `off_t`, `time_t`
  --> mtools.rs:12:19
   |
12 | use libc::{uid_t, time_t, off_t};
   |                   ^^^^^^  ^^^^^

warning: unnecessary parentheses around block return value
   --> mtools.rs:104:5
    |
104 |     (end as usize - begin as usize)
    |     ^                             ^
    |
help: remove these parentheses
    |
104 -     (end as usize - begin as usize)
104 +     end as usize - begin as usize
    |

warning: unused import: `Write`
 --> mzip.rs:7:27
  |
7 | use std::io::{self, Read, Write};
  |                           ^^^^^

warning: unused import: `std::os::unix::fs::OpenOptionsExt`
 --> mzip.rs:8:5
  |
8 | use std::os::unix::fs::OpenOptionsExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::str`
  --> mzip.rs:11:5
   |
11 | use std::str;
   |     ^^^^^^^^

warning: unused import: `std::ffi::OsStr`
  --> mzip.rs:12:5
   |
12 | use std::ffi::OsStr;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::ffi::OsStrExt`
  --> mzip.rs:13:5
   |
13 | use std::os::unix::ffi::OsStrExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `O_NDELAY`, `O_RDONLY`
  --> mzip.rs:15:12
   |
15 | use libc::{O_RDONLY, O_NDELAY};
   |            ^^^^^^^^  ^^^^^^^^

warning: unused import: `std::fmt`
  --> offset.rs:22:5
   |
22 | use std::fmt;
   |     ^^^^^^^^

warning: unused import: `std::os::raw::c_char`
 --> open_image.rs:2:5
  |
2 | use std::os::raw::c_char;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
 --> open_image.rs:3:5
  |
3 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::mem`
 --> open_image.rs:4:5
  |
4 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `Write`
  --> partition.rs:18:21
   |
18 | use std::io::{self, Write};
   |                     ^^^^^

warning: unused import: `std::mem`
  --> partition.rs:19:5
   |
19 | use std::mem;
   |     ^^^^^^^^

warning: unused import: `std::ptr`
  --> partition.rs:20:5
   |
20 | use std::ptr;
   |     ^^^^^^^^

warning: unused import: `std::time::SystemTime`
 --> plain_io.rs:5:5
  |
5 | use std::time::SystemTime;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> plain_io.rs:6:5
  |
6 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::ffi::CString`
 --> plain_io.rs:7:5
  |
7 | use std::ffi::CString;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::ffi::OsStrExt`
 --> plain_io.rs:8:5
  |
8 | use std::os::unix::ffi::OsStrExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `O_LARGEFILE`
 --> plain_io.rs:9:40
  |
9 | use libc::{O_RDONLY, O_RDWR, O_WRONLY, O_LARGEFILE, O_BINARY};
  |                                        ^^^^^^^^^^^

warning: unused import: `std::ffi::CString`
  --> precmd.rs:22:5
   |
22 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::os::unix::io::AsRawFd`
  --> privileges.rs:19:5
   |
19 | use std::os::unix::io::AsRawFd;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::process`
  --> privileges.rs:20:5
   |
20 | use std::process;
   |     ^^^^^^^^^^^^

warning: unused import: `priv_unix::*`
   --> privileges.rs:136:5
    |
136 | use priv_unix::*;
    |     ^^^^^^^^^^^^

warning: unused import: `Write`
  --> remap.rs:19:21
   |
19 | use std::io::{self, Write};
   |                     ^^^^^

warning: unused import: `std::fmt`
  --> remap.rs:20:5
   |
20 | use std::fmt;
   |     ^^^^^^^^

warning: unused import: `AsRawFd`
 --> scsi_io.rs:1:32
  |
1 | use std::os::unix::io::{RawFd, AsRawFd};
  |                                ^^^^^^^

warning: unused imports: `CStr`, `CString`
 --> scsi_io.rs:2:16
  |
2 | use std::ffi::{CStr, CString};
  |                ^^^^  ^^^^^^^

warning: unused import: `std::ptr`
 --> scsi_io.rs:3:5
  |
3 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::mem`
 --> scsi_io.rs:4:5
  |
4 | use std::mem;
  |     ^^^^^^^^

warning: unused imports: `ErrorKind`, `Error`, `self`
 --> scsi_io.rs:5:15
  |
5 | use std::io::{self, Error, ErrorKind};
  |               ^^^^  ^^^^^  ^^^^^^^^^

warning: unused import: `std::time::SystemTime`
 --> scsi_io.rs:6:5
  |
6 | use std::time::SystemTime;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `size_t`, `ssize_t`
 --> scsi_io.rs:7:35
  |
7 | use libc::{c_char, c_int, c_void, size_t, ssize_t};
  |                                   ^^^^^^  ^^^^^^^

warning: unused imports: `Read`, `SeekFrom`, `Seek`
  --> stream.rs:19:21
   |
19 | use std::io::{self, Read, Write, Seek, SeekFrom};
   |                     ^^^^         ^^^^  ^^^^^^^^

warning: unused import: `Mutex`
  --> streamcache.rs:21:22
   |
21 | use std::sync::{Arc, Mutex};
   |                      ^^^^^

warning: unused import: `std::collections::HashMap`
  --> streamcache.rs:22:5
   |
22 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ParseFloatError`
  --> strtonum.rs:19:31
   |
19 | use std::num::{ParseIntError, ParseFloatError};
   |                               ^^^^^^^^^^^^^^^

warning: unused import: `std::str::FromStr`
  --> strtonum.rs:20:5
   |
20 | use std::str::FromStr;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `Stdin`
  --> tty.rs:19:41
   |
19 | use std::io::{self, Read, Write, stdin, Stdin};
   |                                         ^^^^^

warning: unused import: `AtomicI32`
  --> tty.rs:21:37
   |
21 | use std::sync::atomic::{AtomicBool, AtomicI32, Ordering};
   |                                     ^^^^^^^^^

warning: unused import: `c_void`
  --> tty.rs:22:19
   |
22 | use libc::{c_int, c_void, signal, SIGALRM, SIG_IGN};
   |                   ^^^^^^

warning: unused import: `std::ffi::CString`
  --> tty.rs:25:5
   |
25 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::ptr`
  --> tty.rs:26:5
   |
26 | use std::ptr;
   |     ^^^^^^^^

warning: unused import: `std::mem`
  --> tty.rs:27:5
   |
27 | use std::mem;
   |     ^^^^^^^^

warning: unused import: `std::marker::PhantomData`
  --> unix2dos.rs:19:5
   |
19 | use std::marker::PhantomData;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DirEntry`, `File`
  --> unixdir.rs:18:21
   |
18 | use std::fs::{self, DirEntry, File, Metadata};
   |                     ^^^^^^^^  ^^^^

warning: unused imports: `CStr`, `CString`
 --> vfat.rs:6:16
  |
6 | use std::ffi::{CStr, CString};
  |                ^^^^  ^^^^^^^

warning: unused imports: `c_char`, `c_uchar`
 --> vfat.rs:7:20
  |
7 | use std::os::raw::{c_char, c_uchar};
  |                    ^^^^^^  ^^^^^^^

warning: unused import: `std::ptr`
 --> vfat.rs:8:5
  |
8 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::mem`
 --> vfat.rs:9:5
  |
9 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::cmp`
  --> vfat.rs:10:5
   |
10 | use std::cmp;
   |     ^^^^^^^^

warning: unused import: `std::fmt`
  --> vfat.rs:11:5
   |
11 | use std::fmt;
   |     ^^^^^^^^

warning: unused imports: `ErrorKind`, `Error`, `self`
  --> vfat.rs:12:15
   |
12 | use std::io::{self, Error, ErrorKind};
   |               ^^^^  ^^^^^  ^^^^^^^^^

warning: unused import: `std::path::Path`
  --> vfat.rs:13:5
   |
13 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `AsRawFd`
 --> xdf_io.rs:1:25
  |
1 | use std::os::unix::io::{AsRawFd, RawFd};
  |                         ^^^^^^^

warning: unused imports: `File`, `OpenOptions`
 --> xdf_io.rs:2:15
  |
2 | use std::fs::{File, OpenOptions};
  |               ^^^^  ^^^^^^^^^^^

warning: unused imports: `Read`, `SeekFrom`, `Seek`, `Write`, `self`
 --> xdf_io.rs:3:15
  |
3 | use std::io::{self, Read, Write, Seek, SeekFrom};
  |               ^^^^  ^^^^  ^^^^^  ^^^^  ^^^^^^^^

warning: unused import: `std::mem`
 --> xdf_io.rs:4:5
  |
4 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::ptr`
 --> xdf_io.rs:5:5
  |
5 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::slice`
 --> xdf_io.rs:6:5
  |
6 | use std::slice;
  |     ^^^^^^^^^^

warning: unused imports: `CStr`, `CString`
 --> xdf_io.rs:7:16
  |
7 | use std::ffi::{CStr, CString};
  |                ^^^^  ^^^^^^^

warning: unused import: `std::path::Path`
 --> xdf_io.rs:8:5
  |
8 | use std::path::Path;
  |     ^^^^^^^^^^^^^^^

warning: unused imports: `c_int`, `c_void`
 --> xdf_io.rs:9:20
  |
9 | use libc::{c_char, c_int, c_void};
  |                    ^^^^^  ^^^^^^

error[E0658]: use of unstable library feature 'io_error_more'
  --> copyfile.rs:57:32
   |
57 |                 if e.kind() == io::ErrorKind::StorageFull {
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #86442 <https://github.com/rust-lang/rust/issues/86442> for more information
   = help: add `#![feature(io_error_more)]` to the crate attributes to enable

warning: use of deprecated associated function `std::error::Error::description`: use the Display impl or to_string()
  --> missFuncs.rs:92:24
   |
92 |     std::error::Error::description(&std::io::Error::from_raw_os_error(errno))
   |                        ^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: the feature `asm` has been stable since 1.59.0 and no longer requires an attribute to enable
 --> c2rust-lib.rs:8:12
  |
8 | #![feature(asm)]
  |            ^^^
  |
  = note: `#[warn(stable_features)]` on by default

Some errors have detailed explanations: E0106, E0405, E0407, E0412, E0425, E0432, E0433, E0583, E0658.
For more information about an error, try `rustc --explain E0106`.
warning: `c2rust_out` (lib) generated 246 warnings
error: could not compile `c2rust_out` due to 376 previous errors; 246 warnings emitted
