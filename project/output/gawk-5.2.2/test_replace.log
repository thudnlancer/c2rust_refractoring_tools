   Compiling c2rust_out v0.0.0 (/home/c2rust/Desktop/project/c_prog/gawk-5.2.2)
error: expected one of `(`, `,`, `=`, `{`, or `}`, found `::`
    --> support/dfa.rs:1230:20
     |
1230 |     C2RustUnnamed_6::E,
     |                    ^^ expected one of `(`, `,`, `=`, `{`, or `}`

error: expected one of `!` or `::`, found `,`
    --> support/dfa.rs:1230:23
     |
1230 |     C2RustUnnamed_6::E,
     |                       ^ expected one of `!` or `::`

error: Binary expression is not supposed to be used
     --> debug.rs:10212:25
      |
10212 |                         compile_error!("Binary expression is not supposed to be used")
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: Conditional expression is not supposed to be used
     --> debug.rs:10226:17
      |
10226 |                 compile_error!("Conditional expression is not supposed to be used");
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused `#[macro_use]` import
  --> c2rust-lib.rs:14:1
   |
14 | #[macro_use]
   | ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused `#[macro_use]` import
  --> c2rust-lib.rs:17:1
   |
17 | #[macro_use]
   | ^^^^^^^^^^^^

warning: unnecessary parentheses around assigned value
     --> awkgram.rs:14728:49
      |
14728 | ...                   __res = (if __c < -(128 as i32) || __c > 255 as i32 {
      |                               ^
...
14732 | ...                   });
      |                        ^
      |
      = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
      |
14728 ~                                         __res = if __c < -(128 as i32) || __c > 255 as i32 {
14729 |                                             __c
14730 |                                         } else {
14731 |                                             *(*__ctype_tolower_loc()).offset(__c as isize)
14732 ~                                         };
      |

warning: unnecessary parentheses around block return value
    --> builtin.rs:3052:9
     |
3052 |         ({
     |         ^
...
3079 |         })
     |          ^
     |
help: remove these parentheses
     |
3052 ~         {
3053 |             let mut __ptr: *const i8 = ptr as *const i8;
   ...
3078 |             size.wrapping_mul(count).wrapping_sub(__cnt).wrapping_div(size)
3079 ~         }
     |

warning: unnecessary parentheses around block return value
    --> builtin.rs:3081:9
     |
3081 |         (if 0 != 0 && size == 0 as i32 as u64 || 0 != 0 && count == 0 as i32 as u64 {
     |         ^
...
3085 |         })
     |          ^
     |
help: remove these parentheses
     |
3081 ~         if 0 != 0 && size == 0 as i32 as u64 || 0 != 0 && count == 0 as i32 as u64 {
3082 |             0 as i32 as size_t
3083 |         } else {
3084 |             fwrite_unlocked(ptr, size, count, fp)
3085 ~         }
     |

warning: unnecessary parentheses around assigned value
    --> builtin.rs:4544:49
     |
4544 | ...                   __res = (if __c < -(128 as i32) || __c > 255 as i32 {
     |                               ^
...
4548 | ...                   });
     |                        ^
     |
help: remove these parentheses
     |
4544 ~                                         __res = if __c < -(128 as i32) || __c > 255 as i32 {
4545 |                                             __c
4546 |                                         } else {
4547 |                                             *(*__ctype_tolower_loc()).offset(__c as isize)
4548 ~                                         };
     |

warning: unnecessary parentheses around assigned value
    --> builtin.rs:5941:45
     |
5941 | ...                   __res = (if __c < -(128 as i32) || __c > 255 as i32 {
     |                               ^
...
5945 | ...                   });
     |                        ^
     |
help: remove these parentheses
     |
5941 ~                                     __res = if __c < -(128 as i32) || __c > 255 as i32 {
5942 |                                         __c
5943 |                                     } else {
5944 |                                         *(*__ctype_tolower_loc()).offset(__c as isize)
5945 ~                                     };
     |

warning: unnecessary parentheses around block return value
     --> builtin.rs:10875:9
      |
10875 |         (if ::core::mem::size_of::<libc::c_double>() as u64
      |         ^
...
10881 |         })
      |          ^
      |
help: remove these parentheses
      |
10875 ~         if ::core::mem::size_of::<libc::c_double>() as u64
10876 |             == ::core::mem::size_of::<libc::c_double>() as u64
    ...
10880 |             __isnanl(f128::f128::new((*n).sub.val.fltnum))
10881 ~         }
      |

warning: unnecessary parentheses around block return value
     --> builtin.rs:10888:13
      |
10888 |             (if ::core::mem::size_of::<libc::c_double>() as u64
      |             ^
...
10894 |             })
      |              ^
      |
help: remove these parentheses
      |
10888 ~             if ::core::mem::size_of::<libc::c_double>() as u64
10889 |                 == ::core::mem::size_of::<libc::c_double>() as u64
    ...
10893 |                 __isinfl(f128::f128::new((*n).sub.val.fltnum))
10894 ~             }
      |

warning: unnecessary parentheses around block return value
     --> builtin.rs:10920:17
      |
10920 |                 (if ::core::mem::size_of::<libc::c_double>() as u64
      |                 ^
...
10926 |                 })
      |                  ^
      |
help: remove these parentheses
      |
10920 ~                 if ::core::mem::size_of::<libc::c_double>() as u64
10921 |                     == ::core::mem::size_of::<libc::c_double>() as u64
    ...
10925 |                     (f128::f128::new(val)).is_sign_negative() as i32
10926 ~                 }
      |

warning: unnecessary parentheses around block return value
    --> debug.rs:3754:21
     |
3754 |                     ({
     |                     ^
...
3786 |                     })
     |                      ^
     |
help: remove these parentheses
     |
3754 ~                     {
3755 |                         let mut __ptr: *const i8 = linebuf as *const i8;
   ...
3785 |                             .wrapping_div(::core::mem::size_of::<i8>() as u64)
3786 ~                     }
     |

warning: unnecessary parentheses around block return value
    --> debug.rs:3788:21
     |
3788 |                     (if 0 != 0 && ::core::mem::size_of::<i8>() as u64 == 0 as i32 as u64
     |                     ^
...
3799 |                     })
     |                      ^
     |
help: remove these parentheses
     |
3788 ~                     if 0 != 0 && ::core::mem::size_of::<i8>() as u64 == 0 as i32 as u64
3789 |                         || 0 != 0 && len as size_t == 0 as i32 as u64
   ...
3798 |                         )
3799 ~                     }
     |

warning: unnecessary parentheses around block return value
    --> debug.rs:9073:17
     |
9073 |                 ({
     |                 ^
...
9105 |                 })
     |                  ^
     |
help: remove these parentheses
     |
9073 ~                 {
9074 |                     let mut __ptr: *const i8 = p as *const i8;
   ...
9104 |                         .wrapping_div(::core::mem::size_of::<i8>() as u64)
9105 ~                 }
     |

warning: unnecessary parentheses around block return value
    --> debug.rs:9107:17
     |
9107 |                 (if 0 != 0 && ::core::mem::size_of::<i8>() as u64 == 0 as i32 as u64
     |                 ^
...
9118 |                 })
     |                  ^
     |
help: remove these parentheses
     |
9107 ~                 if 0 != 0 && ::core::mem::size_of::<i8>() as u64 == 0 as i32 as u64
9108 |                     || 0 != 0 && cnt as size_t == 0 as i32 as u64
   ...
9117 |                     )
9118 ~                 }
     |

warning: unnecessary parentheses around assigned value
    --> eval.rs:3281:37
     |
3281 | ...                   __res = (if __c < -(128 as i32) || __c > 255 as i32 {
     |                               ^
...
3285 | ...                   });
     |                        ^
     |
help: remove these parentheses
     |
3281 ~                             __res = if __c < -(128 as i32) || __c > 255 as i32 {
3282 |                                 __c
3283 |                             } else {
3284 |                                 *(*__ctype_toupper_loc()).offset(__c as isize)
3285 ~                             };
     |

warning: unnecessary parentheses around block return value
     --> eval.rs:12842:9
      |
12842 |         (if ::core::mem::size_of::<libc::c_double>() as u64
      |         ^
...
12848 |         })
      |          ^
      |
help: remove these parentheses
      |
12842 ~         if ::core::mem::size_of::<libc::c_double>() as u64
12843 |             == ::core::mem::size_of::<libc::c_double>() as u64
    ...
12847 |             __isnanl(f128::f128::new(left))
12848 ~         }
      |

warning: unnecessary parentheses around block return value
     --> eval.rs:12855:13
      |
12855 |             (if ::core::mem::size_of::<libc::c_double>() as u64
      |             ^
...
12861 |             })
      |              ^
      |
help: remove these parentheses
      |
12855 ~             if ::core::mem::size_of::<libc::c_double>() as u64
12856 |                 == ::core::mem::size_of::<libc::c_double>() as u64
    ...
12860 |                 (f128::f128::new(left)).is_sign_negative() as i32
12861 ~             }
      |

warning: unnecessary parentheses around block return value
     --> eval.rs:12870:9
      |
12870 |         (if ::core::mem::size_of::<libc::c_double>() as u64
      |         ^
...
12876 |         })
      |          ^
      |
help: remove these parentheses
      |
12870 ~         if ::core::mem::size_of::<libc::c_double>() as u64
12871 |             == ::core::mem::size_of::<libc::c_double>() as u64
    ...
12875 |             __isnanl(f128::f128::new(right))
12876 ~         }
      |

warning: unnecessary parentheses around block return value
     --> eval.rs:12883:13
      |
12883 |             (if ::core::mem::size_of::<libc::c_double>() as u64
      |             ^
...
12889 |             })
      |              ^
      |
help: remove these parentheses
      |
12883 ~             if ::core::mem::size_of::<libc::c_double>() as u64
12884 |                 == ::core::mem::size_of::<libc::c_double>() as u64
    ...
12888 |                 (f128::f128::new(right)).is_sign_negative() as i32
12889 ~             }
      |

warning: unnecessary parentheses around assigned value
   --> extension/rwarray.rs:615:25
    |
615 |                 major = ({
    |                         ^
...
635 |                 });
    |                  ^
    |
help: remove these parentheses
    |
615 ~                 major = {
616 |                     let mut __v: u32 = 0;
  ...
634 |                     __v
635 ~                 };
    |

warning: unnecessary parentheses around assigned value
   --> extension/rwarray.rs:643:29
    |
643 |                     minor = ({
    |                             ^
...
663 |                     });
    |                      ^
    |
help: remove these parentheses
    |
643 ~                     minor = {
644 |                         let mut __v: u32 = 0;
  ...
662 |                         __v
663 ~                     };
    |

warning: unnecessary parentheses around assigned value
   --> extension/rwarray.rs:796:13
    |
796 |     count = ({
    |             ^
...
815 |     });
    |      ^
    |
help: remove these parentheses
    |
796 ~     count = {
797 |         let mut __v: u32 = 0;
  ...
814 |         __v
815 ~     };
    |

warning: unnecessary parentheses around assigned value
   --> extension/rwarray.rs:862:20
    |
862 |     indexval_len = ({
    |                    ^
...
881 |     });
    |      ^
    |
help: remove these parentheses
    |
862 ~     indexval_len = {
863 |         let mut __v: u32 = 0;
  ...
880 |         __v
881 ~     };
    |

warning: unnecessary parentheses around assigned value
   --> extension/rwarray.rs:911:16
    |
911 |         code = ({
    |                ^
...
931 |         });
    |          ^
    |
help: remove these parentheses
    |
911 ~         code = {
912 |             let mut __v: u32 = 0;
  ...
930 |             __v
931 ~         };
    |

warning: unnecessary parentheses around assigned value
   --> extension/rwarray.rs:948:20
    |
948 |             code = ({
    |                    ^
...
968 |             });
    |              ^
    |
help: remove these parentheses
    |
948 ~             code = {
949 |                 let mut __v: u32 = 0;
  ...
967 |                 __v
968 ~             };
    |

warning: unnecessary parentheses around assigned value
   --> extension/rwarray.rs:971:20
    |
971 |             code = ({
    |                    ^
...
991 |             });
    |              ^
    |
help: remove these parentheses
    |
971 ~             code = {
972 |                 let mut __v: u32 = 0;
  ...
990 |                 __v
991 ~             };
    |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:994:20
     |
994  |             code = ({
     |                    ^
...
1014 |             });
     |              ^
     |
help: remove these parentheses
     |
994  ~             code = {
995  |                 let mut __v: u32 = 0;
   ...
1013 |                 __v
1014 ~             };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1017:20
     |
1017 |             code = ({
     |                    ^
...
1037 |             });
     |              ^
     |
help: remove these parentheses
     |
1017 ~             code = {
1018 |                 let mut __v: u32 = 0;
   ...
1036 |                 __v
1037 ~             };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1040:20
     |
1040 |             code = ({
     |                    ^
...
1060 |             });
     |              ^
     |
help: remove these parentheses
     |
1040 ~             code = {
1041 |                 let mut __v: u32 = 0;
   ...
1059 |                 __v
1060 ~             };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1063:20
     |
1063 |             code = ({
     |                    ^
...
1083 |             });
     |              ^
     |
help: remove these parentheses
     |
1063 ~             code = {
1064 |                 let mut __v: u32 = 0;
   ...
1082 |                 __v
1083 ~             };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1135:15
     |
1135 |         len = ({
     |               ^
...
1155 |         });
     |          ^
     |
help: remove these parentheses
     |
1135 ~         len = {
1136 |             let mut __v: u32 = 0;
   ...
1154 |             __v
1155 ~         };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1176:15
     |
1176 |         len = ({
     |               ^
...
1196 |         });
     |          ^
     |
help: remove these parentheses
     |
1176 ~         len = {
1177 |             let mut __v: u32 = 0;
   ...
1195 |             __v
1196 ~         };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1227:16
     |
1227 |         code = ({
     |                ^
...
1247 |         });
     |          ^
     |
help: remove these parentheses
     |
1227 ~         code = {
1228 |             let mut __v: u32 = 0;
   ...
1246 |             __v
1247 ~         };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1259:29
     |
1259 |         network_order_len = ({
     |                             ^
...
1279 |         });
     |          ^
     |
help: remove these parentheses
     |
1259 ~         network_order_len = {
1260 |             let mut __v: u32 = 0;
   ...
1278 |             __v
1279 ~         };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1468:13
     |
1468 |     count = ({
     |             ^
...
1487 |     });
     |      ^
     |
help: remove these parentheses
     |
1468 ~     count = {
1469 |         let mut __v: u32 = 0;
   ...
1486 |         __v
1487 ~     };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1604:25
     |
1604 |                 major = ({
     |                         ^
...
1624 |                 });
     |                  ^
     |
help: remove these parentheses
     |
1604 ~                 major = {
1605 |                     let mut __v: u32 = 0;
   ...
1623 |                     __v
1624 ~                 };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1637:29
     |
1637 |                     minor = ({
     |                             ^
...
1662 |                     });
     |                      ^
     |
help: remove these parentheses
     |
1637 ~                     minor = {
1638 |                         let mut __v: u32 = 0;
   ...
1661 |                         __v
1662 ~                     };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1783:13
     |
1783 |     count = ({
     |             ^
...
1802 |     });
     |      ^
     |
help: remove these parentheses
     |
1783 ~     count = {
1784 |         let mut __v: u32 = 0;
   ...
1801 |         __v
1802 ~     };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1852:17
     |
1852 |     index_len = ({
     |                 ^
...
1871 |     });
     |      ^
     |
help: remove these parentheses
     |
1852 ~     index_len = {
1853 |         let mut __v: u32 = 0;
   ...
1870 |         __v
1871 ~     };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1946:12
     |
1946 |     code = ({
     |            ^
...
1965 |     });
     |      ^
     |
help: remove these parentheses
     |
1946 ~     code = {
1947 |         let mut __v: u32 = 0;
   ...
1964 |         __v
1965 ~     };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:1988:15
     |
1988 |         len = ({
     |               ^
...
2008 |         });
     |          ^
     |
help: remove these parentheses
     |
1988 ~         len = {
1989 |             let mut __v: u32 = 0;
   ...
2007 |             __v
2008 ~         };
     |

warning: unnecessary parentheses around assigned value
    --> extension/rwarray.rs:2100:15
     |
2100 |         len = ({
     |               ^
...
2120 |         });
     |          ^
     |
help: remove these parentheses
     |
2100 ~         len = {
2101 |             let mut __v: u32 = 0;
   ...
2119 |             __v
2120 ~         };
     |

warning: unnecessary parentheses around block return value
  --> floatcomp.rs:24:9
   |
24 |         (if ::core::mem::size_of::<libc::c_double>() as u64
   |         ^
...
30 |         })
   |          ^
   |
help: remove these parentheses
   |
24 ~         if ::core::mem::size_of::<libc::c_double>() as u64
25 |             == ::core::mem::size_of::<libc::c_double>() as u64
 ...
29 |             24 as i32
30 ~         }
   |

warning: unnecessary parentheses around block return value
  --> floatcomp.rs:41:21
   |
41 |                     (if ::core::mem::size_of::<libc::c_double>() as u64
   |                     ^
...
47 |                     })
   |                      ^
   |
help: remove these parentheses
   |
41 ~                     if ::core::mem::size_of::<libc::c_double>() as u64
42 |                         == ::core::mem::size_of::<libc::c_double>() as u64
 ...
46 |                         24 as i32
47 ~                     }
   |

warning: unnecessary parentheses around block return value
  --> floatcomp.rs:56:17
   |
56 |                 (if ::core::mem::size_of::<libc::c_double>() as u64
   |                 ^
...
62 |                 })
   |                  ^
   |
help: remove these parentheses
   |
56 ~                 if ::core::mem::size_of::<libc::c_double>() as u64
57 |                     == ::core::mem::size_of::<libc::c_double>() as u64
 ...
61 |                     24 as i32
62 ~                 }
   |

warning: unnecessary parentheses around function argument
    --> io.rs:6805:13
     |
6805 |             (if interesting != 0 { 0 as i32 } else { 1 as i32 }),
     |             ^                                                  ^
     |
help: remove these parentheses
     |
6805 -             (if interesting != 0 { 0 as i32 } else { 1 as i32 }),
6805 +             if interesting != 0 { 0 as i32 } else { 1 as i32 },
     |

warning: unnecessary parentheses around block return value
    --> io.rs:9004:9
     |
9004 |         ({
     |         ^
...
9031 |         })
     |          ^
     |
help: remove these parentheses
     |
9004 ~         {
9005 |             let mut __ptr: *const i8 = buf as *const i8;
   ...
9030 |             size.wrapping_mul(count).wrapping_sub(__cnt).wrapping_div(size)
9031 ~         }
     |

warning: unnecessary parentheses around block return value
    --> node.rs:2160:29
     |
2160 | ...                   (if ::core::mem::size_of::<libc::c_double>() as u64
     |                       ^
...
2166 | ...                   })
     |                        ^
     |
help: remove these parentheses
     |
2160 ~                             if ::core::mem::size_of::<libc::c_double>() as u64
2161 |                                 == ::core::mem::size_of::<libc::c_double>() as u64
   ...
2165 |                                 __isnanl(f128::f128::new((*n).sub.val.fltnum))
2166 ~                             }
     |

warning: unnecessary parentheses around block return value
    --> node.rs:2174:33
     |
2174 | ...                   (if ::core::mem::size_of::<libc::c_double>() as u64
     |                       ^
...
2181 | ...                   })
     |                        ^
     |
help: remove these parentheses
     |
2174 ~                                 if ::core::mem::size_of::<libc::c_double>() as u64
2175 |                                     == ::core::mem::size_of::<libc::c_double>() as u64
   ...
2180 |                                         as i32
2181 ~                                 }
     |

warning: unnecessary parentheses around method argument
    --> support/regex.rs:1954:45
     |
1954 | ...                   (if i_0 < mbclen {
     |                       ^
...
1958 | ...                   }),
     |                        ^
     |
help: remove these parentheses
     |
1954 ~                                             if i_0 < mbclen {
1955 |                                                 i_0
1956 |                                             } else {
1957 |                                                 mbclen.wrapping_sub(1 as libc::c_int as libc::c_ulong)
1958 ~                                             },
     |

warning: unnecessary parentheses around block return value
    --> support/regex.rs:4402:17
     |
4402 |                 (if (::core::mem::size_of::<regmatch_t>() as libc::c_ulong)
     |                 ^
...
4408 |                 })
     |                  ^
     |
help: remove these parentheses
     |
4402 ~                 if (::core::mem::size_of::<regmatch_t>() as libc::c_ulong)
4403 |                     < max_i18n_object_size
   ...
4407 |                     ::core::mem::size_of::<regmatch_t>() as libc::c_ulong
4408 ~                 }
     |

warning: unnecessary parentheses around block return value
    --> support/regex.rs:4413:13
     |
4413 |             (if (::core::mem::size_of::<re_node_set>() as libc::c_ulong)
     |             ^
...
4431 |             })
     |              ^
     |
help: remove these parentheses
     |
4413 ~             if (::core::mem::size_of::<re_node_set>() as libc::c_ulong)
4414 |                 < (if (::core::mem::size_of::<regmatch_t>() as libc::c_ulong)
   ...
4430 |                 ::core::mem::size_of::<re_node_set>() as libc::c_ulong
4431 ~             }
     |

warning: unnecessary parentheses around block return value
    --> support/regex.rs:4422:17
     |
4422 |                 (if (::core::mem::size_of::<regmatch_t>() as libc::c_ulong)
     |                 ^
...
4428 |                 })
     |                  ^
     |
help: remove these parentheses
     |
4422 ~                 if (::core::mem::size_of::<regmatch_t>() as libc::c_ulong)
4423 |                     < max_i18n_object_size
   ...
4427 |                     ::core::mem::size_of::<regmatch_t>() as libc::c_ulong
4428 ~                 }
     |

warning: unnecessary parentheses around block return value
    --> support/regex.rs:4446:17
     |
4446 |                 (if (::core::mem::size_of::<regmatch_t>() as libc::c_ulong)
     |                 ^
...
4452 |                 })
     |                  ^
     |
help: remove these parentheses
     |
4446 ~                 if (::core::mem::size_of::<regmatch_t>() as libc::c_ulong)
4447 |                     < max_i18n_object_size
   ...
4451 |                     ::core::mem::size_of::<regmatch_t>() as libc::c_ulong
4452 ~                 }
     |

warning: crate-level attribute should be in the root module
  --> extension/gawkfts.rs:10:1
   |
10 | #![feature(extern_types)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_attributes)]` on by default

warning: crate-level attribute should be in the root module
  --> extension/readdir.rs:10:1
   |
10 | #![feature(extern_types)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be in the root module
  --> extension/readdir_test.rs:10:1
   |
10 | #![feature(extern_types)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be in the root module
  --> extension/rwarray.rs:10:1
   |
10 | #![feature(asm)]
   | ^^^^^^^^^^^^^^^^

warning: the feature `asm` has been stable since 1.59.0 and no longer requires an attribute to enable
 --> c2rust-lib.rs:8:12
  |
8 | #![feature(asm)]
  |            ^^^
  |
  = note: `#[warn(stable_features)]` on by default

error[E0308]: mismatched types
     --> awkgram.rs:11994:61
      |
11994 |         *::core::mem::transmute::<&[u8; 14], &mut [i8; 14]>(b"(defrule::END OF FILE)\0")
      |          -------------------------------------------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected an array with a fixed size of 14 elements, found one with 23 elements
      |          |
      |          arguments to this function are incorrect
      |
note: function defined here
     --> /home/c2rust/.rustup/toolchains/nightly-2022-08-08-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics.rs:1469:12
      |
1469  |     pub fn transmute<T, U>(e: T) -> U;
      |            ^^^^^^^^^

error[E0641]: cannot cast to a pointer of an unknown kind
    --> builtin.rs:8062:57
     |
8062 | static mut state: *mut i8 = unsafe { istate.as_ptr() as *mut _ as *mut i8 };
     |                                                         ^^^^^^ needs more type information
     |
     = note: the type information given here is insufficient to check whether the pointer cast is valid

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:3933:23
     |
3933 |                   mode: (redirect_flags::RED_FILE as i32 | redirect_flags::RED_READ as i32)
     |  _______________________^
3934 | |                     as redirect_flags_t,
     | |_______________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:3935:29
     |
3935 |                   other_mode: (redirect_flags::RED_PIPE as i32
     |  _____________________________^
3936 | |                     | redirect_flags::RED_WRITE as i32) as redirect_flags_t,
     | |___________________________________________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:3944:25
     |
3944 |                   common: (redirect_flags::RED_FILE as i32
     |  _________________________^
3945 | |                     | redirect_flags::RED_WRITE as i32) as redirect_flags_t,
     | |___________________________________________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:3946:23
     |
3946 |                   mode: (redirect_flags::RED_FILE as i32
     |  _______________________^
3947 | |                     | redirect_flags::RED_WRITE as i32) as redirect_flags_t,
     | |___________________________________________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:3957:23
     |
3957 |                   mode: (redirect_flags::RED_FILE as i32
     |  _______________________^
3958 | |                     | redirect_flags::RED_WRITE as i32) as redirect_flags_t,
     | |___________________________________________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:3959:29
     |
3959 |                   other_mode: (redirect_flags::RED_PIPE as i32
     |  _____________________________^
3960 | |                     | redirect_flags::RED_READ as i32) as redirect_flags_t,
     | |__________________________________________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `array::flagvals` as `array::assoc_kind_t`
    --> array.rs:4174:18
     |
4174 |     assoc_kind = akind.flags as assoc_kind_t;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0054]: cannot cast as `bool`
     --> awkgram.rs:16454:15
      |
16454 |     *shadow = (*shadow as i32 | ret as i32) as bool;
      |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: compare with zero instead: `(*shadow as i32 | ret as i32) != 0`

error[E0605]: non-primitive cast: `i32` as `awkgram::opcodeval`
     --> awkgram.rs:18133:17
      |
18133 |       final_opc = (if opc as u32 == opcodeval::Op_or as i32 as u32 {
      |  _________________^
18134 | |         opcodeval::Op_or_final as i32
18135 | |     } else {
18136 | |         opcodeval::Op_and_final as i32
18137 | |     }) as OPCODE;
      | |________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `cint_array::flagvals` as `cint_array::assoc_kind_t`
    --> cint_array.rs:2431:18
     |
2431 |     assoc_kind = (*t).flags as assoc_kind_t;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i64` as `debug::opcodeval`
    --> debug.rs:8160:32
     |
8160 |                     opcode2str((*pc).d.dl as OPCODE),
     |                                ^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i64` as `eval::redirval`
    --> eval.rs:9015:57
     |
9015 |                 r = do_getline_redir((*pc).x.xl as i32, (*pc).d.dl as redirval);
     |                                                         ^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i64` as `eval::redirval`
     --> eval.rs:12269:57
      |
12269 |                 r = do_getline_redir((*pc).x.xl as i32, (*pc).d.dl as redirval);
      |                                                         ^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

warning: formatting may not be suitable for sub-register argument
   --> extension/rwarray.rs:628:36
    |
628 | ...                   "bswap {0}", inlateout(reg)
    |                              ^^^
629 | ...                   c2rust_asm_casts::AsmCast::cast_in(fresh0, fresh2) => fresh1,
    |                       -------------------------------------------------- for this argument
    |
    = note: `#[warn(asm_sub_register)]` on by default
    = help: use the `e` modifier to have the register formatted as `eax`
    = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
   --> extension/rwarray.rs:656:40
    |
656 | ...                   "bswap {0}", inlateout(reg)
    |                              ^^^
657 | ...                   c2rust_asm_casts::AsmCast::cast_in(fresh3, fresh5) =>
    |                       -------------------------------------------------- for this argument
    |
    = help: use the `e` modifier to have the register formatted as `eax`
    = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
   --> extension/rwarray.rs:809:24
    |
809 |                   "bswap {0}", inlateout(reg) c2rust_asm_casts::AsmCast::cast_in(fresh6,
    |  ________________________^^^__________________-
810 | |                 fresh8) => fresh7, options(preserves_flags, pure, readonly, att_syntax)
    | |_______________________- for this argument
    |
    = help: use the `e` modifier to have the register formatted as `eax`
    = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
   --> extension/rwarray.rs:875:24
    |
875 |                   "bswap {0}", inlateout(reg) c2rust_asm_casts::AsmCast::cast_in(fresh9,
    |  ________________________^^^__________________-
876 | |                 fresh11) => fresh10, options(preserves_flags, pure, readonly, att_syntax)
    | |________________________- for this argument
    |
    = help: use the `e` modifier to have the register formatted as `eax`
    = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
   --> extension/rwarray.rs:924:28
    |
924 |                     "bswap {0}", inlateout(reg)
    |                            ^^^
925 |                     c2rust_asm_casts::AsmCast::cast_in(fresh12, fresh14) => fresh13,
    |                     ---------------------------------------------------- for this argument
    |
    = help: use the `e` modifier to have the register formatted as `eax`
    = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
   --> extension/rwarray.rs:961:32
    |
961 |                         "bswap {0}", inlateout(reg)
    |                                ^^^
962 |                         c2rust_asm_casts::AsmCast::cast_in(fresh15, fresh17) => fresh16,
    |                         ---------------------------------------------------- for this argument
    |
    = help: use the `e` modifier to have the register formatted as `eax`
    = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
   --> extension/rwarray.rs:984:32
    |
984 |                         "bswap {0}", inlateout(reg)
    |                                ^^^
985 |                         c2rust_asm_casts::AsmCast::cast_in(fresh18, fresh20) => fresh19,
    |                         ---------------------------------------------------- for this argument
    |
    = help: use the `e` modifier to have the register formatted as `eax`
    = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1007:32
     |
1007 |                         "bswap {0}", inlateout(reg)
     |                                ^^^
1008 |                         c2rust_asm_casts::AsmCast::cast_in(fresh21, fresh23) => fresh22,
     |                         ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1030:32
     |
1030 |                         "bswap {0}", inlateout(reg)
     |                                ^^^
1031 |                         c2rust_asm_casts::AsmCast::cast_in(fresh24, fresh26) => fresh25,
     |                         ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1053:32
     |
1053 |                         "bswap {0}", inlateout(reg)
     |                                ^^^
1054 |                         c2rust_asm_casts::AsmCast::cast_in(fresh27, fresh29) => fresh28,
     |                         ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1076:32
     |
1076 |                         "bswap {0}", inlateout(reg)
     |                                ^^^
1077 |                         c2rust_asm_casts::AsmCast::cast_in(fresh30, fresh32) => fresh31,
     |                         ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1121:28
     |
1121 |                     "bswap {0}", inlateout(reg)
     |                            ^^^
1122 |                     c2rust_asm_casts::AsmCast::cast_in(fresh33, fresh35) => fresh34,
     |                     ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1148:28
     |
1148 |                     "bswap {0}", inlateout(reg)
     |                            ^^^
1149 |                     c2rust_asm_casts::AsmCast::cast_in(fresh36, fresh38) => fresh37,
     |                     ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1189:28
     |
1189 |                     "bswap {0}", inlateout(reg)
     |                            ^^^
1190 |                     c2rust_asm_casts::AsmCast::cast_in(fresh39, fresh41) => fresh40,
     |                     ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1240:28
     |
1240 |                     "bswap {0}", inlateout(reg)
     |                            ^^^
1241 |                     c2rust_asm_casts::AsmCast::cast_in(fresh42, fresh44) => fresh43,
     |                     ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1272:28
     |
1272 |                     "bswap {0}", inlateout(reg)
     |                            ^^^
1273 |                     c2rust_asm_casts::AsmCast::cast_in(fresh45, fresh47) => fresh46,
     |                     ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1481:24
     |
1481 |                   "bswap {0}", inlateout(reg) c2rust_asm_casts::AsmCast::cast_in(fresh48,
     |  ________________________^^^__________________-
1482 | |                 fresh50) => fresh49, options(preserves_flags, pure, readonly, att_syntax)
     | |________________________- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1617:36
     |
1617 | ...                   "bswap {0}", inlateout(reg)
     |                              ^^^
1618 | ...                   c2rust_asm_casts::AsmCast::cast_in(fresh51, fresh53) =>
     |                       ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1650:40
     |
1650 | ...                   "bswap {0}", inlateout(reg)
     |                              ^^^
1651 | ...                   c2rust_asm_casts::AsmCast::cast_in(fresh54, fresh56) =>
     |                       ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1796:24
     |
1796 |                   "bswap {0}", inlateout(reg) c2rust_asm_casts::AsmCast::cast_in(fresh57,
     |  ________________________^^^__________________-
1797 | |                 fresh59) => fresh58, options(preserves_flags, pure, readonly, att_syntax)
     | |________________________- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1865:24
     |
1865 |                   "bswap {0}", inlateout(reg) c2rust_asm_casts::AsmCast::cast_in(fresh60,
     |  ________________________^^^__________________-
1866 | |                 fresh62) => fresh61, options(preserves_flags, pure, readonly, att_syntax)
     | |________________________- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:1959:24
     |
1959 |                   "bswap {0}", inlateout(reg) c2rust_asm_casts::AsmCast::cast_in(fresh63,
     |  ________________________^^^__________________-
1960 | |                 fresh65) => fresh64, options(preserves_flags, pure, readonly, att_syntax)
     | |________________________- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:2001:28
     |
2001 |                     "bswap {0}", inlateout(reg)
     |                            ^^^
2002 |                     c2rust_asm_casts::AsmCast::cast_in(fresh66, fresh68) => fresh67,
     |                     ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

warning: formatting may not be suitable for sub-register argument
    --> extension/rwarray.rs:2113:28
     |
2113 |                     "bswap {0}", inlateout(reg)
     |                            ^^^
2114 |                     c2rust_asm_casts::AsmCast::cast_in(fresh69, fresh71) => fresh70,
     |                     ---------------------------------------------------- for this argument
     |
     = help: use the `e` modifier to have the register formatted as `eax`
     = help: or use the `r` modifier to keep the default formatting of `rax`

error[E0605]: non-primitive cast: `i32` as `gawkapi::awk_bool`
    --> gawkapi.rs:3335:18
     |
3335 |       (*val).u.b = (if (*node).sub.val.fltnum as i64 != 0 as i32 as i64 {
     |  __________________^
3336 | |         awk_bool::awk_true as i32
3337 | |     } else {
3338 | |         awk_bool::awk_false as i32
3339 | |     }) as awk_bool_t;
     | |____________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `gawkapi::awk_bool`
    --> gawkapi.rs:4308:12
     |
4308 |     return (*result != 0 as *mut libc::c_void) as i32 as awk_bool_t;
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `int_array::flagvals` as `int_array::assoc_kind_t`
    --> int_array.rs:2647:18
     |
2647 |     assoc_kind = (*t).flags as assoc_kind_t;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0308]: mismatched types
    --> io.rs:4132:9
     |
1806 |     redirect_append = 2,
     |     --------------- unit variant defined here
...
4131 |     match redirtype {
     |           --------- this expression has type `i32`
4132 |         redirval::redirect_append => {}
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `i32`, found enum `io::redirval`

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:4137:21
     |
4137 |               tflag = (redirect_flags::RED_PIPE as i32 | redirect_flags::RED_WRITE as i32)
     |  _____________________^
4138 | |                 as redirect_flags_t;
     | |___________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:4143:21
     |
4143 |               tflag = (redirect_flags::RED_PIPE as i32 | redirect_flags::RED_READ as i32)
     |  _____________________^
4144 | |                 as redirect_flags_t;
     | |___________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:4149:21
     |
4149 |               tflag = (redirect_flags::RED_FILE as i32 | redirect_flags::RED_READ as i32)
     |  _____________________^
4150 | |                 as redirect_flags_t;
     | |___________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:4155:21
     |
4155 |               tflag = (redirect_flags::RED_READ as i32 | redirect_flags::RED_WRITE as i32
     |  _____________________^
4156 | |                 | redirect_flags::RED_TWOWAY as i32) as redirect_flags_t;
     | |________________________________________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `io::redirect_flags`
    --> io.rs:4173:23
     |
4173 |               outflag = (redirect_flags::RED_FILE as i32
     |  _______________________^
4174 | |                 | redirect_flags::RED_WRITE as i32) as redirect_flags_t;
     | |_______________________________________________________________________^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `i32` as `profile::nodevals`
    --> profile.rs:2349:19
     |
2349 |     (*n).type_0 = type_0 as NODETYPE;
     |                   ^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `profile::nodevals` as `profile::opcodeval`
    --> profile.rs:2724:28
     |
2724 |                         || (*t1).type_0 as OPCODE as u32 == (*pc).opcode as u32
     |                            ^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `str_array::flagvals` as `str_array::assoc_kind_t`
    --> str_array.rs:2334:18
     |
2334 |     assoc_kind = (*t).flags as assoc_kind_t;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0606]: casting `str_array::reflagvals` as `f64` is invalid
    --> str_array.rs:2466:9
     |
2466 |         (*symbol).sub.nodep.reflags as libc::c_double
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: cast through an integer first

error[E0599]: no method named `set_field` found for enum `re_token_type_t` in the current scope
   --> support/regex.rs:171:23
    |
171 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^ method not found in `re_token_type_t`
...
188 | pub enum re_token_type_t {
    | ------------------------ method `set_field` not found for this enum
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `set_field`, perhaps you need to implement it:
            candidate #1: `FieldType`
    = note: this error originates in the derive macro `BitfieldStruct` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `re_token_type_t: FieldType` is not satisfied
   --> support/regex.rs:171:23
    |
171 | #[derive(Copy, Clone, BitfieldStruct)]
    |                       ^^^^^^^^^^^^^^ the trait `FieldType` is not implemented for `re_token_type_t`
    |
    = help: the following other types implement trait `FieldType`:
              bool
              i128
              i16
              i32
              i64
              i8
              u128
              u16
            and 3 others
    = note: this error originates in the derive macro `BitfieldStruct` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0054, E0277, E0308, E0599, E0605, E0606, E0641.
For more information about an error, try `rustc --explain E0054`.
warning: `c2rust_out` (lib) generated 83 warnings
error: could not compile `c2rust_out` due to 34 previous errors; 83 warnings emitted
